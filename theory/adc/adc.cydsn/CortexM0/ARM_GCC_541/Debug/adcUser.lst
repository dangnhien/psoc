ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"adcUser.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.adcUser_Init,"ax",%progbits
  20              		.align	2
  21              		.global	adcUser_Init
  22              		.code	16
  23              		.thumb_func
  24              		.type	adcUser_Init, %function
  25              	adcUser_Init:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC4\\adcUser.c"
   1:Generated_Source\PSoC4/adcUser.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/adcUser.c **** * File Name: adcUser.c
   3:Generated_Source\PSoC4/adcUser.c **** * Version 2.50
   4:Generated_Source\PSoC4/adcUser.c **** *
   5:Generated_Source\PSoC4/adcUser.c **** * Description:
   6:Generated_Source\PSoC4/adcUser.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:Generated_Source\PSoC4/adcUser.c **** *  Approximation ADC Component Component.
   8:Generated_Source\PSoC4/adcUser.c **** *
   9:Generated_Source\PSoC4/adcUser.c **** * Note:
  10:Generated_Source\PSoC4/adcUser.c **** *
  11:Generated_Source\PSoC4/adcUser.c **** ********************************************************************************
  12:Generated_Source\PSoC4/adcUser.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/adcUser.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/adcUser.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/adcUser.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/adcUser.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/adcUser.c **** 
  18:Generated_Source\PSoC4/adcUser.c **** #include "adcUser.h"
  19:Generated_Source\PSoC4/adcUser.c **** 
  20:Generated_Source\PSoC4/adcUser.c **** 
  21:Generated_Source\PSoC4/adcUser.c **** /***************************************
  22:Generated_Source\PSoC4/adcUser.c **** * Global data allocation
  23:Generated_Source\PSoC4/adcUser.c **** ***************************************/
  24:Generated_Source\PSoC4/adcUser.c **** uint8 adcUser_initVar = 0u;
  25:Generated_Source\PSoC4/adcUser.c **** volatile int16 adcUser_offset[adcUser_TOTAL_CHANNELS_NUM];
  26:Generated_Source\PSoC4/adcUser.c **** volatile int32 adcUser_countsPer10Volt[adcUser_TOTAL_CHANNELS_NUM];   /* Gain compensation */
  27:Generated_Source\PSoC4/adcUser.c **** 
  28:Generated_Source\PSoC4/adcUser.c **** 
  29:Generated_Source\PSoC4/adcUser.c **** /***************************************
  30:Generated_Source\PSoC4/adcUser.c **** * Local data allocation
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 2


  31:Generated_Source\PSoC4/adcUser.c **** ***************************************/
  32:Generated_Source\PSoC4/adcUser.c **** /* Channels configuration generated by customiser */
  33:Generated_Source\PSoC4/adcUser.c **** static const uint32 CYCODE adcUser_channelsConfig[] = { 0x00000200u };
  34:Generated_Source\PSoC4/adcUser.c **** 
  35:Generated_Source\PSoC4/adcUser.c **** 
  36:Generated_Source\PSoC4/adcUser.c **** /*******************************************************************************
  37:Generated_Source\PSoC4/adcUser.c **** * Function Name: adcUser_Start
  38:Generated_Source\PSoC4/adcUser.c **** ********************************************************************************
  39:Generated_Source\PSoC4/adcUser.c **** *
  40:Generated_Source\PSoC4/adcUser.c **** * Summary:
  41:Generated_Source\PSoC4/adcUser.c **** *  Performs all required initialization for this component
  42:Generated_Source\PSoC4/adcUser.c **** *  and enables the power. The power will be set to the appropriate
  43:Generated_Source\PSoC4/adcUser.c **** *  power based on the clock frequency.
  44:Generated_Source\PSoC4/adcUser.c **** *
  45:Generated_Source\PSoC4/adcUser.c **** * Parameters:
  46:Generated_Source\PSoC4/adcUser.c **** *  None.
  47:Generated_Source\PSoC4/adcUser.c **** *
  48:Generated_Source\PSoC4/adcUser.c **** * Return:
  49:Generated_Source\PSoC4/adcUser.c **** *  None.
  50:Generated_Source\PSoC4/adcUser.c **** *
  51:Generated_Source\PSoC4/adcUser.c **** * Global variables:
  52:Generated_Source\PSoC4/adcUser.c **** *  The adcUser_initVar variable is used to indicate when/if initial
  53:Generated_Source\PSoC4/adcUser.c **** *  configuration of this component has happened. The variable is initialized to
  54:Generated_Source\PSoC4/adcUser.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:Generated_Source\PSoC4/adcUser.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:Generated_Source\PSoC4/adcUser.c **** *  adcUser_Start() routine.
  57:Generated_Source\PSoC4/adcUser.c **** *  If re-initialization of the component is required the variable should be set
  58:Generated_Source\PSoC4/adcUser.c **** *  to zero before call of adcUser_Start() routine, or the user may call
  59:Generated_Source\PSoC4/adcUser.c **** *  adcUser_Init() and adcUser_Enable() as done in the
  60:Generated_Source\PSoC4/adcUser.c **** *  adcUser_Start() routine.
  61:Generated_Source\PSoC4/adcUser.c **** *
  62:Generated_Source\PSoC4/adcUser.c **** *******************************************************************************/
  63:Generated_Source\PSoC4/adcUser.c **** void adcUser_Start(void)
  64:Generated_Source\PSoC4/adcUser.c **** {
  65:Generated_Source\PSoC4/adcUser.c ****     /* If not Initialized then initialize all required hardware and software */
  66:Generated_Source\PSoC4/adcUser.c ****     if(adcUser_initVar == 0u)
  67:Generated_Source\PSoC4/adcUser.c ****     {
  68:Generated_Source\PSoC4/adcUser.c ****         adcUser_Init();
  69:Generated_Source\PSoC4/adcUser.c ****         adcUser_initVar = 1u;
  70:Generated_Source\PSoC4/adcUser.c ****     }
  71:Generated_Source\PSoC4/adcUser.c ****     adcUser_Enable();
  72:Generated_Source\PSoC4/adcUser.c **** }
  73:Generated_Source\PSoC4/adcUser.c **** 
  74:Generated_Source\PSoC4/adcUser.c **** 
  75:Generated_Source\PSoC4/adcUser.c **** /*******************************************************************************
  76:Generated_Source\PSoC4/adcUser.c **** * Function Name: adcUser_Init
  77:Generated_Source\PSoC4/adcUser.c **** ********************************************************************************
  78:Generated_Source\PSoC4/adcUser.c **** *
  79:Generated_Source\PSoC4/adcUser.c **** * Summary:
  80:Generated_Source\PSoC4/adcUser.c **** *  Initialize component's parameters to the parameters set by user in the
  81:Generated_Source\PSoC4/adcUser.c **** *  customizer of the component placed onto schematic. Usually called in
  82:Generated_Source\PSoC4/adcUser.c **** *  adcUser_Start().
  83:Generated_Source\PSoC4/adcUser.c **** *
  84:Generated_Source\PSoC4/adcUser.c **** * Parameters:
  85:Generated_Source\PSoC4/adcUser.c **** *  None.
  86:Generated_Source\PSoC4/adcUser.c **** *
  87:Generated_Source\PSoC4/adcUser.c **** * Return:
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 3


  88:Generated_Source\PSoC4/adcUser.c **** *  None.
  89:Generated_Source\PSoC4/adcUser.c **** *
  90:Generated_Source\PSoC4/adcUser.c **** * Global variables:
  91:Generated_Source\PSoC4/adcUser.c **** *  The adcUser_offset variable is initialized.
  92:Generated_Source\PSoC4/adcUser.c **** *
  93:Generated_Source\PSoC4/adcUser.c **** *******************************************************************************/
  94:Generated_Source\PSoC4/adcUser.c **** void adcUser_Init(void)
  95:Generated_Source\PSoC4/adcUser.c **** {
  28              		.loc 1 95 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  96:Generated_Source\PSoC4/adcUser.c ****     uint32 chNum;
  97:Generated_Source\PSoC4/adcUser.c ****     uint32 tmpRegVal;
  98:Generated_Source\PSoC4/adcUser.c ****     int32 counts;
  99:Generated_Source\PSoC4/adcUser.c **** 
 100:Generated_Source\PSoC4/adcUser.c ****     #if(adcUser_TOTAL_CHANNELS_NUM > 1u)
 101:Generated_Source\PSoC4/adcUser.c ****         static const uint8 CYCODE adcUser_InputsPlacement[] =
 102:Generated_Source\PSoC4/adcUser.c ****         {
 103:Generated_Source\PSoC4/adcUser.c ****             (uint8)(adcUser_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:Generated_Source\PSoC4/adcUser.c ****             (uint8)adcUser_cy_psoc4_sarmux_8__CH_0_PIN
 105:Generated_Source\PSoC4/adcUser.c ****             ,(uint8)(adcUser_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:Generated_Source\PSoC4/adcUser.c ****              (uint8)adcUser_cy_psoc4_sarmux_8__CH_1_PIN
 107:Generated_Source\PSoC4/adcUser.c ****             #if(adcUser_TOTAL_CHANNELS_NUM > 2u)
 108:Generated_Source\PSoC4/adcUser.c ****                 ,(uint8)(adcUser_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:Generated_Source\PSoC4/adcUser.c ****                  (uint8)adcUser_cy_psoc4_sarmux_8__CH_2_PIN
 110:Generated_Source\PSoC4/adcUser.c ****             #endif /* End adcUser_TOTAL_CHANNELS_NUM > 2u */
 111:Generated_Source\PSoC4/adcUser.c ****             #if(adcUser_TOTAL_CHANNELS_NUM > 3u)
 112:Generated_Source\PSoC4/adcUser.c ****                 ,(uint8)(adcUser_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:Generated_Source\PSoC4/adcUser.c ****                  (uint8)adcUser_cy_psoc4_sarmux_8__CH_3_PIN
 114:Generated_Source\PSoC4/adcUser.c ****             #endif /* End adcUser_TOTAL_CHANNELS_NUM > 3u */
 115:Generated_Source\PSoC4/adcUser.c ****             #if(adcUser_TOTAL_CHANNELS_NUM > 4u)
 116:Generated_Source\PSoC4/adcUser.c ****                 ,(uint8)(adcUser_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:Generated_Source\PSoC4/adcUser.c ****                  (uint8)adcUser_cy_psoc4_sarmux_8__CH_4_PIN
 118:Generated_Source\PSoC4/adcUser.c ****             #endif /* End adcUser_TOTAL_CHANNELS_NUM > 4u */
 119:Generated_Source\PSoC4/adcUser.c ****             #if(adcUser_TOTAL_CHANNELS_NUM > 5u)
 120:Generated_Source\PSoC4/adcUser.c ****                 ,(uint8)(adcUser_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:Generated_Source\PSoC4/adcUser.c ****                  (uint8)adcUser_cy_psoc4_sarmux_8__CH_5_PIN
 122:Generated_Source\PSoC4/adcUser.c ****             #endif /* End adcUser_TOTAL_CHANNELS_NUM > 5u */
 123:Generated_Source\PSoC4/adcUser.c ****             #if(adcUser_TOTAL_CHANNELS_NUM > 6u)
 124:Generated_Source\PSoC4/adcUser.c ****                 ,(uint8)(adcUser_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:Generated_Source\PSoC4/adcUser.c ****                  (uint8)adcUser_cy_psoc4_sarmux_8__CH_6_PIN
 126:Generated_Source\PSoC4/adcUser.c ****             #endif /* End adcUser_TOTAL_CHANNELS_NUM > 6u */
 127:Generated_Source\PSoC4/adcUser.c ****             #if(adcUser_TOTAL_CHANNELS_NUM > 7u)
 128:Generated_Source\PSoC4/adcUser.c ****                 ,(uint8)(adcUser_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:Generated_Source\PSoC4/adcUser.c ****                  (uint8)adcUser_cy_psoc4_sarmux_8__CH_7_PIN
 130:Generated_Source\PSoC4/adcUser.c ****             #endif /* End adcUser_TOTAL_CHANNELS_NUM > 7u */
 131:Generated_Source\PSoC4/adcUser.c ****             #if(adcUser_TOTAL_CHANNELS_NUM > 8u)
 132:Generated_Source\PSoC4/adcUser.c ****                 ,(uint8)(adcUser_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:Generated_Source\PSoC4/adcUser.c ****                  (uint8)adcUser_cy_psoc4_sarmux_8__CH_8_PIN
 134:Generated_Source\PSoC4/adcUser.c ****             #endif /* End adcUser_TOTAL_CHANNELS_NUM > 8u */
 135:Generated_Source\PSoC4/adcUser.c ****             #if(adcUser_TOTAL_CHANNELS_NUM > 9u)
 136:Generated_Source\PSoC4/adcUser.c ****                 ,(uint8)(adcUser_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 4


 137:Generated_Source\PSoC4/adcUser.c ****                  (uint8)adcUser_cy_psoc4_sarmux_8__CH_9_PIN
 138:Generated_Source\PSoC4/adcUser.c ****             #endif /* End adcUser_TOTAL_CHANNELS_NUM > 9u */
 139:Generated_Source\PSoC4/adcUser.c ****             #if(adcUser_TOTAL_CHANNELS_NUM > 10u)
 140:Generated_Source\PSoC4/adcUser.c ****                 ,(uint8)(adcUser_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
 141:Generated_Source\PSoC4/adcUser.c ****                  (uint8)adcUser_cy_psoc4_sarmux_8__CH_10_PIN
 142:Generated_Source\PSoC4/adcUser.c ****             #endif /* End adcUser_TOTAL_CHANNELS_NUM > 10u */
 143:Generated_Source\PSoC4/adcUser.c ****             #if(adcUser_TOTAL_CHANNELS_NUM > 11u)
 144:Generated_Source\PSoC4/adcUser.c ****                 ,(uint8)(adcUser_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:Generated_Source\PSoC4/adcUser.c ****                  (uint8)adcUser_cy_psoc4_sarmux_8__CH_11_PIN
 146:Generated_Source\PSoC4/adcUser.c ****             #endif /* End adcUser_TOTAL_CHANNELS_NUM > 11u */
 147:Generated_Source\PSoC4/adcUser.c ****             #if(adcUser_TOTAL_CHANNELS_NUM > 12u)
 148:Generated_Source\PSoC4/adcUser.c ****                 ,(uint8)(adcUser_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:Generated_Source\PSoC4/adcUser.c ****                  (uint8)adcUser_cy_psoc4_sarmux_8__CH_12_PIN
 150:Generated_Source\PSoC4/adcUser.c ****             #endif /* End adcUser_TOTAL_CHANNELS_NUM > 12u */
 151:Generated_Source\PSoC4/adcUser.c ****             #if(adcUser_TOTAL_CHANNELS_NUM > 13u)
 152:Generated_Source\PSoC4/adcUser.c ****                 ,(uint8)(adcUser_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:Generated_Source\PSoC4/adcUser.c ****                  (uint8)adcUser_cy_psoc4_sarmux_8__CH_13_PIN
 154:Generated_Source\PSoC4/adcUser.c ****             #endif /* End adcUser_TOTAL_CHANNELS_NUM > 13u */
 155:Generated_Source\PSoC4/adcUser.c ****             #if(adcUser_TOTAL_CHANNELS_NUM > 14u)
 156:Generated_Source\PSoC4/adcUser.c ****                 ,(uint8)(adcUser_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:Generated_Source\PSoC4/adcUser.c ****                  (uint8)adcUser_cy_psoc4_sarmux_8__CH_14_PIN
 158:Generated_Source\PSoC4/adcUser.c ****             #endif /* End adcUser_TOTAL_CHANNELS_NUM > 14u */
 159:Generated_Source\PSoC4/adcUser.c ****             #if(adcUser_TOTAL_CHANNELS_NUM > 15u)
 160:Generated_Source\PSoC4/adcUser.c ****                 ,(uint8)(adcUser_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:Generated_Source\PSoC4/adcUser.c ****                  (uint8)adcUser_cy_psoc4_sarmux_8__CH_15_PIN
 162:Generated_Source\PSoC4/adcUser.c ****             #endif /* End adcUser_TOTAL_CHANNELS_NUM > 15u */
 163:Generated_Source\PSoC4/adcUser.c ****             #if(adcUser_TOTAL_CHANNELS_NUM > 16u)
 164:Generated_Source\PSoC4/adcUser.c ****                 ,(uint8)(adcUser_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:Generated_Source\PSoC4/adcUser.c ****                  (uint8)adcUser_cy_psoc4_sarmux_8__CH_16_PIN
 166:Generated_Source\PSoC4/adcUser.c ****             #endif /* End adcUser_TOTAL_CHANNELS_NUM > 16u */
 167:Generated_Source\PSoC4/adcUser.c ****         };
 168:Generated_Source\PSoC4/adcUser.c ****     #endif /* End adcUser_TOTAL_CHANNELS_NUM > 1u */
 169:Generated_Source\PSoC4/adcUser.c **** 
 170:Generated_Source\PSoC4/adcUser.c ****     #if(adcUser_IRQ_REMOVE == 0u)
 171:Generated_Source\PSoC4/adcUser.c ****         /* Start and set interrupt vector */
 172:Generated_Source\PSoC4/adcUser.c ****         CyIntSetPriority(adcUser_INTC_NUMBER, adcUser_INTC_PRIOR_NUMBER);
  36              		.loc 1 172 0
  37 0002 0321     		movs	r1, #3
  38 0004 0E20     		movs	r0, #14
  39 0006 FFF7FEFF 		bl	CyIntSetPriority
  40              	.LVL0:
 173:Generated_Source\PSoC4/adcUser.c ****         (void)CyIntSetVector(adcUser_INTC_NUMBER, &adcUser_ISR);
  41              		.loc 1 173 0
  42 000a 2649     		ldr	r1, .L6
  43 000c 0E20     		movs	r0, #14
  44 000e FFF7FEFF 		bl	CyIntSetVector
  45              	.LVL1:
 174:Generated_Source\PSoC4/adcUser.c ****     #endif   /* End adcUser_IRQ_REMOVE */
 175:Generated_Source\PSoC4/adcUser.c **** 
 176:Generated_Source\PSoC4/adcUser.c ****     /* Init SAR and MUX registers */
 177:Generated_Source\PSoC4/adcUser.c ****     adcUser_SAR_CHAN_EN_REG = adcUser_DEFAULT_EN_CHANNELS;
  46              		.loc 1 177 0
  47 0012 0122     		movs	r2, #1
  48 0014 244B     		ldr	r3, .L6+4
  49 0016 1A60     		str	r2, [r3]
 178:Generated_Source\PSoC4/adcUser.c ****     adcUser_SAR_CTRL_REG |= adcUser_DEFAULT_CTRL_REG_CFG | 
 179:Generated_Source\PSoC4/adcUser.c ****         /* Enable the SAR internal pump when global pump is enabled */
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 5


 180:Generated_Source\PSoC4/adcUser.c ****         (((adcUser_PUMP_CTRL_REG & adcUser_PUMP_CTRL_ENABLED) != 0u) ? 
  50              		.loc 1 180 0
  51 0018 244B     		ldr	r3, .L6+8
  52 001a 1B68     		ldr	r3, [r3]
 178:Generated_Source\PSoC4/adcUser.c ****     adcUser_SAR_CTRL_REG |= adcUser_DEFAULT_CTRL_REG_CFG | 
  53              		.loc 1 178 0
  54 001c 002B     		cmp	r3, #0
  55 001e 01DA     		bge	.L5
  56 0020 2349     		ldr	r1, .L6+12
  57 0022 00E0     		b	.L2
  58              	.L5:
  59 0024 2349     		ldr	r1, .L6+16
  60              	.L2:
 178:Generated_Source\PSoC4/adcUser.c ****     adcUser_SAR_CTRL_REG |= adcUser_DEFAULT_CTRL_REG_CFG | 
  61              		.loc 1 178 0 is_stmt 0 discriminator 4
  62 0026 244A     		ldr	r2, .L6+20
  63 0028 1368     		ldr	r3, [r2]
  64 002a 0B43     		orrs	r3, r1
  65 002c 1360     		str	r3, [r2]
 181:Generated_Source\PSoC4/adcUser.c ****         adcUser_BOOSTPUMP_EN : 0u);
 182:Generated_Source\PSoC4/adcUser.c ****     adcUser_SAR_SAMPLE_CTRL_REG = adcUser_DEFAULT_SAMPLE_CTRL_REG_CFG;
  66              		.loc 1 182 0 is_stmt 1 discriminator 4
  67 002e 234A     		ldr	r2, .L6+24
  68 0030 234B     		ldr	r3, .L6+28
  69 0032 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/adcUser.c ****     adcUser_SAR_RANGE_THRES_REG = adcUser_DEFAULT_RANGE_THRES_REG_CFG;
  70              		.loc 1 183 0 discriminator 4
  71 0034 234A     		ldr	r2, .L6+32
  72 0036 244B     		ldr	r3, .L6+36
  73 0038 1A60     		str	r2, [r3]
 184:Generated_Source\PSoC4/adcUser.c ****     adcUser_SAR_RANGE_COND_REG  = adcUser_COMPARE_MODE;
  74              		.loc 1 184 0 discriminator 4
  75 003a 0023     		movs	r3, #0
  76 003c 234A     		ldr	r2, .L6+40
  77 003e 1360     		str	r3, [r2]
 185:Generated_Source\PSoC4/adcUser.c ****     adcUser_SAR_SAMPLE_TIME01_REG = adcUser_DEFAULT_SAMPLE_TIME01_REG_CFG;
  78              		.loc 1 185 0 discriminator 4
  79 0040 234A     		ldr	r2, .L6+44
  80 0042 2449     		ldr	r1, .L6+48
  81 0044 0A60     		str	r2, [r1]
 186:Generated_Source\PSoC4/adcUser.c ****     adcUser_SAR_SAMPLE_TIME23_REG = adcUser_DEFAULT_SAMPLE_TIME23_REG_CFG;
  82              		.loc 1 186 0 discriminator 4
  83 0046 2449     		ldr	r1, .L6+52
  84 0048 0A60     		str	r2, [r1]
 187:Generated_Source\PSoC4/adcUser.c ****     
 188:Generated_Source\PSoC4/adcUser.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:Generated_Source\PSoC4/adcUser.c ****     #if(adcUser_DEFAULT_MUX_SWITCH0 != 0u)
 190:Generated_Source\PSoC4/adcUser.c ****         adcUser_MUX_SWITCH0_REG |= adcUser_DEFAULT_MUX_SWITCH0;
  85              		.loc 1 190 0 discriminator 4
  86 004a 2449     		ldr	r1, .L6+56
  87 004c 0A68     		ldr	r2, [r1]
  88 004e 8020     		movs	r0, #128
  89 0050 4002     		lsls	r0, r0, #9
  90 0052 0243     		orrs	r2, r0
  91 0054 0A60     		str	r2, [r1]
 191:Generated_Source\PSoC4/adcUser.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:Generated_Source\PSoC4/adcUser.c ****         #if(adcUser_TOTAL_CHANNELS_NUM > 1u)
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 6


 193:Generated_Source\PSoC4/adcUser.c ****             adcUser_MUX_SWITCH_HW_CTRL_REG |= adcUser_DEFAULT_MUX_SWITCH0;
 194:Generated_Source\PSoC4/adcUser.c ****         #endif /* adcUser_TOTAL_CHANNELS_NUM > 1u */
 195:Generated_Source\PSoC4/adcUser.c ****     #endif /*adcUser_CHANNELS_MODE !=0 */
 196:Generated_Source\PSoC4/adcUser.c **** 
 197:Generated_Source\PSoC4/adcUser.c ****     adcUser_SAR_SATURATE_INTR_MASK_REG = 0u;
  92              		.loc 1 197 0 discriminator 4
  93 0056 224A     		ldr	r2, .L6+60
  94 0058 1360     		str	r3, [r2]
 198:Generated_Source\PSoC4/adcUser.c ****     adcUser_SAR_RANGE_INTR_MASK_REG = 0u;
  95              		.loc 1 198 0 discriminator 4
  96 005a 224A     		ldr	r2, .L6+64
  97 005c 1360     		str	r3, [r2]
 199:Generated_Source\PSoC4/adcUser.c ****     adcUser_SAR_INTR_MASK_REG = adcUser_SAR_INTR_MASK;
  98              		.loc 1 199 0 discriminator 4
  99 005e 0133     		adds	r3, r3, #1
 100 0060 214A     		ldr	r2, .L6+68
 101 0062 1360     		str	r3, [r2]
 200:Generated_Source\PSoC4/adcUser.c **** 
 201:Generated_Source\PSoC4/adcUser.c ****     #if(adcUser_CY_SAR_IP_VER == adcUser_CY_SAR_IP_VER0)
 202:Generated_Source\PSoC4/adcUser.c ****         adcUser_ANA_TRIM_REG = adcUser_TRIM_COEF;
 102              		.loc 1 202 0 discriminator 4
 103 0064 0221     		movs	r1, #2
 104 0066 214A     		ldr	r2, .L6+72
 105 0068 1160     		str	r1, [r2]
 203:Generated_Source\PSoC4/adcUser.c ****     #endif /* (adcUser_CY_SAR_IP_VER == adcUser_CY_SAR_IP_VER0) */
 204:Generated_Source\PSoC4/adcUser.c **** 
 205:Generated_Source\PSoC4/adcUser.c ****     /* Read and modify default configuration based on characterization */
 206:Generated_Source\PSoC4/adcUser.c ****     tmpRegVal = adcUser_SAR_DFT_CTRL_REG;
 106              		.loc 1 206 0 discriminator 4
 107 006a 2148     		ldr	r0, .L6+76
 108 006c 0468     		ldr	r4, [r0]
 109              	.LVL2:
 207:Generated_Source\PSoC4/adcUser.c ****     tmpRegVal &= (uint32)~adcUser_DCEN;
 110              		.loc 1 207 0 discriminator 4
 111 006e 214A     		ldr	r2, .L6+80
 112 0070 2240     		ands	r2, r4
 113              	.LVL3:
 208:Generated_Source\PSoC4/adcUser.c ****     
 209:Generated_Source\PSoC4/adcUser.c ****     #if(adcUser_CY_SAR_IP_VER == adcUser_CY_SAR_IP_VER0)
 210:Generated_Source\PSoC4/adcUser.c ****         #if(adcUser_NOMINAL_CLOCK_FREQ > (adcUser_MAX_FREQUENCY / 2))
 211:Generated_Source\PSoC4/adcUser.c ****             tmpRegVal |= adcUser_SEL_CSEL_DFT_CHAR;
 212:Generated_Source\PSoC4/adcUser.c ****         #else  /* clock speed < 9 Mhz */
 213:Generated_Source\PSoC4/adcUser.c ****             tmpRegVal |= adcUser_DLY_INC;
 114              		.loc 1 213 0 discriminator 4
 115 0072 1343     		orrs	r3, r2
 116              	.LVL4:
 214:Generated_Source\PSoC4/adcUser.c ****         #endif /* clock speed > 9 Mhz */
 215:Generated_Source\PSoC4/adcUser.c ****     #else
 216:Generated_Source\PSoC4/adcUser.c ****         #if ((adcUser_DEFAULT_VREF_SEL == adcUser__INTERNAL1024) || \
 217:Generated_Source\PSoC4/adcUser.c ****              (adcUser_DEFAULT_VREF_SEL == adcUser__INTERNALVREF))
 218:Generated_Source\PSoC4/adcUser.c ****             tmpRegVal |= adcUser_DLY_INC;
 219:Generated_Source\PSoC4/adcUser.c ****         #else
 220:Generated_Source\PSoC4/adcUser.c ****             tmpRegVal |= adcUser_DCEN;
 221:Generated_Source\PSoC4/adcUser.c ****             tmpRegVal &= (uint32)~adcUser_DLY_INC;
 222:Generated_Source\PSoC4/adcUser.c ****         #endif /* ((adcUser_DEFAULT_VREF_SEL == adcUser__INTERNAL1024) || \
 223:Generated_Source\PSoC4/adcUser.c ****                    (adcUser_DEFAULT_VREF_SEL == adcUser__INTERNALVREF)) */
 224:Generated_Source\PSoC4/adcUser.c ****     #endif /* (adcUser_CY_SAR_IP_VER == adcUser_CY_SAR_IP_VER0) */
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 7


 225:Generated_Source\PSoC4/adcUser.c ****     
 226:Generated_Source\PSoC4/adcUser.c ****     adcUser_SAR_DFT_CTRL_REG = tmpRegVal;
 117              		.loc 1 226 0 discriminator 4
 118 0074 0360     		str	r3, [r0]
 227:Generated_Source\PSoC4/adcUser.c **** 
 228:Generated_Source\PSoC4/adcUser.c ****     #if(adcUser_MAX_RESOLUTION != adcUser_RESOLUTION_12)
 229:Generated_Source\PSoC4/adcUser.c ****         adcUser_WOUNDING_REG = adcUser_ALT_WOUNDING;
 119              		.loc 1 229 0 discriminator 4
 120 0076 204B     		ldr	r3, .L6+84
 121              	.LVL5:
 122 0078 1960     		str	r1, [r3]
 123              	.LVL6:
 230:Generated_Source\PSoC4/adcUser.c ****     #endif /* adcUser_MAX_RESOLUTION != adcUser_RESOLUTION_12 */
 231:Generated_Source\PSoC4/adcUser.c **** 
 232:Generated_Source\PSoC4/adcUser.c ****     for(chNum = 0u; chNum < adcUser_TOTAL_CHANNELS_NUM; chNum++)
 124              		.loc 1 232 0 discriminator 4
 125 007a 0023     		movs	r3, #0
 126              	.LVL7:
 127 007c 0EE0     		b	.L3
 128              	.LVL8:
 129              	.L4:
 233:Generated_Source\PSoC4/adcUser.c ****     {
 234:Generated_Source\PSoC4/adcUser.c ****         tmpRegVal = (adcUser_channelsConfig[chNum] & adcUser_CHANNEL_CONFIG_MASK);
 235:Generated_Source\PSoC4/adcUser.c ****         #if(adcUser_TOTAL_CHANNELS_NUM > 1u)
 236:Generated_Source\PSoC4/adcUser.c ****             tmpRegVal |= adcUser_InputsPlacement[chNum];
 237:Generated_Source\PSoC4/adcUser.c ****         #endif /* End adcUser_TOTAL_CHANNELS_NUM > 1u */
 238:Generated_Source\PSoC4/adcUser.c ****         
 239:Generated_Source\PSoC4/adcUser.c ****         
 240:Generated_Source\PSoC4/adcUser.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:Generated_Source\PSoC4/adcUser.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:Generated_Source\PSoC4/adcUser.c ****         *  (0) and 8-bit (1) resolution.
 243:Generated_Source\PSoC4/adcUser.c ****         */
 244:Generated_Source\PSoC4/adcUser.c ****         #if((adcUser_MAX_RESOLUTION != adcUser_RESOLUTION_12) && \
 245:Generated_Source\PSoC4/adcUser.c ****             (adcUser_ALT_WOUNDING == adcUser_WOUNDING_10BIT))
 246:Generated_Source\PSoC4/adcUser.c ****             tmpRegVal &= (uint32)(~adcUser_ALT_RESOLUTION_ON);
 247:Generated_Source\PSoC4/adcUser.c ****         #endif /* adcUser_MAX_RESOLUTION != adcUser_RESOLUTION_12 */
 248:Generated_Source\PSoC4/adcUser.c **** 
 249:Generated_Source\PSoC4/adcUser.c ****         #if(adcUser_INJ_CHANNEL_ENABLED)
 250:Generated_Source\PSoC4/adcUser.c ****         if(chNum < adcUser_SEQUENCED_CHANNELS_NUM)
 251:Generated_Source\PSoC4/adcUser.c ****         #endif /* adcUser_INJ_CHANNEL_ENABLED */
 252:Generated_Source\PSoC4/adcUser.c ****         {
 253:Generated_Source\PSoC4/adcUser.c ****             CY_SET_REG32((reg32 *)(adcUser_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 130              		.loc 1 253 0
 131 007e 9A00     		lsls	r2, r3, #2
 132 0080 1E49     		ldr	r1, .L6+88
 133 0082 5118     		adds	r1, r2, r1
 134 0084 8020     		movs	r0, #128
 135 0086 8000     		lsls	r0, r0, #2
 136 0088 0860     		str	r0, [r1]
 137              	.LVL9:
 254:Generated_Source\PSoC4/adcUser.c **** 
 255:Generated_Source\PSoC4/adcUser.c ****             if((adcUser_channelsConfig[chNum] & adcUser_IS_SATURATE_EN_MASK) != 0u)
 256:Generated_Source\PSoC4/adcUser.c ****             {
 257:Generated_Source\PSoC4/adcUser.c ****                 adcUser_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 258:Generated_Source\PSoC4/adcUser.c ****             }
 259:Generated_Source\PSoC4/adcUser.c **** 
 260:Generated_Source\PSoC4/adcUser.c ****             if((adcUser_channelsConfig[chNum] & adcUser_IS_RANGE_CTRL_EN_MASK) != 0u)
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 8


 261:Generated_Source\PSoC4/adcUser.c ****             {
 262:Generated_Source\PSoC4/adcUser.c ****                 adcUser_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 263:Generated_Source\PSoC4/adcUser.c ****             }
 264:Generated_Source\PSoC4/adcUser.c ****         }
 265:Generated_Source\PSoC4/adcUser.c ****         #if(adcUser_INJ_CHANNEL_ENABLED)
 266:Generated_Source\PSoC4/adcUser.c ****             else
 267:Generated_Source\PSoC4/adcUser.c ****             {
 268:Generated_Source\PSoC4/adcUser.c ****                 CY_SET_REG32(adcUser_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | adcUser_INJ_TAILGATING);
 269:Generated_Source\PSoC4/adcUser.c **** 
 270:Generated_Source\PSoC4/adcUser.c ****                 if((adcUser_channelsConfig[chNum] & adcUser_IS_SATURATE_EN_MASK) != 0u)
 271:Generated_Source\PSoC4/adcUser.c ****                 {
 272:Generated_Source\PSoC4/adcUser.c ****                     adcUser_SAR_INTR_MASK_REG |= adcUser_INJ_SATURATE_MASK;
 273:Generated_Source\PSoC4/adcUser.c ****                 }
 274:Generated_Source\PSoC4/adcUser.c **** 
 275:Generated_Source\PSoC4/adcUser.c ****                 if((adcUser_channelsConfig[chNum] & adcUser_IS_RANGE_CTRL_EN_MASK) != 0u)
 276:Generated_Source\PSoC4/adcUser.c ****                 {
 277:Generated_Source\PSoC4/adcUser.c ****                     adcUser_SAR_INTR_MASK_REG |= adcUser_INJ_RANGE_MASK;
 278:Generated_Source\PSoC4/adcUser.c ****                 }
 279:Generated_Source\PSoC4/adcUser.c ****             }
 280:Generated_Source\PSoC4/adcUser.c ****         #endif /* adcUser_INJ_CHANNEL_ENABLED */
 281:Generated_Source\PSoC4/adcUser.c **** 
 282:Generated_Source\PSoC4/adcUser.c ****         if((adcUser_channelsConfig[chNum] & adcUser_ALT_RESOLUTION_ON) != 0u)
 283:Generated_Source\PSoC4/adcUser.c ****         {
 284:Generated_Source\PSoC4/adcUser.c ****                counts = (int32)adcUser_DEFAULT_MAX_WRK_ALT;
 285:Generated_Source\PSoC4/adcUser.c ****         }
 286:Generated_Source\PSoC4/adcUser.c ****         else
 287:Generated_Source\PSoC4/adcUser.c ****         {
 288:Generated_Source\PSoC4/adcUser.c ****                counts = (int32)adcUser_SAR_WRK_MAX_12BIT;
 289:Generated_Source\PSoC4/adcUser.c ****         }
 290:Generated_Source\PSoC4/adcUser.c **** 
 291:Generated_Source\PSoC4/adcUser.c ****         if((adcUser_channelsConfig[chNum] & adcUser_DIFFERENTIAL_EN) == 0u)
 292:Generated_Source\PSoC4/adcUser.c ****         {
 293:Generated_Source\PSoC4/adcUser.c ****             #if((adcUser_DEFAULT_SE_RESULT_FORMAT_SEL == adcUser__FSIGNED) && \
 294:Generated_Source\PSoC4/adcUser.c ****                 (adcUser_DEFAULT_NEG_INPUT_SEL == adcUser__VREF))
 295:Generated_Source\PSoC4/adcUser.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:Generated_Source\PSoC4/adcUser.c ****                 adcUser_offset[chNum] = (int16)(counts / -2);
 297:Generated_Source\PSoC4/adcUser.c ****             #else
 298:Generated_Source\PSoC4/adcUser.c ****                 adcUser_offset[chNum] = 0;
 138              		.loc 1 298 0
 139 008a 5800     		lsls	r0, r3, #1
 140 008c 0024     		movs	r4, #0
 141 008e 1C49     		ldr	r1, .L6+92
 142 0090 4452     		strh	r4, [r0, r1]
 299:Generated_Source\PSoC4/adcUser.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == adcUser__FSIGNED */
 300:Generated_Source\PSoC4/adcUser.c ****         }
 301:Generated_Source\PSoC4/adcUser.c ****         else    /* Differential channel */
 302:Generated_Source\PSoC4/adcUser.c ****         {
 303:Generated_Source\PSoC4/adcUser.c ****             #if(adcUser_DEFAULT_DIFF_RESULT_FORMAT_SEL == adcUser__FUNSIGNED)
 304:Generated_Source\PSoC4/adcUser.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:Generated_Source\PSoC4/adcUser.c ****                 adcUser_offset[chNum] = (int16)(counts / 2);
 306:Generated_Source\PSoC4/adcUser.c ****             #else
 307:Generated_Source\PSoC4/adcUser.c ****                 adcUser_offset[chNum] = 0;
 308:Generated_Source\PSoC4/adcUser.c ****             #endif /* end adcUser_DEFAULT_DIFF_RESULT_FORMAT_SEL == adcUser__FUNSIGNED */
 309:Generated_Source\PSoC4/adcUser.c ****         }
 310:Generated_Source\PSoC4/adcUser.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:Generated_Source\PSoC4/adcUser.c ****         adcUser_countsPer10Volt[chNum] = (int16)(((counts * adcUser_10MV_COUNTS) +
 143              		.loc 1 311 0
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 9


 144 0092 C220     		movs	r0, #194
 145 0094 4000     		lsls	r0, r0, #1
 146 0096 1B49     		ldr	r1, .L6+96
 147 0098 5050     		str	r0, [r2, r1]
 232:Generated_Source\PSoC4/adcUser.c ****     {
 148              		.loc 1 232 0
 149 009a 0133     		adds	r3, r3, #1
 150              	.LVL10:
 151              	.L3:
 232:Generated_Source\PSoC4/adcUser.c ****     {
 152              		.loc 1 232 0 is_stmt 0 discriminator 1
 153 009c 002B     		cmp	r3, #0
 154 009e EED0     		beq	.L4
 312:Generated_Source\PSoC4/adcUser.c ****                             adcUser_DEFAULT_VREF_MV_VALUE) / (adcUser_DEFAULT_VREF_MV_VALUE * 2));
 313:Generated_Source\PSoC4/adcUser.c ****     }
 314:Generated_Source\PSoC4/adcUser.c **** }
 155              		.loc 1 314 0 is_stmt 1
 156              		@ sp needed
 157 00a0 10BD     		pop	{r4, pc}
 158              	.L7:
 159 00a2 C046     		.align	2
 160              	.L6:
 161 00a4 00000000 		.word	adcUser_ISR
 162 00a8 20001A40 		.word	1075445792
 163 00ac 80031A40 		.word	1075446656
 164 00b0 70021053 		.word	1393558128
 165 00b4 70020053 		.word	1392509552
 166 00b8 00001A40 		.word	1075445760
 167 00bc 8C000080 		.word	-2147483508
 168 00c0 04001A40 		.word	1075445764
 169 00c4 0000FF07 		.word	134152192
 170 00c8 18001A40 		.word	1075445784
 171 00cc 1C001A40 		.word	1075445788
 172 00d0 02000200 		.word	131074
 173 00d4 10001A40 		.word	1075445776
 174 00d8 14001A40 		.word	1075445780
 175 00dc 00031A40 		.word	1075446528
 176 00e0 28021A40 		.word	1075446312
 177 00e4 38021A40 		.word	1075446328
 178 00e8 18021A40 		.word	1075446296
 179 00ec 000F1A40 		.word	1075449600
 180 00f0 30001A40 		.word	1075445808
 181 00f4 FFFFFFDF 		.word	-536870913
 182 00f8 040F1A40 		.word	1075449604
 183 00fc 80001A40 		.word	1075445888
 184 0100 00000000 		.word	adcUser_offset
 185 0104 00000000 		.word	adcUser_countsPer10Volt
 186              		.cfi_endproc
 187              	.LFE1:
 188              		.size	adcUser_Init, .-adcUser_Init
 189              		.section	.text.adcUser_Enable,"ax",%progbits
 190              		.align	2
 191              		.global	adcUser_Enable
 192              		.code	16
 193              		.thumb_func
 194              		.type	adcUser_Enable, %function
 195              	adcUser_Enable:
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 10


 196              	.LFB2:
 315:Generated_Source\PSoC4/adcUser.c **** 
 316:Generated_Source\PSoC4/adcUser.c **** /*******************************************************************************
 317:Generated_Source\PSoC4/adcUser.c **** * Function Name: ADC_SAR_1_Enable
 318:Generated_Source\PSoC4/adcUser.c **** ********************************************************************************
 319:Generated_Source\PSoC4/adcUser.c **** *
 320:Generated_Source\PSoC4/adcUser.c **** * Summary:
 321:Generated_Source\PSoC4/adcUser.c **** *  Enables the clock and analog power for SAR ADC.
 322:Generated_Source\PSoC4/adcUser.c **** *
 323:Generated_Source\PSoC4/adcUser.c **** * Parameters:
 324:Generated_Source\PSoC4/adcUser.c **** *  None.
 325:Generated_Source\PSoC4/adcUser.c **** *
 326:Generated_Source\PSoC4/adcUser.c **** * Return:
 327:Generated_Source\PSoC4/adcUser.c **** *  None.
 328:Generated_Source\PSoC4/adcUser.c **** *
 329:Generated_Source\PSoC4/adcUser.c **** *******************************************************************************/
 330:Generated_Source\PSoC4/adcUser.c **** void adcUser_Enable(void)
 331:Generated_Source\PSoC4/adcUser.c **** {
 197              		.loc 1 331 0
 198              		.cfi_startproc
 199              		@ args = 0, pretend = 0, frame = 0
 200              		@ frame_needed = 0, uses_anonymous_args = 0
 201 0000 10B5     		push	{r4, lr}
 202              		.cfi_def_cfa_offset 8
 203              		.cfi_offset 4, -8
 204              		.cfi_offset 14, -4
 332:Generated_Source\PSoC4/adcUser.c ****     if (0u == (adcUser_SAR_CTRL_REG & adcUser_ENABLE))
 205              		.loc 1 332 0
 206 0002 074B     		ldr	r3, .L10
 207 0004 1B68     		ldr	r3, [r3]
 208 0006 002B     		cmp	r3, #0
 209 0008 08DB     		blt	.L8
 333:Generated_Source\PSoC4/adcUser.c ****     {
 334:Generated_Source\PSoC4/adcUser.c ****         #if(adcUser_CY_SAR_IP_VER != adcUser_CY_SAR_IP_VER0)
 335:Generated_Source\PSoC4/adcUser.c **** 
 336:Generated_Source\PSoC4/adcUser.c ****             while (0u != (adcUser_SAR_STATUS_REG & adcUser_STATUS_BUSY))
 337:Generated_Source\PSoC4/adcUser.c ****             {
 338:Generated_Source\PSoC4/adcUser.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:Generated_Source\PSoC4/adcUser.c ****             }
 340:Generated_Source\PSoC4/adcUser.c ****         #endif /* (adcUser_CY_SAR_IP_VER != adcUser_CY_SAR_IP_VER0) */
 341:Generated_Source\PSoC4/adcUser.c ****         
 342:Generated_Source\PSoC4/adcUser.c ****         adcUser_SAR_CTRL_REG |= adcUser_ENABLE;
 210              		.loc 1 342 0
 211 000a 054A     		ldr	r2, .L10
 212 000c 1368     		ldr	r3, [r2]
 213 000e 8021     		movs	r1, #128
 214 0010 0906     		lsls	r1, r1, #24
 215 0012 0B43     		orrs	r3, r1
 216 0014 1360     		str	r3, [r2]
 343:Generated_Source\PSoC4/adcUser.c ****         
 344:Generated_Source\PSoC4/adcUser.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:Generated_Source\PSoC4/adcUser.c ****         CyDelayUs(adcUser_10US_DELAY);         
 217              		.loc 1 345 0
 218 0016 0A20     		movs	r0, #10
 219 0018 FFF7FEFF 		bl	CyDelayUs
 220              	.LVL11:
 221              	.L8:
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 11


 346:Generated_Source\PSoC4/adcUser.c ****     }
 347:Generated_Source\PSoC4/adcUser.c **** }
 222              		.loc 1 347 0
 223              		@ sp needed
 224 001c 10BD     		pop	{r4, pc}
 225              	.L11:
 226 001e C046     		.align	2
 227              	.L10:
 228 0020 00001A40 		.word	1075445760
 229              		.cfi_endproc
 230              	.LFE2:
 231              		.size	adcUser_Enable, .-adcUser_Enable
 232              		.section	.text.adcUser_Start,"ax",%progbits
 233              		.align	2
 234              		.global	adcUser_Start
 235              		.code	16
 236              		.thumb_func
 237              		.type	adcUser_Start, %function
 238              	adcUser_Start:
 239              	.LFB0:
  64:Generated_Source\PSoC4/adcUser.c ****     /* If not Initialized then initialize all required hardware and software */
 240              		.loc 1 64 0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 0
 243              		@ frame_needed = 0, uses_anonymous_args = 0
 244 0000 10B5     		push	{r4, lr}
 245              		.cfi_def_cfa_offset 8
 246              		.cfi_offset 4, -8
 247              		.cfi_offset 14, -4
  66:Generated_Source\PSoC4/adcUser.c ****     {
 248              		.loc 1 66 0
 249 0002 064B     		ldr	r3, .L14
 250 0004 1B78     		ldrb	r3, [r3]
 251 0006 002B     		cmp	r3, #0
 252 0008 04D1     		bne	.L13
  68:Generated_Source\PSoC4/adcUser.c ****         adcUser_initVar = 1u;
 253              		.loc 1 68 0
 254 000a FFF7FEFF 		bl	adcUser_Init
 255              	.LVL12:
  69:Generated_Source\PSoC4/adcUser.c ****     }
 256              		.loc 1 69 0
 257 000e 0122     		movs	r2, #1
 258 0010 024B     		ldr	r3, .L14
 259 0012 1A70     		strb	r2, [r3]
 260              	.L13:
  71:Generated_Source\PSoC4/adcUser.c **** }
 261              		.loc 1 71 0
 262 0014 FFF7FEFF 		bl	adcUser_Enable
 263              	.LVL13:
  72:Generated_Source\PSoC4/adcUser.c **** 
 264              		.loc 1 72 0
 265              		@ sp needed
 266 0018 10BD     		pop	{r4, pc}
 267              	.L15:
 268 001a C046     		.align	2
 269              	.L14:
 270 001c 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 12


 271              		.cfi_endproc
 272              	.LFE0:
 273              		.size	adcUser_Start, .-adcUser_Start
 274              		.section	.text.adcUser_Stop,"ax",%progbits
 275              		.align	2
 276              		.global	adcUser_Stop
 277              		.code	16
 278              		.thumb_func
 279              		.type	adcUser_Stop, %function
 280              	adcUser_Stop:
 281              	.LFB3:
 348:Generated_Source\PSoC4/adcUser.c **** 
 349:Generated_Source\PSoC4/adcUser.c **** 
 350:Generated_Source\PSoC4/adcUser.c **** /*******************************************************************************
 351:Generated_Source\PSoC4/adcUser.c **** * Function Name: adcUser_Stop
 352:Generated_Source\PSoC4/adcUser.c **** ********************************************************************************
 353:Generated_Source\PSoC4/adcUser.c **** *
 354:Generated_Source\PSoC4/adcUser.c **** * Summary:
 355:Generated_Source\PSoC4/adcUser.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:Generated_Source\PSoC4/adcUser.c **** *  mode.
 357:Generated_Source\PSoC4/adcUser.c **** *
 358:Generated_Source\PSoC4/adcUser.c **** * Parameters:
 359:Generated_Source\PSoC4/adcUser.c **** *  None.
 360:Generated_Source\PSoC4/adcUser.c **** *
 361:Generated_Source\PSoC4/adcUser.c **** * Return:
 362:Generated_Source\PSoC4/adcUser.c **** *  None.
 363:Generated_Source\PSoC4/adcUser.c **** *
 364:Generated_Source\PSoC4/adcUser.c **** *******************************************************************************/
 365:Generated_Source\PSoC4/adcUser.c **** void adcUser_Stop(void)
 366:Generated_Source\PSoC4/adcUser.c **** {
 282              		.loc 1 366 0
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 0
 285              		@ frame_needed = 0, uses_anonymous_args = 0
 286              		@ link register save eliminated.
 367:Generated_Source\PSoC4/adcUser.c ****     adcUser_SAR_CTRL_REG &= (uint32)~adcUser_ENABLE;
 287              		.loc 1 367 0
 288 0000 024A     		ldr	r2, .L17
 289 0002 1368     		ldr	r3, [r2]
 290 0004 5B00     		lsls	r3, r3, #1
 291 0006 5B08     		lsrs	r3, r3, #1
 292 0008 1360     		str	r3, [r2]
 368:Generated_Source\PSoC4/adcUser.c **** }
 293              		.loc 1 368 0
 294              		@ sp needed
 295 000a 7047     		bx	lr
 296              	.L18:
 297              		.align	2
 298              	.L17:
 299 000c 00001A40 		.word	1075445760
 300              		.cfi_endproc
 301              	.LFE3:
 302              		.size	adcUser_Stop, .-adcUser_Stop
 303              		.section	.text.adcUser_StartConvert,"ax",%progbits
 304              		.align	2
 305              		.global	adcUser_StartConvert
 306              		.code	16
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 13


 307              		.thumb_func
 308              		.type	adcUser_StartConvert, %function
 309              	adcUser_StartConvert:
 310              	.LFB4:
 369:Generated_Source\PSoC4/adcUser.c **** 
 370:Generated_Source\PSoC4/adcUser.c **** 
 371:Generated_Source\PSoC4/adcUser.c **** /*******************************************************************************
 372:Generated_Source\PSoC4/adcUser.c **** * Function Name: adcUser_StartConvert
 373:Generated_Source\PSoC4/adcUser.c **** ********************************************************************************
 374:Generated_Source\PSoC4/adcUser.c **** *
 375:Generated_Source\PSoC4/adcUser.c **** * Summary:
 376:Generated_Source\PSoC4/adcUser.c **** *  Description:
 377:Generated_Source\PSoC4/adcUser.c **** *  For free running mode, this API starts the conversion process and it
 378:Generated_Source\PSoC4/adcUser.c **** *  runs continuously.
 379:Generated_Source\PSoC4/adcUser.c **** *
 380:Generated_Source\PSoC4/adcUser.c **** *  In a triggered mode, this routine triggers every conversion by
 381:Generated_Source\PSoC4/adcUser.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:Generated_Source\PSoC4/adcUser.c **** *  every conversion has to start by this API.
 383:Generated_Source\PSoC4/adcUser.c **** *
 384:Generated_Source\PSoC4/adcUser.c **** * Parameters:
 385:Generated_Source\PSoC4/adcUser.c **** *  None.
 386:Generated_Source\PSoC4/adcUser.c **** *
 387:Generated_Source\PSoC4/adcUser.c **** * Return:
 388:Generated_Source\PSoC4/adcUser.c **** *  None.
 389:Generated_Source\PSoC4/adcUser.c **** *
 390:Generated_Source\PSoC4/adcUser.c **** *******************************************************************************/
 391:Generated_Source\PSoC4/adcUser.c **** void adcUser_StartConvert(void)
 392:Generated_Source\PSoC4/adcUser.c **** {
 311              		.loc 1 392 0
 312              		.cfi_startproc
 313              		@ args = 0, pretend = 0, frame = 0
 314              		@ frame_needed = 0, uses_anonymous_args = 0
 315              		@ link register save eliminated.
 393:Generated_Source\PSoC4/adcUser.c ****     #if(adcUser_DEFAULT_SAMPLE_MODE_SEL == adcUser__FREERUNNING)
 394:Generated_Source\PSoC4/adcUser.c ****         adcUser_SAR_SAMPLE_CTRL_REG |= adcUser_CONTINUOUS_EN;
 316              		.loc 1 394 0
 317 0000 034A     		ldr	r2, .L20
 318 0002 1368     		ldr	r3, [r2]
 319 0004 8021     		movs	r1, #128
 320 0006 4902     		lsls	r1, r1, #9
 321 0008 0B43     		orrs	r3, r1
 322 000a 1360     		str	r3, [r2]
 395:Generated_Source\PSoC4/adcUser.c ****     #else /* Firmware trigger */
 396:Generated_Source\PSoC4/adcUser.c ****         adcUser_SAR_START_CTRL_REG = adcUser_FW_TRIGGER;
 397:Generated_Source\PSoC4/adcUser.c ****     #endif /* End adcUser_DEFAULT_SAMPLE_MODE == adcUser__FREERUNNING */
 398:Generated_Source\PSoC4/adcUser.c **** 
 399:Generated_Source\PSoC4/adcUser.c **** }
 323              		.loc 1 399 0
 324              		@ sp needed
 325 000c 7047     		bx	lr
 326              	.L21:
 327 000e C046     		.align	2
 328              	.L20:
 329 0010 04001A40 		.word	1075445764
 330              		.cfi_endproc
 331              	.LFE4:
 332              		.size	adcUser_StartConvert, .-adcUser_StartConvert
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 14


 333              		.section	.text.adcUser_StopConvert,"ax",%progbits
 334              		.align	2
 335              		.global	adcUser_StopConvert
 336              		.code	16
 337              		.thumb_func
 338              		.type	adcUser_StopConvert, %function
 339              	adcUser_StopConvert:
 340              	.LFB5:
 400:Generated_Source\PSoC4/adcUser.c **** 
 401:Generated_Source\PSoC4/adcUser.c **** 
 402:Generated_Source\PSoC4/adcUser.c **** /*******************************************************************************
 403:Generated_Source\PSoC4/adcUser.c **** * Function Name: adcUser_StopConvert
 404:Generated_Source\PSoC4/adcUser.c **** ********************************************************************************
 405:Generated_Source\PSoC4/adcUser.c **** *
 406:Generated_Source\PSoC4/adcUser.c **** * Summary:
 407:Generated_Source\PSoC4/adcUser.c **** *  Forces the ADC to stop all conversions.
 408:Generated_Source\PSoC4/adcUser.c **** *
 409:Generated_Source\PSoC4/adcUser.c **** * Parameters:
 410:Generated_Source\PSoC4/adcUser.c **** *  None.
 411:Generated_Source\PSoC4/adcUser.c **** *
 412:Generated_Source\PSoC4/adcUser.c **** * Return:
 413:Generated_Source\PSoC4/adcUser.c **** *  None.
 414:Generated_Source\PSoC4/adcUser.c **** *
 415:Generated_Source\PSoC4/adcUser.c **** *******************************************************************************/
 416:Generated_Source\PSoC4/adcUser.c **** void adcUser_StopConvert(void)
 417:Generated_Source\PSoC4/adcUser.c **** {
 341              		.loc 1 417 0
 342              		.cfi_startproc
 343              		@ args = 0, pretend = 0, frame = 0
 344              		@ frame_needed = 0, uses_anonymous_args = 0
 345              		@ link register save eliminated.
 418:Generated_Source\PSoC4/adcUser.c ****     #if(adcUser_DEFAULT_SAMPLE_MODE_SEL == adcUser__FREERUNNING)
 419:Generated_Source\PSoC4/adcUser.c ****         adcUser_SAR_SAMPLE_CTRL_REG &= (uint32)(~adcUser_CONTINUOUS_EN);
 346              		.loc 1 419 0
 347 0000 024A     		ldr	r2, .L23
 348 0002 1168     		ldr	r1, [r2]
 349 0004 024B     		ldr	r3, .L23+4
 350 0006 0B40     		ands	r3, r1
 351 0008 1360     		str	r3, [r2]
 420:Generated_Source\PSoC4/adcUser.c ****     #endif /* adcUser_DEFAULT_SAMPLE_MODE == adcUser__FREERUNNING */
 421:Generated_Source\PSoC4/adcUser.c **** }
 352              		.loc 1 421 0
 353              		@ sp needed
 354 000a 7047     		bx	lr
 355              	.L24:
 356              		.align	2
 357              	.L23:
 358 000c 04001A40 		.word	1075445764
 359 0010 FFFFFEFF 		.word	-65537
 360              		.cfi_endproc
 361              	.LFE5:
 362              		.size	adcUser_StopConvert, .-adcUser_StopConvert
 363              		.section	.text.adcUser_IsEndConversion,"ax",%progbits
 364              		.align	2
 365              		.global	adcUser_IsEndConversion
 366              		.code	16
 367              		.thumb_func
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 15


 368              		.type	adcUser_IsEndConversion, %function
 369              	adcUser_IsEndConversion:
 370              	.LFB6:
 422:Generated_Source\PSoC4/adcUser.c **** 
 423:Generated_Source\PSoC4/adcUser.c **** 
 424:Generated_Source\PSoC4/adcUser.c **** /*******************************************************************************
 425:Generated_Source\PSoC4/adcUser.c **** * Function Name: adcUser_IsEndConversion
 426:Generated_Source\PSoC4/adcUser.c **** ********************************************************************************
 427:Generated_Source\PSoC4/adcUser.c **** *
 428:Generated_Source\PSoC4/adcUser.c **** * Summary:
 429:Generated_Source\PSoC4/adcUser.c **** *  Description: Checks for ADC end of conversion for the case one
 430:Generated_Source\PSoC4/adcUser.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:Generated_Source\PSoC4/adcUser.c **** *  as a software version of the EOC. This function provides the
 432:Generated_Source\PSoC4/adcUser.c **** *  programmer with two options. In one mode this function
 433:Generated_Source\PSoC4/adcUser.c **** *  immediately returns with the conversion status. In the other mode,
 434:Generated_Source\PSoC4/adcUser.c **** *  the function does not return (blocking) until the conversion has
 435:Generated_Source\PSoC4/adcUser.c **** *  completed.
 436:Generated_Source\PSoC4/adcUser.c **** *
 437:Generated_Source\PSoC4/adcUser.c **** * Parameters:
 438:Generated_Source\PSoC4/adcUser.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:Generated_Source\PSoC4/adcUser.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:Generated_Source\PSoC4/adcUser.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:Generated_Source\PSoC4/adcUser.c **** *                              for injection channel
 442:Generated_Source\PSoC4/adcUser.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:Generated_Source\PSoC4/adcUser.c **** *                              channel conversion
 444:Generated_Source\PSoC4/adcUser.c **** *
 445:Generated_Source\PSoC4/adcUser.c **** * Return:
 446:Generated_Source\PSoC4/adcUser.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:Generated_Source\PSoC4/adcUser.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:Generated_Source\PSoC4/adcUser.c **** *
 449:Generated_Source\PSoC4/adcUser.c **** *******************************************************************************/
 450:Generated_Source\PSoC4/adcUser.c **** uint32 adcUser_IsEndConversion(uint32 retMode)
 451:Generated_Source\PSoC4/adcUser.c **** {
 371              		.loc 1 451 0
 372              		.cfi_startproc
 373              		@ args = 0, pretend = 0, frame = 0
 374              		@ frame_needed = 0, uses_anonymous_args = 0
 375              		@ link register save eliminated.
 376              	.LVL14:
 377 0000 0200     		movs	r2, r0
 378              	.LVL15:
 452:Generated_Source\PSoC4/adcUser.c ****     uint32 status = 0u;
 453:Generated_Source\PSoC4/adcUser.c **** 
 454:Generated_Source\PSoC4/adcUser.c ****     if((retMode & (adcUser_RETURN_STATUS | adcUser_WAIT_FOR_RESULT)) != 0u)
 379              		.loc 1 454 0
 380 0002 8307     		lsls	r3, r0, #30
 381 0004 0CD0     		beq	.L29
 382              	.LVL16:
 383              	.L28:
 455:Generated_Source\PSoC4/adcUser.c ****     {
 456:Generated_Source\PSoC4/adcUser.c ****         do
 457:Generated_Source\PSoC4/adcUser.c ****         {
 458:Generated_Source\PSoC4/adcUser.c ****             status = adcUser_SAR_INTR_REG & adcUser_EOS_MASK;
 384              		.loc 1 458 0 discriminator 2
 385 0006 074B     		ldr	r3, .L30
 386 0008 1B68     		ldr	r3, [r3]
 387 000a 0120     		movs	r0, #1
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 16


 388 000c 1840     		ands	r0, r3
 389              	.LVL17:
 459:Generated_Source\PSoC4/adcUser.c ****         }while((status == 0u) && ((retMode & adcUser_WAIT_FOR_RESULT) != 0u));
 390              		.loc 1 459 0 discriminator 2
 391 000e 01D1     		bne	.L27
 392              		.loc 1 459 0 is_stmt 0 discriminator 1
 393 0010 9307     		lsls	r3, r2, #30
 394 0012 F8D4     		bmi	.L28
 395              	.L27:
 460:Generated_Source\PSoC4/adcUser.c **** 
 461:Generated_Source\PSoC4/adcUser.c ****         if(status != 0u)
 396              		.loc 1 461 0 is_stmt 1
 397 0014 0028     		cmp	r0, #0
 398 0016 04D0     		beq	.L26
 462:Generated_Source\PSoC4/adcUser.c ****         {
 463:Generated_Source\PSoC4/adcUser.c ****             /* Clear EOS bit */
 464:Generated_Source\PSoC4/adcUser.c ****             adcUser_SAR_INTR_REG = adcUser_EOS_MASK;
 399              		.loc 1 464 0
 400 0018 0122     		movs	r2, #1
 401              	.LVL18:
 402 001a 024B     		ldr	r3, .L30
 403 001c 1A60     		str	r2, [r3]
 404 001e 00E0     		b	.L26
 405              	.LVL19:
 406              	.L29:
 452:Generated_Source\PSoC4/adcUser.c **** 
 407              		.loc 1 452 0
 408 0020 0020     		movs	r0, #0
 409              	.LVL20:
 410              	.L26:
 465:Generated_Source\PSoC4/adcUser.c ****         }
 466:Generated_Source\PSoC4/adcUser.c ****     }
 467:Generated_Source\PSoC4/adcUser.c **** 
 468:Generated_Source\PSoC4/adcUser.c ****     #if(adcUser_INJ_CHANNEL_ENABLED)
 469:Generated_Source\PSoC4/adcUser.c ****         if((retMode & (adcUser_RETURN_STATUS_INJ | adcUser_WAIT_FOR_RESULT_INJ)) != 0u)
 470:Generated_Source\PSoC4/adcUser.c ****         {
 471:Generated_Source\PSoC4/adcUser.c ****             do
 472:Generated_Source\PSoC4/adcUser.c ****             {
 473:Generated_Source\PSoC4/adcUser.c ****                 status |= adcUser_SAR_INTR_REG & adcUser_INJ_EOC_MASK;
 474:Generated_Source\PSoC4/adcUser.c ****             }while(((status & adcUser_INJ_EOC_MASK) == 0u) &&
 475:Generated_Source\PSoC4/adcUser.c ****                    ((retMode & adcUser_WAIT_FOR_RESULT_INJ) != 0u));
 476:Generated_Source\PSoC4/adcUser.c **** 
 477:Generated_Source\PSoC4/adcUser.c ****             if((status & adcUser_INJ_EOC_MASK) != 0u)
 478:Generated_Source\PSoC4/adcUser.c ****             {
 479:Generated_Source\PSoC4/adcUser.c ****                 /* Clear Injection EOS bit */
 480:Generated_Source\PSoC4/adcUser.c ****                 adcUser_SAR_INTR_REG = adcUser_INJ_EOC_MASK;
 481:Generated_Source\PSoC4/adcUser.c ****             }
 482:Generated_Source\PSoC4/adcUser.c ****         }
 483:Generated_Source\PSoC4/adcUser.c ****     #endif /* adcUser_INJ_CHANNEL_ENABLED */
 484:Generated_Source\PSoC4/adcUser.c **** 
 485:Generated_Source\PSoC4/adcUser.c ****     return (status);
 486:Generated_Source\PSoC4/adcUser.c **** }
 411              		.loc 1 486 0
 412              		@ sp needed
 413 0022 7047     		bx	lr
 414              	.L31:
 415              		.align	2
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 17


 416              	.L30:
 417 0024 10021A40 		.word	1075446288
 418              		.cfi_endproc
 419              	.LFE6:
 420              		.size	adcUser_IsEndConversion, .-adcUser_IsEndConversion
 421              		.section	.text.adcUser_GetResult16,"ax",%progbits
 422              		.align	2
 423              		.global	adcUser_GetResult16
 424              		.code	16
 425              		.thumb_func
 426              		.type	adcUser_GetResult16, %function
 427              	adcUser_GetResult16:
 428              	.LFB7:
 487:Generated_Source\PSoC4/adcUser.c **** 
 488:Generated_Source\PSoC4/adcUser.c **** 
 489:Generated_Source\PSoC4/adcUser.c **** /*******************************************************************************
 490:Generated_Source\PSoC4/adcUser.c **** * Function Name: adcUser_GetResult16
 491:Generated_Source\PSoC4/adcUser.c **** ********************************************************************************
 492:Generated_Source\PSoC4/adcUser.c **** *
 493:Generated_Source\PSoC4/adcUser.c **** * Summary:
 494:Generated_Source\PSoC4/adcUser.c **** *  Gets the data available in the SAR DATA register.
 495:Generated_Source\PSoC4/adcUser.c **** *
 496:Generated_Source\PSoC4/adcUser.c **** * Parameters:
 497:Generated_Source\PSoC4/adcUser.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:Generated_Source\PSoC4/adcUser.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:Generated_Source\PSoC4/adcUser.c **** *
 500:Generated_Source\PSoC4/adcUser.c **** * Return:
 501:Generated_Source\PSoC4/adcUser.c **** *  Returns converted data as a signed 16-bit integer
 502:Generated_Source\PSoC4/adcUser.c **** *
 503:Generated_Source\PSoC4/adcUser.c **** *******************************************************************************/
 504:Generated_Source\PSoC4/adcUser.c **** int16 adcUser_GetResult16(uint32 chan)
 505:Generated_Source\PSoC4/adcUser.c **** {
 429              		.loc 1 505 0
 430              		.cfi_startproc
 431              		@ args = 0, pretend = 0, frame = 0
 432              		@ frame_needed = 0, uses_anonymous_args = 0
 433              	.LVL21:
 434 0000 10B5     		push	{r4, lr}
 435              		.cfi_def_cfa_offset 8
 436              		.cfi_offset 4, -8
 437              		.cfi_offset 14, -4
 438 0002 041E     		subs	r4, r0, #0
 506:Generated_Source\PSoC4/adcUser.c ****     uint32 result;
 507:Generated_Source\PSoC4/adcUser.c **** 
 508:Generated_Source\PSoC4/adcUser.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:Generated_Source\PSoC4/adcUser.c ****     CYASSERT(chan < adcUser_TOTAL_CHANNELS_NUM);
 439              		.loc 1 509 0
 440 0004 02D0     		beq	.L33
 441              		.loc 1 509 0 is_stmt 0 discriminator 1
 442 0006 0020     		movs	r0, #0
 443              	.LVL22:
 444 0008 FFF7FEFF 		bl	CyHalt
 445              	.LVL23:
 446              	.L33:
 510:Generated_Source\PSoC4/adcUser.c **** 
 511:Generated_Source\PSoC4/adcUser.c ****     if(chan < adcUser_SEQUENCED_CHANNELS_NUM)
 447              		.loc 1 511 0 is_stmt 1
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 18


 448 000c 002C     		cmp	r4, #0
 449 000e 07D1     		bne	.L35
 512:Generated_Source\PSoC4/adcUser.c ****     {
 513:Generated_Source\PSoC4/adcUser.c ****         result = CY_GET_REG32((reg32 *)(adcUser_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 450              		.loc 1 513 0
 451 0010 A400     		lsls	r4, r4, #2
 452              	.LVL24:
 453 0012 054B     		ldr	r3, .L36
 454 0014 9C46     		mov	ip, r3
 455 0016 6444     		add	r4, r4, ip
 456 0018 2068     		ldr	r0, [r4]
 457 001a 0004     		lsls	r0, r0, #16
 458 001c 000C     		lsrs	r0, r0, #16
 459              	.LVL25:
 460 001e 00E0     		b	.L34
 461              	.LVL26:
 462              	.L35:
 514:Generated_Source\PSoC4/adcUser.c ****                 adcUser_RESULT_MASK;
 515:Generated_Source\PSoC4/adcUser.c ****     }
 516:Generated_Source\PSoC4/adcUser.c ****     else
 517:Generated_Source\PSoC4/adcUser.c ****     {
 518:Generated_Source\PSoC4/adcUser.c ****         #if(adcUser_INJ_CHANNEL_ENABLED)
 519:Generated_Source\PSoC4/adcUser.c ****             result = adcUser_SAR_INJ_RESULT_REG & adcUser_RESULT_MASK;
 520:Generated_Source\PSoC4/adcUser.c ****         #else
 521:Generated_Source\PSoC4/adcUser.c ****             result = 0u;
 463              		.loc 1 521 0
 464 0020 0020     		movs	r0, #0
 465              	.LVL27:
 466              	.L34:
 522:Generated_Source\PSoC4/adcUser.c ****         #endif /* adcUser_INJ_CHANNEL_ENABLED */
 523:Generated_Source\PSoC4/adcUser.c ****     }
 524:Generated_Source\PSoC4/adcUser.c **** 
 525:Generated_Source\PSoC4/adcUser.c ****     return ( (int16)result );
 467              		.loc 1 525 0
 468 0022 00B2     		sxth	r0, r0
 469              	.LVL28:
 526:Generated_Source\PSoC4/adcUser.c **** }
 470              		.loc 1 526 0
 471              		@ sp needed
 472 0024 10BD     		pop	{r4, pc}
 473              	.L37:
 474 0026 C046     		.align	2
 475              	.L36:
 476 0028 80011A40 		.word	1075446144
 477              		.cfi_endproc
 478              	.LFE7:
 479              		.size	adcUser_GetResult16, .-adcUser_GetResult16
 480              		.section	.text.adcUser_SetChanMask,"ax",%progbits
 481              		.align	2
 482              		.global	adcUser_SetChanMask
 483              		.code	16
 484              		.thumb_func
 485              		.type	adcUser_SetChanMask, %function
 486              	adcUser_SetChanMask:
 487              	.LFB8:
 527:Generated_Source\PSoC4/adcUser.c **** 
 528:Generated_Source\PSoC4/adcUser.c **** 
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 19


 529:Generated_Source\PSoC4/adcUser.c **** /*******************************************************************************
 530:Generated_Source\PSoC4/adcUser.c **** * Function Name: adcUser_SetChanMask
 531:Generated_Source\PSoC4/adcUser.c **** ********************************************************************************
 532:Generated_Source\PSoC4/adcUser.c **** *
 533:Generated_Source\PSoC4/adcUser.c **** * Summary:
 534:Generated_Source\PSoC4/adcUser.c **** *  Sets the channel enable mask.
 535:Generated_Source\PSoC4/adcUser.c **** *
 536:Generated_Source\PSoC4/adcUser.c **** * Parameters:
 537:Generated_Source\PSoC4/adcUser.c **** *  mask: Sets which channels that will be
 538:Generated_Source\PSoC4/adcUser.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:Generated_Source\PSoC4/adcUser.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:Generated_Source\PSoC4/adcUser.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:Generated_Source\PSoC4/adcUser.c **** *  This API will not enable the injection channel.
 542:Generated_Source\PSoC4/adcUser.c **** *  Examples: If the component is setup to sequence through 8
 543:Generated_Source\PSoC4/adcUser.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:Generated_Source\PSoC4/adcUser.c **** *
 545:Generated_Source\PSoC4/adcUser.c **** * Return:
 546:Generated_Source\PSoC4/adcUser.c **** *  None.
 547:Generated_Source\PSoC4/adcUser.c **** *
 548:Generated_Source\PSoC4/adcUser.c **** *******************************************************************************/
 549:Generated_Source\PSoC4/adcUser.c **** void adcUser_SetChanMask(uint32 mask)
 550:Generated_Source\PSoC4/adcUser.c **** {
 488              		.loc 1 550 0
 489              		.cfi_startproc
 490              		@ args = 0, pretend = 0, frame = 0
 491              		@ frame_needed = 0, uses_anonymous_args = 0
 492              		@ link register save eliminated.
 493              	.LVL29:
 551:Generated_Source\PSoC4/adcUser.c ****     adcUser_SAR_CHAN_EN_REG = mask & adcUser_MAX_CHANNELS_EN_MASK;
 494              		.loc 1 551 0
 495 0000 0123     		movs	r3, #1
 496 0002 1840     		ands	r0, r3
 497              	.LVL30:
 498 0004 014B     		ldr	r3, .L39
 499 0006 1860     		str	r0, [r3]
 552:Generated_Source\PSoC4/adcUser.c **** }
 500              		.loc 1 552 0
 501              		@ sp needed
 502 0008 7047     		bx	lr
 503              	.L40:
 504 000a C046     		.align	2
 505              	.L39:
 506 000c 20001A40 		.word	1075445792
 507              		.cfi_endproc
 508              	.LFE8:
 509              		.size	adcUser_SetChanMask, .-adcUser_SetChanMask
 510              		.section	.text.adcUser_SetLowLimit,"ax",%progbits
 511              		.align	2
 512              		.global	adcUser_SetLowLimit
 513              		.code	16
 514              		.thumb_func
 515              		.type	adcUser_SetLowLimit, %function
 516              	adcUser_SetLowLimit:
 517              	.LFB9:
 553:Generated_Source\PSoC4/adcUser.c **** 
 554:Generated_Source\PSoC4/adcUser.c **** #if(adcUser_INJ_CHANNEL_ENABLED)
 555:Generated_Source\PSoC4/adcUser.c **** 
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 20


 556:Generated_Source\PSoC4/adcUser.c **** 
 557:Generated_Source\PSoC4/adcUser.c ****     /*******************************************************************************
 558:Generated_Source\PSoC4/adcUser.c ****     * Function Name: adcUser_EnableInjection
 559:Generated_Source\PSoC4/adcUser.c ****     ********************************************************************************
 560:Generated_Source\PSoC4/adcUser.c ****     *
 561:Generated_Source\PSoC4/adcUser.c ****     * Summary:
 562:Generated_Source\PSoC4/adcUser.c ****     *  Enables the injection channel for the next scan only.
 563:Generated_Source\PSoC4/adcUser.c ****     *
 564:Generated_Source\PSoC4/adcUser.c ****     * Parameters:
 565:Generated_Source\PSoC4/adcUser.c ****     *  None.
 566:Generated_Source\PSoC4/adcUser.c ****     *
 567:Generated_Source\PSoC4/adcUser.c ****     * Return:
 568:Generated_Source\PSoC4/adcUser.c ****     *  None.
 569:Generated_Source\PSoC4/adcUser.c ****     *
 570:Generated_Source\PSoC4/adcUser.c ****     *******************************************************************************/
 571:Generated_Source\PSoC4/adcUser.c ****     void adcUser_EnableInjection(void)
 572:Generated_Source\PSoC4/adcUser.c ****     {
 573:Generated_Source\PSoC4/adcUser.c ****         adcUser_SAR_INJ_CHAN_CONFIG_REG |= adcUser_INJ_CHAN_EN;
 574:Generated_Source\PSoC4/adcUser.c ****     }
 575:Generated_Source\PSoC4/adcUser.c **** 
 576:Generated_Source\PSoC4/adcUser.c **** #endif /* adcUser_INJ_CHANNEL_ENABLED */
 577:Generated_Source\PSoC4/adcUser.c **** 
 578:Generated_Source\PSoC4/adcUser.c **** 
 579:Generated_Source\PSoC4/adcUser.c **** /*******************************************************************************
 580:Generated_Source\PSoC4/adcUser.c **** * Function Name: adcUser_SetLowLimit
 581:Generated_Source\PSoC4/adcUser.c **** ********************************************************************************
 582:Generated_Source\PSoC4/adcUser.c **** *
 583:Generated_Source\PSoC4/adcUser.c **** * Summary:
 584:Generated_Source\PSoC4/adcUser.c **** *  Sets the low limit parameter for a limit condition.
 585:Generated_Source\PSoC4/adcUser.c **** *
 586:Generated_Source\PSoC4/adcUser.c **** * Parameters:
 587:Generated_Source\PSoC4/adcUser.c **** *  lowLimit: The low limit for a limit condition.
 588:Generated_Source\PSoC4/adcUser.c **** *
 589:Generated_Source\PSoC4/adcUser.c **** * Return:
 590:Generated_Source\PSoC4/adcUser.c **** *  None.
 591:Generated_Source\PSoC4/adcUser.c **** *
 592:Generated_Source\PSoC4/adcUser.c **** *******************************************************************************/
 593:Generated_Source\PSoC4/adcUser.c **** void adcUser_SetLowLimit(uint32 lowLimit)
 594:Generated_Source\PSoC4/adcUser.c **** {
 518              		.loc 1 594 0
 519              		.cfi_startproc
 520              		@ args = 0, pretend = 0, frame = 0
 521              		@ frame_needed = 0, uses_anonymous_args = 0
 522              		@ link register save eliminated.
 523              	.LVL31:
 595:Generated_Source\PSoC4/adcUser.c ****     adcUser_SAR_RANGE_THRES_REG &= (uint32)(~adcUser_RANGE_LOW_MASK);
 524              		.loc 1 595 0
 525 0000 054A     		ldr	r2, .L42
 526 0002 1368     		ldr	r3, [r2]
 527 0004 1B0C     		lsrs	r3, r3, #16
 528 0006 1B04     		lsls	r3, r3, #16
 529 0008 1360     		str	r3, [r2]
 596:Generated_Source\PSoC4/adcUser.c ****     adcUser_SAR_RANGE_THRES_REG |= lowLimit & adcUser_RANGE_LOW_MASK;
 530              		.loc 1 596 0
 531 000a 1368     		ldr	r3, [r2]
 532 000c 0004     		lsls	r0, r0, #16
 533              	.LVL32:
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 21


 534 000e 000C     		lsrs	r0, r0, #16
 535 0010 1843     		orrs	r0, r3
 536 0012 1060     		str	r0, [r2]
 597:Generated_Source\PSoC4/adcUser.c **** }
 537              		.loc 1 597 0
 538              		@ sp needed
 539 0014 7047     		bx	lr
 540              	.L43:
 541 0016 C046     		.align	2
 542              	.L42:
 543 0018 18001A40 		.word	1075445784
 544              		.cfi_endproc
 545              	.LFE9:
 546              		.size	adcUser_SetLowLimit, .-adcUser_SetLowLimit
 547              		.section	.text.adcUser_SetHighLimit,"ax",%progbits
 548              		.align	2
 549              		.global	adcUser_SetHighLimit
 550              		.code	16
 551              		.thumb_func
 552              		.type	adcUser_SetHighLimit, %function
 553              	adcUser_SetHighLimit:
 554              	.LFB10:
 598:Generated_Source\PSoC4/adcUser.c **** 
 599:Generated_Source\PSoC4/adcUser.c **** 
 600:Generated_Source\PSoC4/adcUser.c **** /*******************************************************************************
 601:Generated_Source\PSoC4/adcUser.c **** * Function Name: adcUser_SetHighLimit
 602:Generated_Source\PSoC4/adcUser.c **** ********************************************************************************
 603:Generated_Source\PSoC4/adcUser.c **** *
 604:Generated_Source\PSoC4/adcUser.c **** * Summary:
 605:Generated_Source\PSoC4/adcUser.c **** *  Sets the low limit parameter for a limit condition.
 606:Generated_Source\PSoC4/adcUser.c **** *
 607:Generated_Source\PSoC4/adcUser.c **** * Parameters:
 608:Generated_Source\PSoC4/adcUser.c **** *  highLimit: The high limit for a limit condition.
 609:Generated_Source\PSoC4/adcUser.c **** *
 610:Generated_Source\PSoC4/adcUser.c **** * Return:
 611:Generated_Source\PSoC4/adcUser.c **** *  None.
 612:Generated_Source\PSoC4/adcUser.c **** *
 613:Generated_Source\PSoC4/adcUser.c **** *******************************************************************************/
 614:Generated_Source\PSoC4/adcUser.c **** void adcUser_SetHighLimit(uint32 highLimit)
 615:Generated_Source\PSoC4/adcUser.c **** {
 555              		.loc 1 615 0
 556              		.cfi_startproc
 557              		@ args = 0, pretend = 0, frame = 0
 558              		@ frame_needed = 0, uses_anonymous_args = 0
 559              		@ link register save eliminated.
 560              	.LVL33:
 616:Generated_Source\PSoC4/adcUser.c ****     adcUser_SAR_RANGE_THRES_REG &= (uint32)(~adcUser_RANGE_HIGH_MASK);
 561              		.loc 1 616 0
 562 0000 044A     		ldr	r2, .L45
 563 0002 1368     		ldr	r3, [r2]
 564 0004 1B04     		lsls	r3, r3, #16
 565 0006 1B0C     		lsrs	r3, r3, #16
 566 0008 1360     		str	r3, [r2]
 617:Generated_Source\PSoC4/adcUser.c ****     adcUser_SAR_RANGE_THRES_REG |= (uint32)(highLimit << adcUser_RANGE_HIGH_OFFSET);
 567              		.loc 1 617 0
 568 000a 1368     		ldr	r3, [r2]
 569 000c 0004     		lsls	r0, r0, #16
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 22


 570              	.LVL34:
 571 000e 1843     		orrs	r0, r3
 572 0010 1060     		str	r0, [r2]
 618:Generated_Source\PSoC4/adcUser.c **** }
 573              		.loc 1 618 0
 574              		@ sp needed
 575 0012 7047     		bx	lr
 576              	.L46:
 577              		.align	2
 578              	.L45:
 579 0014 18001A40 		.word	1075445784
 580              		.cfi_endproc
 581              	.LFE10:
 582              		.size	adcUser_SetHighLimit, .-adcUser_SetHighLimit
 583              		.section	.text.adcUser_SetLimitMask,"ax",%progbits
 584              		.align	2
 585              		.global	adcUser_SetLimitMask
 586              		.code	16
 587              		.thumb_func
 588              		.type	adcUser_SetLimitMask, %function
 589              	adcUser_SetLimitMask:
 590              	.LFB11:
 619:Generated_Source\PSoC4/adcUser.c **** 
 620:Generated_Source\PSoC4/adcUser.c **** 
 621:Generated_Source\PSoC4/adcUser.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/adcUser.c **** * Function Name: adcUser_SetLimitMask
 623:Generated_Source\PSoC4/adcUser.c **** ********************************************************************************
 624:Generated_Source\PSoC4/adcUser.c **** *
 625:Generated_Source\PSoC4/adcUser.c **** * Summary:
 626:Generated_Source\PSoC4/adcUser.c **** *  Sets the channel limit condition mask.
 627:Generated_Source\PSoC4/adcUser.c **** *
 628:Generated_Source\PSoC4/adcUser.c **** * Parameters:
 629:Generated_Source\PSoC4/adcUser.c **** *  mask: Sets which channels that may cause a
 630:Generated_Source\PSoC4/adcUser.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:Generated_Source\PSoC4/adcUser.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:Generated_Source\PSoC4/adcUser.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:Generated_Source\PSoC4/adcUser.c **** *
 634:Generated_Source\PSoC4/adcUser.c **** * Return:
 635:Generated_Source\PSoC4/adcUser.c **** *  None.
 636:Generated_Source\PSoC4/adcUser.c **** *
 637:Generated_Source\PSoC4/adcUser.c **** *******************************************************************************/
 638:Generated_Source\PSoC4/adcUser.c **** void adcUser_SetLimitMask(uint32 mask)
 639:Generated_Source\PSoC4/adcUser.c **** {
 591              		.loc 1 639 0
 592              		.cfi_startproc
 593              		@ args = 0, pretend = 0, frame = 0
 594              		@ frame_needed = 0, uses_anonymous_args = 0
 595              		@ link register save eliminated.
 596              	.LVL35:
 640:Generated_Source\PSoC4/adcUser.c ****     adcUser_SAR_RANGE_INTR_MASK_REG = mask & adcUser_MAX_CHANNELS_EN_MASK;
 597              		.loc 1 640 0
 598 0000 0123     		movs	r3, #1
 599 0002 1840     		ands	r0, r3
 600              	.LVL36:
 601 0004 014B     		ldr	r3, .L48
 602 0006 1860     		str	r0, [r3]
 641:Generated_Source\PSoC4/adcUser.c **** }
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 23


 603              		.loc 1 641 0
 604              		@ sp needed
 605 0008 7047     		bx	lr
 606              	.L49:
 607 000a C046     		.align	2
 608              	.L48:
 609 000c 38021A40 		.word	1075446328
 610              		.cfi_endproc
 611              	.LFE11:
 612              		.size	adcUser_SetLimitMask, .-adcUser_SetLimitMask
 613              		.section	.text.adcUser_SetSatMask,"ax",%progbits
 614              		.align	2
 615              		.global	adcUser_SetSatMask
 616              		.code	16
 617              		.thumb_func
 618              		.type	adcUser_SetSatMask, %function
 619              	adcUser_SetSatMask:
 620              	.LFB12:
 642:Generated_Source\PSoC4/adcUser.c **** 
 643:Generated_Source\PSoC4/adcUser.c **** 
 644:Generated_Source\PSoC4/adcUser.c **** /*******************************************************************************
 645:Generated_Source\PSoC4/adcUser.c **** * Function Name: adcUser_SetSatMask
 646:Generated_Source\PSoC4/adcUser.c **** ********************************************************************************
 647:Generated_Source\PSoC4/adcUser.c **** *
 648:Generated_Source\PSoC4/adcUser.c **** * Summary:
 649:Generated_Source\PSoC4/adcUser.c **** *  Sets the channel saturation event mask.
 650:Generated_Source\PSoC4/adcUser.c **** *
 651:Generated_Source\PSoC4/adcUser.c **** * Parameters:
 652:Generated_Source\PSoC4/adcUser.c **** *  mask: Sets which channels that may cause a
 653:Generated_Source\PSoC4/adcUser.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:Generated_Source\PSoC4/adcUser.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:Generated_Source\PSoC4/adcUser.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:Generated_Source\PSoC4/adcUser.c **** *
 657:Generated_Source\PSoC4/adcUser.c **** * Return:
 658:Generated_Source\PSoC4/adcUser.c **** *  None.
 659:Generated_Source\PSoC4/adcUser.c **** *
 660:Generated_Source\PSoC4/adcUser.c **** *******************************************************************************/
 661:Generated_Source\PSoC4/adcUser.c **** void adcUser_SetSatMask(uint32 mask)
 662:Generated_Source\PSoC4/adcUser.c **** {
 621              		.loc 1 662 0
 622              		.cfi_startproc
 623              		@ args = 0, pretend = 0, frame = 0
 624              		@ frame_needed = 0, uses_anonymous_args = 0
 625              		@ link register save eliminated.
 626              	.LVL37:
 663:Generated_Source\PSoC4/adcUser.c ****     adcUser_SAR_SATURATE_INTR_MASK_REG = mask & adcUser_MAX_CHANNELS_EN_MASK;
 627              		.loc 1 663 0
 628 0000 0123     		movs	r3, #1
 629 0002 1840     		ands	r0, r3
 630              	.LVL38:
 631 0004 014B     		ldr	r3, .L51
 632 0006 1860     		str	r0, [r3]
 664:Generated_Source\PSoC4/adcUser.c **** }
 633              		.loc 1 664 0
 634              		@ sp needed
 635 0008 7047     		bx	lr
 636              	.L52:
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 24


 637 000a C046     		.align	2
 638              	.L51:
 639 000c 28021A40 		.word	1075446312
 640              		.cfi_endproc
 641              	.LFE12:
 642              		.size	adcUser_SetSatMask, .-adcUser_SetSatMask
 643              		.section	.text.adcUser_SetOffset,"ax",%progbits
 644              		.align	2
 645              		.global	adcUser_SetOffset
 646              		.code	16
 647              		.thumb_func
 648              		.type	adcUser_SetOffset, %function
 649              	adcUser_SetOffset:
 650              	.LFB13:
 665:Generated_Source\PSoC4/adcUser.c **** 
 666:Generated_Source\PSoC4/adcUser.c **** 
 667:Generated_Source\PSoC4/adcUser.c **** /*******************************************************************************
 668:Generated_Source\PSoC4/adcUser.c **** * Function Name: adcUser_SetOffset
 669:Generated_Source\PSoC4/adcUser.c **** ********************************************************************************
 670:Generated_Source\PSoC4/adcUser.c **** *
 671:Generated_Source\PSoC4/adcUser.c **** * Summary:
 672:Generated_Source\PSoC4/adcUser.c **** *   Description: Sets the ADC offset which is used by the functions
 673:Generated_Source\PSoC4/adcUser.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:Generated_Source\PSoC4/adcUser.c **** *   to substract the offset from the given reading
 675:Generated_Source\PSoC4/adcUser.c **** *   before calculating the voltage conversion.
 676:Generated_Source\PSoC4/adcUser.c **** *
 677:Generated_Source\PSoC4/adcUser.c **** * Parameters:
 678:Generated_Source\PSoC4/adcUser.c **** *  chan: ADC channel number.
 679:Generated_Source\PSoC4/adcUser.c **** *  offset: This value is a measured value when the
 680:Generated_Source\PSoC4/adcUser.c **** *          inputs are shorted or connected to the same input voltage.
 681:Generated_Source\PSoC4/adcUser.c **** *
 682:Generated_Source\PSoC4/adcUser.c **** * Return:
 683:Generated_Source\PSoC4/adcUser.c **** *  None.
 684:Generated_Source\PSoC4/adcUser.c **** *
 685:Generated_Source\PSoC4/adcUser.c **** * Global variables:
 686:Generated_Source\PSoC4/adcUser.c **** *  adcUser_Offset:  Modified to set the user provided offset.
 687:Generated_Source\PSoC4/adcUser.c **** *
 688:Generated_Source\PSoC4/adcUser.c **** *******************************************************************************/
 689:Generated_Source\PSoC4/adcUser.c **** void adcUser_SetOffset(uint32 chan, int16 offset)
 690:Generated_Source\PSoC4/adcUser.c **** {
 651              		.loc 1 690 0
 652              		.cfi_startproc
 653              		@ args = 0, pretend = 0, frame = 0
 654              		@ frame_needed = 0, uses_anonymous_args = 0
 655              	.LVL39:
 656 0000 70B5     		push	{r4, r5, r6, lr}
 657              		.cfi_def_cfa_offset 16
 658              		.cfi_offset 4, -16
 659              		.cfi_offset 5, -12
 660              		.cfi_offset 6, -8
 661              		.cfi_offset 14, -4
 662 0002 0400     		movs	r4, r0
 663 0004 0D00     		movs	r5, r1
 691:Generated_Source\PSoC4/adcUser.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:Generated_Source\PSoC4/adcUser.c ****     CYASSERT(chan < adcUser_TOTAL_CHANNELS_NUM);
 664              		.loc 1 692 0
 665 0006 0028     		cmp	r0, #0
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 25


 666 0008 02D0     		beq	.L54
 667              		.loc 1 692 0 is_stmt 0 discriminator 1
 668 000a 0020     		movs	r0, #0
 669              	.LVL40:
 670 000c FFF7FEFF 		bl	CyHalt
 671              	.LVL41:
 672              	.L54:
 693:Generated_Source\PSoC4/adcUser.c **** 
 694:Generated_Source\PSoC4/adcUser.c ****     adcUser_offset[chan] = offset;
 673              		.loc 1 694 0 is_stmt 1
 674 0010 6400     		lsls	r4, r4, #1
 675              	.LVL42:
 676 0012 014B     		ldr	r3, .L55
 677 0014 E552     		strh	r5, [r4, r3]
 695:Generated_Source\PSoC4/adcUser.c **** }
 678              		.loc 1 695 0
 679              		@ sp needed
 680 0016 70BD     		pop	{r4, r5, r6, pc}
 681              	.L56:
 682              		.align	2
 683              	.L55:
 684 0018 00000000 		.word	adcUser_offset
 685              		.cfi_endproc
 686              	.LFE13:
 687              		.size	adcUser_SetOffset, .-adcUser_SetOffset
 688              		.section	.text.adcUser_SetGain,"ax",%progbits
 689              		.align	2
 690              		.global	adcUser_SetGain
 691              		.code	16
 692              		.thumb_func
 693              		.type	adcUser_SetGain, %function
 694              	adcUser_SetGain:
 695              	.LFB14:
 696:Generated_Source\PSoC4/adcUser.c **** 
 697:Generated_Source\PSoC4/adcUser.c **** 
 698:Generated_Source\PSoC4/adcUser.c **** /*******************************************************************************
 699:Generated_Source\PSoC4/adcUser.c **** * Function Name: adcUser_SetGain
 700:Generated_Source\PSoC4/adcUser.c **** ********************************************************************************
 701:Generated_Source\PSoC4/adcUser.c **** *
 702:Generated_Source\PSoC4/adcUser.c **** * Summary:
 703:Generated_Source\PSoC4/adcUser.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:Generated_Source\PSoC4/adcUser.c **** *  conversion functions below. This value is set by default by the
 705:Generated_Source\PSoC4/adcUser.c **** *  reference and input range settings. It should only be used to further
 706:Generated_Source\PSoC4/adcUser.c **** *  calibrate the ADC with a known input or if an external reference is
 707:Generated_Source\PSoC4/adcUser.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:Generated_Source\PSoC4/adcUser.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:Generated_Source\PSoC4/adcUser.c **** *  conversion between ADC counts and voltage.
 710:Generated_Source\PSoC4/adcUser.c **** *
 711:Generated_Source\PSoC4/adcUser.c **** * Parameters:
 712:Generated_Source\PSoC4/adcUser.c **** *  chan: ADC channel number.
 713:Generated_Source\PSoC4/adcUser.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:Generated_Source\PSoC4/adcUser.c **** *
 715:Generated_Source\PSoC4/adcUser.c **** * Return:
 716:Generated_Source\PSoC4/adcUser.c **** *  None.
 717:Generated_Source\PSoC4/adcUser.c **** *
 718:Generated_Source\PSoC4/adcUser.c **** * Global variables:
 719:Generated_Source\PSoC4/adcUser.c **** *  adcUser_CountsPer10Volt:  modified to set the ADC gain in counts
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 26


 720:Generated_Source\PSoC4/adcUser.c **** *   per 10 volt.
 721:Generated_Source\PSoC4/adcUser.c **** *
 722:Generated_Source\PSoC4/adcUser.c **** *******************************************************************************/
 723:Generated_Source\PSoC4/adcUser.c **** void adcUser_SetGain(uint32 chan, int32 adcGain)
 724:Generated_Source\PSoC4/adcUser.c **** {
 696              		.loc 1 724 0
 697              		.cfi_startproc
 698              		@ args = 0, pretend = 0, frame = 0
 699              		@ frame_needed = 0, uses_anonymous_args = 0
 700              	.LVL43:
 701 0000 70B5     		push	{r4, r5, r6, lr}
 702              		.cfi_def_cfa_offset 16
 703              		.cfi_offset 4, -16
 704              		.cfi_offset 5, -12
 705              		.cfi_offset 6, -8
 706              		.cfi_offset 14, -4
 707 0002 0400     		movs	r4, r0
 708 0004 0D00     		movs	r5, r1
 725:Generated_Source\PSoC4/adcUser.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:Generated_Source\PSoC4/adcUser.c ****     CYASSERT(chan < adcUser_TOTAL_CHANNELS_NUM);
 709              		.loc 1 726 0
 710 0006 0028     		cmp	r0, #0
 711 0008 02D0     		beq	.L58
 712              		.loc 1 726 0 is_stmt 0 discriminator 1
 713 000a 0020     		movs	r0, #0
 714              	.LVL44:
 715 000c FFF7FEFF 		bl	CyHalt
 716              	.LVL45:
 717              	.L58:
 727:Generated_Source\PSoC4/adcUser.c **** 
 728:Generated_Source\PSoC4/adcUser.c ****     adcUser_countsPer10Volt[chan] = adcGain;
 718              		.loc 1 728 0 is_stmt 1
 719 0010 A400     		lsls	r4, r4, #2
 720              	.LVL46:
 721 0012 014B     		ldr	r3, .L59
 722 0014 E550     		str	r5, [r4, r3]
 729:Generated_Source\PSoC4/adcUser.c **** }
 723              		.loc 1 729 0
 724              		@ sp needed
 725              	.LVL47:
 726 0016 70BD     		pop	{r4, r5, r6, pc}
 727              	.L60:
 728              		.align	2
 729              	.L59:
 730 0018 00000000 		.word	adcUser_countsPer10Volt
 731              		.cfi_endproc
 732              	.LFE14:
 733              		.size	adcUser_SetGain, .-adcUser_SetGain
 734              		.global	__aeabi_idiv
 735              		.section	.text.adcUser_CountsTo_mVolts,"ax",%progbits
 736              		.align	2
 737              		.global	adcUser_CountsTo_mVolts
 738              		.code	16
 739              		.thumb_func
 740              		.type	adcUser_CountsTo_mVolts, %function
 741              	adcUser_CountsTo_mVolts:
 742              	.LFB15:
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 27


 730:Generated_Source\PSoC4/adcUser.c **** 
 731:Generated_Source\PSoC4/adcUser.c **** 
 732:Generated_Source\PSoC4/adcUser.c **** #if(adcUser_DEFAULT_JUSTIFICATION_SEL == adcUser__RIGHT)
 733:Generated_Source\PSoC4/adcUser.c **** 
 734:Generated_Source\PSoC4/adcUser.c **** 
 735:Generated_Source\PSoC4/adcUser.c ****     /*******************************************************************************
 736:Generated_Source\PSoC4/adcUser.c ****     * Function Name: adcUser_CountsTo_mVolts
 737:Generated_Source\PSoC4/adcUser.c ****     ********************************************************************************
 738:Generated_Source\PSoC4/adcUser.c ****     *
 739:Generated_Source\PSoC4/adcUser.c ****     * Summary:
 740:Generated_Source\PSoC4/adcUser.c ****     *  This function converts ADC counts to mVolts
 741:Generated_Source\PSoC4/adcUser.c ****     *  This function is not available when left data format justification selected.
 742:Generated_Source\PSoC4/adcUser.c ****     *
 743:Generated_Source\PSoC4/adcUser.c ****     * Parameters:
 744:Generated_Source\PSoC4/adcUser.c ****     *  chan: The ADC channel number.
 745:Generated_Source\PSoC4/adcUser.c ****     *  adcCounts: Result from the ADC conversion
 746:Generated_Source\PSoC4/adcUser.c ****     *
 747:Generated_Source\PSoC4/adcUser.c ****     * Return:
 748:Generated_Source\PSoC4/adcUser.c ****     *  Results in mVolts
 749:Generated_Source\PSoC4/adcUser.c ****     *
 750:Generated_Source\PSoC4/adcUser.c ****     * Global variables:
 751:Generated_Source\PSoC4/adcUser.c ****     *  adcUser_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:Generated_Source\PSoC4/adcUser.c ****     *  adcUser_Offset:  Used as the offset while converting ADC counts
 753:Generated_Source\PSoC4/adcUser.c ****     *   to mVolts.
 754:Generated_Source\PSoC4/adcUser.c ****     *
 755:Generated_Source\PSoC4/adcUser.c ****     *******************************************************************************/
 756:Generated_Source\PSoC4/adcUser.c ****     int16 adcUser_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:Generated_Source\PSoC4/adcUser.c ****     {
 743              		.loc 1 757 0
 744              		.cfi_startproc
 745              		@ args = 0, pretend = 0, frame = 0
 746              		@ frame_needed = 0, uses_anonymous_args = 0
 747              	.LVL48:
 748 0000 70B5     		push	{r4, r5, r6, lr}
 749              		.cfi_def_cfa_offset 16
 750              		.cfi_offset 4, -16
 751              		.cfi_offset 5, -12
 752              		.cfi_offset 6, -8
 753              		.cfi_offset 14, -4
 754 0002 0400     		movs	r4, r0
 755 0004 0D00     		movs	r5, r1
 758:Generated_Source\PSoC4/adcUser.c ****         int16 mVolts;
 759:Generated_Source\PSoC4/adcUser.c **** 
 760:Generated_Source\PSoC4/adcUser.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:Generated_Source\PSoC4/adcUser.c ****         CYASSERT(chan < adcUser_TOTAL_CHANNELS_NUM);
 756              		.loc 1 761 0
 757 0006 0028     		cmp	r0, #0
 758 0008 02D0     		beq	.L62
 759              		.loc 1 761 0 is_stmt 0 discriminator 1
 760 000a 0020     		movs	r0, #0
 761              	.LVL49:
 762 000c FFF7FEFF 		bl	CyHalt
 763              	.LVL50:
 764              	.L62:
 762:Generated_Source\PSoC4/adcUser.c **** 
 763:Generated_Source\PSoC4/adcUser.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:Generated_Source\PSoC4/adcUser.c ****         #if(adcUser_DEFAULT_AVG_MODE == adcUser__ACCUMULATE)
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 28


 765:Generated_Source\PSoC4/adcUser.c ****             if((adcUser_channelsConfig[chan] & adcUser_AVERAGING_EN) != 0u)
 766:Generated_Source\PSoC4/adcUser.c ****             {
 767:Generated_Source\PSoC4/adcUser.c ****                 adcCounts /= adcUser_DEFAULT_AVG_SAMPLES_DIV;
 768:Generated_Source\PSoC4/adcUser.c ****             }
 769:Generated_Source\PSoC4/adcUser.c ****         #endif /* adcUser_DEFAULT_AVG_MODE == adcUser__ACCUMULATE */
 770:Generated_Source\PSoC4/adcUser.c **** 
 771:Generated_Source\PSoC4/adcUser.c ****         /* Subtract ADC offset */
 772:Generated_Source\PSoC4/adcUser.c ****         adcCounts -= adcUser_offset[chan];
 765              		.loc 1 772 0 is_stmt 1
 766 0010 6300     		lsls	r3, r4, #1
 767 0012 0F4A     		ldr	r2, .L65
 768 0014 995A     		ldrh	r1, [r3, r2]
 769 0016 09B2     		sxth	r1, r1
 770 0018 691A     		subs	r1, r5, r1
 771 001a 09B2     		sxth	r1, r1
 772              	.LVL51:
 773:Generated_Source\PSoC4/adcUser.c **** 
 774:Generated_Source\PSoC4/adcUser.c ****         mVolts = (int16)((((int32)adcCounts * adcUser_10MV_COUNTS) + ( (adcCounts > 0) ?
 773              		.loc 1 774 0
 774 001c 0D48     		ldr	r0, .L65+4
 775 001e 4843     		muls	r0, r1
 775:Generated_Source\PSoC4/adcUser.c ****                  (adcUser_countsPer10Volt[chan] / 2) : (-(adcUser_countsPer10Volt[chan] / 2)) ))
 776              		.loc 1 775 0
 777 0020 0029     		cmp	r1, #0
 778 0022 06DD     		ble	.L63
 779              		.loc 1 775 0 is_stmt 0 discriminator 1
 780 0024 A300     		lsls	r3, r4, #2
 781 0026 0C4A     		ldr	r2, .L65+8
 782 0028 9A58     		ldr	r2, [r3, r2]
 783 002a D30F     		lsrs	r3, r2, #31
 784 002c 9A18     		adds	r2, r3, r2
 785 002e 5310     		asrs	r3, r2, #1
 786 0030 06E0     		b	.L64
 787              	.L63:
 788              		.loc 1 775 0 discriminator 2
 789 0032 A300     		lsls	r3, r4, #2
 790 0034 084A     		ldr	r2, .L65+8
 791 0036 9A58     		ldr	r2, [r3, r2]
 792 0038 D30F     		lsrs	r3, r2, #31
 793 003a 9A18     		adds	r2, r3, r2
 794 003c 5210     		asrs	r2, r2, #1
 795 003e 5342     		rsbs	r3, r2, #0
 796              	.L64:
 774:Generated_Source\PSoC4/adcUser.c ****                  (adcUser_countsPer10Volt[chan] / 2) : (-(adcUser_countsPer10Volt[chan] / 2)) ))
 797              		.loc 1 774 0 is_stmt 1
 798 0040 1818     		adds	r0, r3, r0
 776:Generated_Source\PSoC4/adcUser.c ****                  / adcUser_countsPer10Volt[chan]);
 799              		.loc 1 776 0
 800 0042 A400     		lsls	r4, r4, #2
 801              	.LVL52:
 802 0044 044B     		ldr	r3, .L65+8
 803 0046 E158     		ldr	r1, [r4, r3]
 804              	.LVL53:
 805 0048 FFF7FEFF 		bl	__aeabi_idiv
 806              	.LVL54:
 774:Generated_Source\PSoC4/adcUser.c ****                  (adcUser_countsPer10Volt[chan] / 2) : (-(adcUser_countsPer10Volt[chan] / 2)) ))
 807              		.loc 1 774 0
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 29


 808 004c 00B2     		sxth	r0, r0
 809              	.LVL55:
 777:Generated_Source\PSoC4/adcUser.c **** 
 778:Generated_Source\PSoC4/adcUser.c ****         return( mVolts );
 779:Generated_Source\PSoC4/adcUser.c ****     }
 810              		.loc 1 779 0
 811              		@ sp needed
 812 004e 70BD     		pop	{r4, r5, r6, pc}
 813              	.L66:
 814              		.align	2
 815              	.L65:
 816 0050 00000000 		.word	adcUser_offset
 817 0054 10270000 		.word	10000
 818 0058 00000000 		.word	adcUser_countsPer10Volt
 819              		.cfi_endproc
 820              	.LFE15:
 821              		.size	adcUser_CountsTo_mVolts, .-adcUser_CountsTo_mVolts
 822              		.global	__aeabi_lmul
 823              		.global	__aeabi_ldivmod
 824              		.section	.text.adcUser_CountsTo_uVolts,"ax",%progbits
 825              		.align	2
 826              		.global	adcUser_CountsTo_uVolts
 827              		.code	16
 828              		.thumb_func
 829              		.type	adcUser_CountsTo_uVolts, %function
 830              	adcUser_CountsTo_uVolts:
 831              	.LFB16:
 780:Generated_Source\PSoC4/adcUser.c **** 
 781:Generated_Source\PSoC4/adcUser.c **** 
 782:Generated_Source\PSoC4/adcUser.c ****     /*******************************************************************************
 783:Generated_Source\PSoC4/adcUser.c ****     * Function Name: adcUser_CountsTo_uVolts
 784:Generated_Source\PSoC4/adcUser.c ****     ********************************************************************************
 785:Generated_Source\PSoC4/adcUser.c ****     *
 786:Generated_Source\PSoC4/adcUser.c ****     * Summary:
 787:Generated_Source\PSoC4/adcUser.c ****     *  This function converts ADC counts to micro Volts
 788:Generated_Source\PSoC4/adcUser.c ****     *  This function is not available when left data format justification selected.
 789:Generated_Source\PSoC4/adcUser.c ****     *
 790:Generated_Source\PSoC4/adcUser.c ****     * Parameters:
 791:Generated_Source\PSoC4/adcUser.c ****     *  chan: The ADC channel number.
 792:Generated_Source\PSoC4/adcUser.c ****     *  adcCounts: Result from the ADC conversion
 793:Generated_Source\PSoC4/adcUser.c ****     *
 794:Generated_Source\PSoC4/adcUser.c ****     * Return:
 795:Generated_Source\PSoC4/adcUser.c ****     *  Results in uVolts
 796:Generated_Source\PSoC4/adcUser.c ****     *
 797:Generated_Source\PSoC4/adcUser.c ****     * Global variables:
 798:Generated_Source\PSoC4/adcUser.c ****     *  adcUser_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:Generated_Source\PSoC4/adcUser.c ****     *  adcUser_Offset:  Used as the offset while converting ADC counts
 800:Generated_Source\PSoC4/adcUser.c ****     *   to mVolts.
 801:Generated_Source\PSoC4/adcUser.c ****     *
 802:Generated_Source\PSoC4/adcUser.c ****     * Theory:
 803:Generated_Source\PSoC4/adcUser.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:Generated_Source\PSoC4/adcUser.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:Generated_Source\PSoC4/adcUser.c ****     *  resolution.
 806:Generated_Source\PSoC4/adcUser.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:Generated_Source\PSoC4/adcUser.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:Generated_Source\PSoC4/adcUser.c ****     *
 809:Generated_Source\PSoC4/adcUser.c ****     *******************************************************************************/
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 30


 810:Generated_Source\PSoC4/adcUser.c ****     int32 adcUser_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:Generated_Source\PSoC4/adcUser.c ****     {
 832              		.loc 1 811 0
 833              		.cfi_startproc
 834              		@ args = 0, pretend = 0, frame = 0
 835              		@ frame_needed = 0, uses_anonymous_args = 0
 836              	.LVL56:
 837 0000 70B5     		push	{r4, r5, r6, lr}
 838              		.cfi_def_cfa_offset 16
 839              		.cfi_offset 4, -16
 840              		.cfi_offset 5, -12
 841              		.cfi_offset 6, -8
 842              		.cfi_offset 14, -4
 843 0002 0500     		movs	r5, r0
 844 0004 0C00     		movs	r4, r1
 812:Generated_Source\PSoC4/adcUser.c ****         int64 uVolts;
 813:Generated_Source\PSoC4/adcUser.c **** 
 814:Generated_Source\PSoC4/adcUser.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:Generated_Source\PSoC4/adcUser.c ****         CYASSERT(chan < adcUser_TOTAL_CHANNELS_NUM);
 845              		.loc 1 815 0
 846 0006 0028     		cmp	r0, #0
 847 0008 02D0     		beq	.L68
 848              		.loc 1 815 0 is_stmt 0 discriminator 1
 849 000a 0020     		movs	r0, #0
 850              	.LVL57:
 851 000c FFF7FEFF 		bl	CyHalt
 852              	.LVL58:
 853              	.L68:
 816:Generated_Source\PSoC4/adcUser.c **** 
 817:Generated_Source\PSoC4/adcUser.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:Generated_Source\PSoC4/adcUser.c ****         #if(adcUser_DEFAULT_AVG_MODE == adcUser__ACCUMULATE)
 819:Generated_Source\PSoC4/adcUser.c ****             if((adcUser_channelsConfig[chan] & adcUser_AVERAGING_EN) != 0u)
 820:Generated_Source\PSoC4/adcUser.c ****             {
 821:Generated_Source\PSoC4/adcUser.c ****                 adcCounts /= adcUser_DEFAULT_AVG_SAMPLES_DIV;
 822:Generated_Source\PSoC4/adcUser.c ****             }
 823:Generated_Source\PSoC4/adcUser.c ****         #endif /* adcUser_DEFAULT_AVG_MODE == adcUser__ACCUMULATE */
 824:Generated_Source\PSoC4/adcUser.c **** 
 825:Generated_Source\PSoC4/adcUser.c ****         /* Subtract ADC offset */
 826:Generated_Source\PSoC4/adcUser.c ****         adcCounts -= adcUser_offset[chan];
 854              		.loc 1 826 0 is_stmt 1
 855 0010 6A00     		lsls	r2, r5, #1
 856 0012 084B     		ldr	r3, .L69
 857 0014 D05A     		ldrh	r0, [r2, r3]
 858 0016 00B2     		sxth	r0, r0
 859 0018 201A     		subs	r0, r4, r0
 860 001a 00B2     		sxth	r0, r0
 861              	.LVL59:
 827:Generated_Source\PSoC4/adcUser.c **** 
 828:Generated_Source\PSoC4/adcUser.c ****         uVolts = ((int64)adcCounts * adcUser_10UV_COUNTS) / adcUser_countsPer10Volt[chan];
 862              		.loc 1 828 0
 863 001c C117     		asrs	r1, r0, #31
 864 001e 064A     		ldr	r2, .L69+4
 865 0020 0023     		movs	r3, #0
 866 0022 FFF7FEFF 		bl	__aeabi_lmul
 867              	.LVL60:
 868 0026 AD00     		lsls	r5, r5, #2
 869              	.LVL61:
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 31


 870 0028 044B     		ldr	r3, .L69+8
 871 002a EA58     		ldr	r2, [r5, r3]
 872 002c D317     		asrs	r3, r2, #31
 873 002e FFF7FEFF 		bl	__aeabi_ldivmod
 874              	.LVL62:
 829:Generated_Source\PSoC4/adcUser.c **** 
 830:Generated_Source\PSoC4/adcUser.c ****         return( (int32)uVolts );
 831:Generated_Source\PSoC4/adcUser.c ****     }
 875              		.loc 1 831 0
 876              		@ sp needed
 877 0032 70BD     		pop	{r4, r5, r6, pc}
 878              	.L70:
 879              		.align	2
 880              	.L69:
 881 0034 00000000 		.word	adcUser_offset
 882 0038 80969800 		.word	10000000
 883 003c 00000000 		.word	adcUser_countsPer10Volt
 884              		.cfi_endproc
 885              	.LFE16:
 886              		.size	adcUser_CountsTo_uVolts, .-adcUser_CountsTo_uVolts
 887              		.global	__aeabi_i2f
 888              		.global	__aeabi_fmul
 889              		.global	__aeabi_fdiv
 890              		.section	.text.adcUser_CountsTo_Volts,"ax",%progbits
 891              		.align	2
 892              		.global	adcUser_CountsTo_Volts
 893              		.code	16
 894              		.thumb_func
 895              		.type	adcUser_CountsTo_Volts, %function
 896              	adcUser_CountsTo_Volts:
 897              	.LFB17:
 832:Generated_Source\PSoC4/adcUser.c **** 
 833:Generated_Source\PSoC4/adcUser.c **** 
 834:Generated_Source\PSoC4/adcUser.c ****     /*******************************************************************************
 835:Generated_Source\PSoC4/adcUser.c ****     * Function Name: adcUser_CountsTo_Volts
 836:Generated_Source\PSoC4/adcUser.c ****     ********************************************************************************
 837:Generated_Source\PSoC4/adcUser.c ****     *
 838:Generated_Source\PSoC4/adcUser.c ****     * Summary:
 839:Generated_Source\PSoC4/adcUser.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:Generated_Source\PSoC4/adcUser.c ****     *  This function is not available when left data format justification selected.
 841:Generated_Source\PSoC4/adcUser.c ****     *
 842:Generated_Source\PSoC4/adcUser.c ****     * Parameters:
 843:Generated_Source\PSoC4/adcUser.c ****     *  chan: The ADC channel number.
 844:Generated_Source\PSoC4/adcUser.c ****     *  Result from the ADC conversion
 845:Generated_Source\PSoC4/adcUser.c ****     *
 846:Generated_Source\PSoC4/adcUser.c ****     * Return:
 847:Generated_Source\PSoC4/adcUser.c ****     *  Results in Volts
 848:Generated_Source\PSoC4/adcUser.c ****     *
 849:Generated_Source\PSoC4/adcUser.c ****     * Global variables:
 850:Generated_Source\PSoC4/adcUser.c ****     *  adcUser_countsPer10Volt:  used to convert ADC counts to Volts.
 851:Generated_Source\PSoC4/adcUser.c ****     *  adcUser_Offset:  Used as the offset while converting ADC counts
 852:Generated_Source\PSoC4/adcUser.c ****     *   to mVolts.
 853:Generated_Source\PSoC4/adcUser.c ****     *
 854:Generated_Source\PSoC4/adcUser.c ****     *******************************************************************************/
 855:Generated_Source\PSoC4/adcUser.c ****     float32 adcUser_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:Generated_Source\PSoC4/adcUser.c ****     {
 898              		.loc 1 856 0
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 32


 899              		.cfi_startproc
 900              		@ args = 0, pretend = 0, frame = 0
 901              		@ frame_needed = 0, uses_anonymous_args = 0
 902              	.LVL63:
 903 0000 70B5     		push	{r4, r5, r6, lr}
 904              		.cfi_def_cfa_offset 16
 905              		.cfi_offset 4, -16
 906              		.cfi_offset 5, -12
 907              		.cfi_offset 6, -8
 908              		.cfi_offset 14, -4
 909 0002 0400     		movs	r4, r0
 910 0004 0D00     		movs	r5, r1
 857:Generated_Source\PSoC4/adcUser.c ****         float32 volts;
 858:Generated_Source\PSoC4/adcUser.c **** 
 859:Generated_Source\PSoC4/adcUser.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:Generated_Source\PSoC4/adcUser.c ****         CYASSERT(chan < adcUser_TOTAL_CHANNELS_NUM);
 911              		.loc 1 860 0
 912 0006 0028     		cmp	r0, #0
 913 0008 02D0     		beq	.L72
 914              		.loc 1 860 0 is_stmt 0 discriminator 1
 915 000a 0020     		movs	r0, #0
 916              	.LVL64:
 917 000c FFF7FEFF 		bl	CyHalt
 918              	.LVL65:
 919              	.L72:
 861:Generated_Source\PSoC4/adcUser.c **** 
 862:Generated_Source\PSoC4/adcUser.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:Generated_Source\PSoC4/adcUser.c ****         #if(adcUser_DEFAULT_AVG_MODE == adcUser__ACCUMULATE)
 864:Generated_Source\PSoC4/adcUser.c ****             if((adcUser_channelsConfig[chan] & adcUser_AVERAGING_EN) != 0u)
 865:Generated_Source\PSoC4/adcUser.c ****             {
 866:Generated_Source\PSoC4/adcUser.c ****                 adcCounts /= adcUser_DEFAULT_AVG_SAMPLES_DIV;
 867:Generated_Source\PSoC4/adcUser.c ****             }
 868:Generated_Source\PSoC4/adcUser.c ****         #endif /* adcUser_DEFAULT_AVG_MODE == adcUser__ACCUMULATE */
 869:Generated_Source\PSoC4/adcUser.c **** 
 870:Generated_Source\PSoC4/adcUser.c ****         /* Subtract ADC offset */
 871:Generated_Source\PSoC4/adcUser.c ****         adcCounts -= adcUser_offset[chan];
 920              		.loc 1 871 0 is_stmt 1
 921 0010 6200     		lsls	r2, r4, #1
 922 0012 0A4B     		ldr	r3, .L73
 923 0014 D05A     		ldrh	r0, [r2, r3]
 924 0016 00B2     		sxth	r0, r0
 925 0018 281A     		subs	r0, r5, r0
 926 001a 00B2     		sxth	r0, r0
 927              	.LVL66:
 872:Generated_Source\PSoC4/adcUser.c **** 
 873:Generated_Source\PSoC4/adcUser.c ****         volts = ((float32)adcCounts * adcUser_10V_COUNTS) / (float32)adcUser_countsPer10Volt[chan];
 928              		.loc 1 873 0
 929 001c FFF7FEFF 		bl	__aeabi_i2f
 930              	.LVL67:
 931 0020 0749     		ldr	r1, .L73+4
 932 0022 FFF7FEFF 		bl	__aeabi_fmul
 933              	.LVL68:
 934 0026 051C     		adds	r5, r0, #0
 935 0028 A400     		lsls	r4, r4, #2
 936              	.LVL69:
 937 002a 064B     		ldr	r3, .L73+8
 938 002c E058     		ldr	r0, [r4, r3]
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 33


 939 002e FFF7FEFF 		bl	__aeabi_i2f
 940              	.LVL70:
 941 0032 011C     		adds	r1, r0, #0
 942 0034 281C     		adds	r0, r5, #0
 943 0036 FFF7FEFF 		bl	__aeabi_fdiv
 944              	.LVL71:
 874:Generated_Source\PSoC4/adcUser.c **** 
 875:Generated_Source\PSoC4/adcUser.c ****         return( volts );
 876:Generated_Source\PSoC4/adcUser.c ****     }
 945              		.loc 1 876 0
 946              		@ sp needed
 947 003a 70BD     		pop	{r4, r5, r6, pc}
 948              	.L74:
 949              		.align	2
 950              	.L73:
 951 003c 00000000 		.word	adcUser_offset
 952 0040 00002041 		.word	1092616192
 953 0044 00000000 		.word	adcUser_countsPer10Volt
 954              		.cfi_endproc
 955              	.LFE17:
 956              		.size	adcUser_CountsTo_Volts, .-adcUser_CountsTo_Volts
 957              		.comm	adcUser_countsPer10Volt,4,4
 958              		.comm	adcUser_offset,2,4
 959              		.global	adcUser_initVar
 960              		.bss
 961              		.set	.LANCHOR0,. + 0
 962              		.type	adcUser_initVar, %object
 963              		.size	adcUser_initVar, 1
 964              	adcUser_initVar:
 965 0000 00       		.space	1
 966              		.text
 967              	.Letext0:
 968              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 969              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 970              		.section	.debug_info,"",%progbits
 971              	.Ldebug_info0:
 972 0000 75050000 		.4byte	0x575
 973 0004 0400     		.2byte	0x4
 974 0006 00000000 		.4byte	.Ldebug_abbrev0
 975 000a 04       		.byte	0x4
 976 000b 01       		.uleb128 0x1
 977 000c 5B000000 		.4byte	.LASF63
 978 0010 0C       		.byte	0xc
 979 0011 7D030000 		.4byte	.LASF64
 980 0015 00000000 		.4byte	.LASF65
 981 0019 00000000 		.4byte	.Ldebug_ranges0+0
 982 001d 00000000 		.4byte	0
 983 0021 00000000 		.4byte	.Ldebug_line0
 984 0025 02       		.uleb128 0x2
 985 0026 01       		.byte	0x1
 986 0027 06       		.byte	0x6
 987 0028 23010000 		.4byte	.LASF0
 988 002c 02       		.uleb128 0x2
 989 002d 01       		.byte	0x1
 990 002e 08       		.byte	0x8
 991 002f 55030000 		.4byte	.LASF1
 992 0033 02       		.uleb128 0x2
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 34


 993 0034 02       		.byte	0x2
 994 0035 05       		.byte	0x5
 995 0036 63030000 		.4byte	.LASF2
 996 003a 02       		.uleb128 0x2
 997 003b 02       		.byte	0x2
 998 003c 07       		.byte	0x7
 999 003d 56020000 		.4byte	.LASF3
 1000 0041 02       		.uleb128 0x2
 1001 0042 04       		.byte	0x4
 1002 0043 05       		.byte	0x5
 1003 0044 35010000 		.4byte	.LASF4
 1004 0048 02       		.uleb128 0x2
 1005 0049 04       		.byte	0x4
 1006 004a 07       		.byte	0x7
 1007 004b 1C020000 		.4byte	.LASF5
 1008 004f 02       		.uleb128 0x2
 1009 0050 08       		.byte	0x8
 1010 0051 05       		.byte	0x5
 1011 0052 15010000 		.4byte	.LASF6
 1012 0056 02       		.uleb128 0x2
 1013 0057 08       		.byte	0x8
 1014 0058 07       		.byte	0x7
 1015 0059 E9000000 		.4byte	.LASF7
 1016 005d 03       		.uleb128 0x3
 1017 005e 04       		.byte	0x4
 1018 005f 05       		.byte	0x5
 1019 0060 696E7400 		.ascii	"int\000"
 1020 0064 02       		.uleb128 0x2
 1021 0065 04       		.byte	0x4
 1022 0066 07       		.byte	0x7
 1023 0067 08020000 		.4byte	.LASF8
 1024 006b 04       		.uleb128 0x4
 1025 006c 4E010000 		.4byte	.LASF9
 1026 0070 02       		.byte	0x2
 1027 0071 FB01     		.2byte	0x1fb
 1028 0073 2C000000 		.4byte	0x2c
 1029 0077 04       		.uleb128 0x4
 1030 0078 2A000000 		.4byte	.LASF10
 1031 007c 02       		.byte	0x2
 1032 007d FC01     		.2byte	0x1fc
 1033 007f 3A000000 		.4byte	0x3a
 1034 0083 04       		.uleb128 0x4
 1035 0084 A4010000 		.4byte	.LASF11
 1036 0088 02       		.byte	0x2
 1037 0089 FD01     		.2byte	0x1fd
 1038 008b 48000000 		.4byte	0x48
 1039 008f 04       		.uleb128 0x4
 1040 0090 D5030000 		.4byte	.LASF12
 1041 0094 02       		.byte	0x2
 1042 0095 FF01     		.2byte	0x1ff
 1043 0097 33000000 		.4byte	0x33
 1044 009b 04       		.uleb128 0x4
 1045 009c 2F010000 		.4byte	.LASF13
 1046 00a0 02       		.byte	0x2
 1047 00a1 0002     		.2byte	0x200
 1048 00a3 41000000 		.4byte	0x41
 1049 00a7 04       		.uleb128 0x4
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 35


 1050 00a8 99020000 		.4byte	.LASF14
 1051 00ac 02       		.byte	0x2
 1052 00ad 0102     		.2byte	0x201
 1053 00af B3000000 		.4byte	0xb3
 1054 00b3 02       		.uleb128 0x2
 1055 00b4 04       		.byte	0x4
 1056 00b5 04       		.byte	0x4
 1057 00b6 ED020000 		.4byte	.LASF15
 1058 00ba 02       		.uleb128 0x2
 1059 00bb 08       		.byte	0x8
 1060 00bc 04       		.byte	0x4
 1061 00bd 86010000 		.4byte	.LASF16
 1062 00c1 04       		.uleb128 0x4
 1063 00c2 D6020000 		.4byte	.LASF17
 1064 00c6 02       		.byte	0x2
 1065 00c7 0602     		.2byte	0x206
 1066 00c9 4F000000 		.4byte	0x4f
 1067 00cd 02       		.uleb128 0x2
 1068 00ce 01       		.byte	0x1
 1069 00cf 08       		.byte	0x8
 1070 00d0 78030000 		.4byte	.LASF18
 1071 00d4 04       		.uleb128 0x4
 1072 00d5 93020000 		.4byte	.LASF19
 1073 00d9 02       		.byte	0x2
 1074 00da A702     		.2byte	0x2a7
 1075 00dc E0000000 		.4byte	0xe0
 1076 00e0 05       		.uleb128 0x5
 1077 00e1 83000000 		.4byte	0x83
 1078 00e5 02       		.uleb128 0x2
 1079 00e6 08       		.byte	0x8
 1080 00e7 04       		.byte	0x4
 1081 00e8 CA020000 		.4byte	.LASF20
 1082 00ec 02       		.uleb128 0x2
 1083 00ed 04       		.byte	0x4
 1084 00ee 07       		.byte	0x7
 1085 00ef B8020000 		.4byte	.LASF21
 1086 00f3 06       		.uleb128 0x6
 1087 00f4 31000000 		.4byte	.LASF25
 1088 00f8 01       		.byte	0x1
 1089 00f9 5E       		.byte	0x5e
 1090 00fa 00000000 		.4byte	.LFB1
 1091 00fe 08010000 		.4byte	.LFE1-.LFB1
 1092 0102 01       		.uleb128 0x1
 1093 0103 9C       		.byte	0x9c
 1094 0104 5D010000 		.4byte	0x15d
 1095 0108 07       		.uleb128 0x7
 1096 0109 6D030000 		.4byte	.LASF22
 1097 010d 01       		.byte	0x1
 1098 010e 60       		.byte	0x60
 1099 010f 83000000 		.4byte	0x83
 1100 0113 00000000 		.4byte	.LLST0
 1101 0117 07       		.uleb128 0x7
 1102 0118 34020000 		.4byte	.LASF23
 1103 011c 01       		.byte	0x1
 1104 011d 61       		.byte	0x61
 1105 011e 83000000 		.4byte	0x83
 1106 0122 1F000000 		.4byte	.LLST1
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 36


 1107 0126 07       		.uleb128 0x7
 1108 0127 46000000 		.4byte	.LASF24
 1109 012b 01       		.byte	0x1
 1110 012c 62       		.byte	0x62
 1111 012d 9B000000 		.4byte	0x9b
 1112 0131 81000000 		.4byte	.LLST2
 1113 0135 08       		.uleb128 0x8
 1114 0136 0A000000 		.4byte	.LVL0
 1115 013a 4C050000 		.4byte	0x54c
 1116 013e 4D010000 		.4byte	0x14d
 1117 0142 09       		.uleb128 0x9
 1118 0143 01       		.uleb128 0x1
 1119 0144 50       		.byte	0x50
 1120 0145 01       		.uleb128 0x1
 1121 0146 3E       		.byte	0x3e
 1122 0147 09       		.uleb128 0x9
 1123 0148 01       		.uleb128 0x1
 1124 0149 51       		.byte	0x51
 1125 014a 01       		.uleb128 0x1
 1126 014b 33       		.byte	0x33
 1127 014c 00       		.byte	0
 1128 014d 0A       		.uleb128 0xa
 1129 014e 12000000 		.4byte	.LVL1
 1130 0152 57050000 		.4byte	0x557
 1131 0156 09       		.uleb128 0x9
 1132 0157 01       		.uleb128 0x1
 1133 0158 50       		.byte	0x50
 1134 0159 01       		.uleb128 0x1
 1135 015a 3E       		.byte	0x3e
 1136 015b 00       		.byte	0
 1137 015c 00       		.byte	0
 1138 015d 0B       		.uleb128 0xb
 1139 015e 9E030000 		.4byte	.LASF26
 1140 0162 01       		.byte	0x1
 1141 0163 4A01     		.2byte	0x14a
 1142 0165 00000000 		.4byte	.LFB2
 1143 0169 24000000 		.4byte	.LFE2-.LFB2
 1144 016d 01       		.uleb128 0x1
 1145 016e 9C       		.byte	0x9c
 1146 016f 83010000 		.4byte	0x183
 1147 0173 0A       		.uleb128 0xa
 1148 0174 1C000000 		.4byte	.LVL11
 1149 0178 62050000 		.4byte	0x562
 1150 017c 09       		.uleb128 0x9
 1151 017d 01       		.uleb128 0x1
 1152 017e 50       		.byte	0x50
 1153 017f 01       		.uleb128 0x1
 1154 0180 3A       		.byte	0x3a
 1155 0181 00       		.byte	0
 1156 0182 00       		.byte	0
 1157 0183 06       		.uleb128 0x6
 1158 0184 4D000000 		.4byte	.LASF27
 1159 0188 01       		.byte	0x1
 1160 0189 3F       		.byte	0x3f
 1161 018a 00000000 		.4byte	.LFB0
 1162 018e 20000000 		.4byte	.LFE0-.LFB0
 1163 0192 01       		.uleb128 0x1
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 37


 1164 0193 9C       		.byte	0x9c
 1165 0194 AB010000 		.4byte	0x1ab
 1166 0198 0C       		.uleb128 0xc
 1167 0199 0E000000 		.4byte	.LVL12
 1168 019d F3000000 		.4byte	0xf3
 1169 01a1 0C       		.uleb128 0xc
 1170 01a2 18000000 		.4byte	.LVL13
 1171 01a6 5D010000 		.4byte	0x15d
 1172 01aa 00       		.byte	0
 1173 01ab 0D       		.uleb128 0xd
 1174 01ac 0B030000 		.4byte	.LASF28
 1175 01b0 01       		.byte	0x1
 1176 01b1 6D01     		.2byte	0x16d
 1177 01b3 00000000 		.4byte	.LFB3
 1178 01b7 10000000 		.4byte	.LFE3-.LFB3
 1179 01bb 01       		.uleb128 0x1
 1180 01bc 9C       		.byte	0x9c
 1181 01bd 0D       		.uleb128 0xd
 1182 01be 54010000 		.4byte	.LASF29
 1183 01c2 01       		.byte	0x1
 1184 01c3 8701     		.2byte	0x187
 1185 01c5 00000000 		.4byte	.LFB4
 1186 01c9 14000000 		.4byte	.LFE4-.LFB4
 1187 01cd 01       		.uleb128 0x1
 1188 01ce 9C       		.byte	0x9c
 1189 01cf 0D       		.uleb128 0xd
 1190 01d0 69020000 		.4byte	.LASF30
 1191 01d4 01       		.byte	0x1
 1192 01d5 A001     		.2byte	0x1a0
 1193 01d7 00000000 		.4byte	.LFB5
 1194 01db 14000000 		.4byte	.LFE5-.LFB5
 1195 01df 01       		.uleb128 0x1
 1196 01e0 9C       		.byte	0x9c
 1197 01e1 0E       		.uleb128 0xe
 1198 01e2 F3020000 		.4byte	.LASF32
 1199 01e6 01       		.byte	0x1
 1200 01e7 C201     		.2byte	0x1c2
 1201 01e9 83000000 		.4byte	0x83
 1202 01ed 00000000 		.4byte	.LFB6
 1203 01f1 28000000 		.4byte	.LFE6-.LFB6
 1204 01f5 01       		.uleb128 0x1
 1205 01f6 9C       		.byte	0x9c
 1206 01f7 1C020000 		.4byte	0x21c
 1207 01fb 0F       		.uleb128 0xf
 1208 01fc EB010000 		.4byte	.LASF34
 1209 0200 01       		.byte	0x1
 1210 0201 C201     		.2byte	0x1c2
 1211 0203 83000000 		.4byte	0x83
 1212 0207 97000000 		.4byte	.LLST3
 1213 020b 10       		.uleb128 0x10
 1214 020c BE030000 		.4byte	.LASF31
 1215 0210 01       		.byte	0x1
 1216 0211 C401     		.2byte	0x1c4
 1217 0213 83000000 		.4byte	0x83
 1218 0217 DC000000 		.4byte	.LLST4
 1219 021b 00       		.byte	0
 1220 021c 0E       		.uleb128 0xe
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 38


 1221 021d ED030000 		.4byte	.LASF33
 1222 0221 01       		.byte	0x1
 1223 0222 F801     		.2byte	0x1f8
 1224 0224 8F000000 		.4byte	0x8f
 1225 0228 00000000 		.4byte	.LFB7
 1226 022c 2C000000 		.4byte	.LFE7-.LFB7
 1227 0230 01       		.uleb128 0x1
 1228 0231 9C       		.byte	0x9c
 1229 0232 66020000 		.4byte	0x266
 1230 0236 0F       		.uleb128 0xf
 1231 0237 73030000 		.4byte	.LASF35
 1232 023b 01       		.byte	0x1
 1233 023c F801     		.2byte	0x1f8
 1234 023e 83000000 		.4byte	0x83
 1235 0242 12010000 		.4byte	.LLST5
 1236 0246 10       		.uleb128 0x10
 1237 0247 01040000 		.4byte	.LASF36
 1238 024b 01       		.byte	0x1
 1239 024c FA01     		.2byte	0x1fa
 1240 024e 83000000 		.4byte	0x83
 1241 0252 57010000 		.4byte	.LLST6
 1242 0256 0A       		.uleb128 0xa
 1243 0257 0C000000 		.4byte	.LVL23
 1244 025b 6D050000 		.4byte	0x56d
 1245 025f 09       		.uleb128 0x9
 1246 0260 01       		.uleb128 0x1
 1247 0261 50       		.byte	0x50
 1248 0262 01       		.uleb128 0x1
 1249 0263 30       		.byte	0x30
 1250 0264 00       		.byte	0
 1251 0265 00       		.byte	0
 1252 0266 0B       		.uleb128 0xb
 1253 0267 C3010000 		.4byte	.LASF37
 1254 026b 01       		.byte	0x1
 1255 026c 2502     		.2byte	0x225
 1256 026e 00000000 		.4byte	.LFB8
 1257 0272 10000000 		.4byte	.LFE8-.LFB8
 1258 0276 01       		.uleb128 0x1
 1259 0277 9C       		.byte	0x9c
 1260 0278 8D020000 		.4byte	0x28d
 1261 027c 0F       		.uleb128 0xf
 1262 027d D7010000 		.4byte	.LASF38
 1263 0281 01       		.byte	0x1
 1264 0282 2502     		.2byte	0x225
 1265 0284 83000000 		.4byte	0x83
 1266 0288 75010000 		.4byte	.LLST7
 1267 028c 00       		.byte	0
 1268 028d 0B       		.uleb128 0xb
 1269 028e 22030000 		.4byte	.LASF39
 1270 0292 01       		.byte	0x1
 1271 0293 5102     		.2byte	0x251
 1272 0295 00000000 		.4byte	.LFB9
 1273 0299 1C000000 		.4byte	.LFE9-.LFB9
 1274 029d 01       		.uleb128 0x1
 1275 029e 9C       		.byte	0x9c
 1276 029f B4020000 		.4byte	0x2b4
 1277 02a3 0F       		.uleb128 0xf
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 39


 1278 02a4 C1020000 		.4byte	.LASF40
 1279 02a8 01       		.byte	0x1
 1280 02a9 5102     		.2byte	0x251
 1281 02ab 83000000 		.4byte	0x83
 1282 02af 96010000 		.4byte	.LLST8
 1283 02b3 00       		.byte	0
 1284 02b4 0B       		.uleb128 0xb
 1285 02b5 F3010000 		.4byte	.LASF41
 1286 02b9 01       		.byte	0x1
 1287 02ba 6602     		.2byte	0x266
 1288 02bc 00000000 		.4byte	.LFB10
 1289 02c0 18000000 		.4byte	.LFE10-.LFB10
 1290 02c4 01       		.uleb128 0x1
 1291 02c5 9C       		.byte	0x9c
 1292 02c6 DB020000 		.4byte	0x2db
 1293 02ca 0F       		.uleb128 0xf
 1294 02cb 18030000 		.4byte	.LASF42
 1295 02cf 01       		.byte	0x1
 1296 02d0 6602     		.2byte	0x266
 1297 02d2 83000000 		.4byte	0x83
 1298 02d6 B7010000 		.4byte	.LLST9
 1299 02da 00       		.byte	0
 1300 02db 0B       		.uleb128 0xb
 1301 02dc 00010000 		.4byte	.LASF43
 1302 02e0 01       		.byte	0x1
 1303 02e1 7E02     		.2byte	0x27e
 1304 02e3 00000000 		.4byte	.LFB11
 1305 02e7 10000000 		.4byte	.LFE11-.LFB11
 1306 02eb 01       		.uleb128 0x1
 1307 02ec 9C       		.byte	0x9c
 1308 02ed 02030000 		.4byte	0x302
 1309 02f1 0F       		.uleb128 0xf
 1310 02f2 D7010000 		.4byte	.LASF38
 1311 02f6 01       		.byte	0x1
 1312 02f7 7E02     		.2byte	0x27e
 1313 02f9 83000000 		.4byte	0x83
 1314 02fd D8010000 		.4byte	.LLST10
 1315 0301 00       		.byte	0
 1316 0302 0B       		.uleb128 0xb
 1317 0303 73010000 		.4byte	.LASF44
 1318 0307 01       		.byte	0x1
 1319 0308 9502     		.2byte	0x295
 1320 030a 00000000 		.4byte	.LFB12
 1321 030e 10000000 		.4byte	.LFE12-.LFB12
 1322 0312 01       		.uleb128 0x1
 1323 0313 9C       		.byte	0x9c
 1324 0314 29030000 		.4byte	0x329
 1325 0318 0F       		.uleb128 0xf
 1326 0319 D7010000 		.4byte	.LASF38
 1327 031d 01       		.byte	0x1
 1328 031e 9502     		.2byte	0x295
 1329 0320 83000000 		.4byte	0x83
 1330 0324 F9010000 		.4byte	.LLST11
 1331 0328 00       		.byte	0
 1332 0329 0B       		.uleb128 0xb
 1333 032a DB030000 		.4byte	.LASF45
 1334 032e 01       		.byte	0x1
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 40


 1335 032f B102     		.2byte	0x2b1
 1336 0331 00000000 		.4byte	.LFB13
 1337 0335 1C000000 		.4byte	.LFE13-.LFB13
 1338 0339 01       		.uleb128 0x1
 1339 033a 9C       		.byte	0x9c
 1340 033b 6F030000 		.4byte	0x36f
 1341 033f 0F       		.uleb128 0xf
 1342 0340 73030000 		.4byte	.LASF35
 1343 0344 01       		.byte	0x1
 1344 0345 B102     		.2byte	0x2b1
 1345 0347 83000000 		.4byte	0x83
 1346 034b 1A020000 		.4byte	.LLST12
 1347 034f 0F       		.uleb128 0xf
 1348 0350 AD030000 		.4byte	.LASF46
 1349 0354 01       		.byte	0x1
 1350 0355 B102     		.2byte	0x2b1
 1351 0357 8F000000 		.4byte	0x8f
 1352 035b 46020000 		.4byte	.LLST13
 1353 035f 0A       		.uleb128 0xa
 1354 0360 10000000 		.4byte	.LVL41
 1355 0364 6D050000 		.4byte	0x56d
 1356 0368 09       		.uleb128 0x9
 1357 0369 01       		.uleb128 0x1
 1358 036a 50       		.byte	0x50
 1359 036b 01       		.uleb128 0x1
 1360 036c 30       		.byte	0x30
 1361 036d 00       		.byte	0
 1362 036e 00       		.byte	0
 1363 036f 0B       		.uleb128 0xb
 1364 0370 3E010000 		.4byte	.LASF47
 1365 0374 01       		.byte	0x1
 1366 0375 D302     		.2byte	0x2d3
 1367 0377 00000000 		.4byte	.LFB14
 1368 037b 1C000000 		.4byte	.LFE14-.LFB14
 1369 037f 01       		.uleb128 0x1
 1370 0380 9C       		.byte	0x9c
 1371 0381 B5030000 		.4byte	0x3b5
 1372 0385 0F       		.uleb128 0xf
 1373 0386 73030000 		.4byte	.LASF35
 1374 038a 01       		.byte	0x1
 1375 038b D302     		.2byte	0x2d3
 1376 038d 83000000 		.4byte	0x83
 1377 0391 67020000 		.4byte	.LLST14
 1378 0395 0F       		.uleb128 0xf
 1379 0396 3E000000 		.4byte	.LASF48
 1380 039a 01       		.byte	0x1
 1381 039b D302     		.2byte	0x2d3
 1382 039d 9B000000 		.4byte	0x9b
 1383 03a1 93020000 		.4byte	.LLST15
 1384 03a5 0A       		.uleb128 0xa
 1385 03a6 10000000 		.4byte	.LVL45
 1386 03aa 6D050000 		.4byte	0x56d
 1387 03ae 09       		.uleb128 0x9
 1388 03af 01       		.uleb128 0x1
 1389 03b0 50       		.byte	0x50
 1390 03b1 01       		.uleb128 0x1
 1391 03b2 30       		.byte	0x30
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 41


 1392 03b3 00       		.byte	0
 1393 03b4 00       		.byte	0
 1394 03b5 11       		.uleb128 0x11
 1395 03b6 3E020000 		.4byte	.LASF49
 1396 03ba 01       		.byte	0x1
 1397 03bb F402     		.2byte	0x2f4
 1398 03bd 8F000000 		.4byte	0x8f
 1399 03c1 00000000 		.4byte	.LFB15
 1400 03c5 5C000000 		.4byte	.LFE15-.LFB15
 1401 03c9 01       		.uleb128 0x1
 1402 03ca 9C       		.byte	0x9c
 1403 03cb 0D040000 		.4byte	0x40d
 1404 03cf 0F       		.uleb128 0xf
 1405 03d0 73030000 		.4byte	.LASF35
 1406 03d4 01       		.byte	0x1
 1407 03d5 F402     		.2byte	0x2f4
 1408 03d7 83000000 		.4byte	0x83
 1409 03db C3020000 		.4byte	.LLST16
 1410 03df 0F       		.uleb128 0xf
 1411 03e0 B4030000 		.4byte	.LASF50
 1412 03e4 01       		.byte	0x1
 1413 03e5 F402     		.2byte	0x2f4
 1414 03e7 8F000000 		.4byte	0x8f
 1415 03eb EF020000 		.4byte	.LLST17
 1416 03ef 12       		.uleb128 0x12
 1417 03f0 8C020000 		.4byte	.LASF51
 1418 03f4 01       		.byte	0x1
 1419 03f5 F602     		.2byte	0x2f6
 1420 03f7 8F000000 		.4byte	0x8f
 1421 03fb 01       		.uleb128 0x1
 1422 03fc 50       		.byte	0x50
 1423 03fd 0A       		.uleb128 0xa
 1424 03fe 10000000 		.4byte	.LVL50
 1425 0402 6D050000 		.4byte	0x56d
 1426 0406 09       		.uleb128 0x9
 1427 0407 01       		.uleb128 0x1
 1428 0408 50       		.byte	0x50
 1429 0409 01       		.uleb128 0x1
 1430 040a 30       		.byte	0x30
 1431 040b 00       		.byte	0
 1432 040c 00       		.byte	0
 1433 040d 11       		.uleb128 0x11
 1434 040e AB010000 		.4byte	.LASF52
 1435 0412 01       		.byte	0x1
 1436 0413 2A03     		.2byte	0x32a
 1437 0415 9B000000 		.4byte	0x9b
 1438 0419 00000000 		.4byte	.LFB16
 1439 041d 40000000 		.4byte	.LFE16-.LFB16
 1440 0421 01       		.uleb128 0x1
 1441 0422 9C       		.byte	0x9c
 1442 0423 63040000 		.4byte	0x463
 1443 0427 0F       		.uleb128 0xf
 1444 0428 73030000 		.4byte	.LASF35
 1445 042c 01       		.byte	0x1
 1446 042d 2A03     		.2byte	0x32a
 1447 042f 83000000 		.4byte	0x83
 1448 0433 1B030000 		.4byte	.LLST18
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 42


 1449 0437 0F       		.uleb128 0xf
 1450 0438 B4030000 		.4byte	.LASF50
 1451 043c 01       		.byte	0x1
 1452 043d 2A03     		.2byte	0x32a
 1453 043f 8F000000 		.4byte	0x8f
 1454 0443 47030000 		.4byte	.LLST19
 1455 0447 13       		.uleb128 0x13
 1456 0448 15020000 		.4byte	.LASF66
 1457 044c 01       		.byte	0x1
 1458 044d 2C03     		.2byte	0x32c
 1459 044f C1000000 		.4byte	0xc1
 1460 0453 0A       		.uleb128 0xa
 1461 0454 10000000 		.4byte	.LVL58
 1462 0458 6D050000 		.4byte	0x56d
 1463 045c 09       		.uleb128 0x9
 1464 045d 01       		.uleb128 0x1
 1465 045e 50       		.byte	0x50
 1466 045f 01       		.uleb128 0x1
 1467 0460 30       		.byte	0x30
 1468 0461 00       		.byte	0
 1469 0462 00       		.byte	0
 1470 0463 11       		.uleb128 0x11
 1471 0464 A1020000 		.4byte	.LASF53
 1472 0468 01       		.byte	0x1
 1473 0469 5703     		.2byte	0x357
 1474 046b A7000000 		.4byte	0xa7
 1475 046f 00000000 		.4byte	.LFB17
 1476 0473 48000000 		.4byte	.LFE17-.LFB17
 1477 0477 01       		.uleb128 0x1
 1478 0478 9C       		.byte	0x9c
 1479 0479 BB040000 		.4byte	0x4bb
 1480 047d 0F       		.uleb128 0xf
 1481 047e 73030000 		.4byte	.LASF35
 1482 0482 01       		.byte	0x1
 1483 0483 5703     		.2byte	0x357
 1484 0485 83000000 		.4byte	0x83
 1485 0489 73030000 		.4byte	.LLST20
 1486 048d 0F       		.uleb128 0xf
 1487 048e B4030000 		.4byte	.LASF50
 1488 0492 01       		.byte	0x1
 1489 0493 5703     		.2byte	0x357
 1490 0495 8F000000 		.4byte	0x8f
 1491 0499 9F030000 		.4byte	.LLST21
 1492 049d 12       		.uleb128 0x12
 1493 049e 2E020000 		.4byte	.LASF54
 1494 04a2 01       		.byte	0x1
 1495 04a3 5903     		.2byte	0x359
 1496 04a5 A7000000 		.4byte	0xa7
 1497 04a9 01       		.uleb128 0x1
 1498 04aa 50       		.byte	0x50
 1499 04ab 0A       		.uleb128 0xa
 1500 04ac 10000000 		.4byte	.LVL65
 1501 04b0 6D050000 		.4byte	0x56d
 1502 04b4 09       		.uleb128 0x9
 1503 04b5 01       		.uleb128 0x1
 1504 04b6 50       		.byte	0x50
 1505 04b7 01       		.uleb128 0x1
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 43


 1506 04b8 30       		.byte	0x30
 1507 04b9 00       		.byte	0
 1508 04ba 00       		.byte	0
 1509 04bb 14       		.uleb128 0x14
 1510 04bc CB040000 		.4byte	0x4cb
 1511 04c0 CB040000 		.4byte	0x4cb
 1512 04c4 15       		.uleb128 0x15
 1513 04c5 EC000000 		.4byte	0xec
 1514 04c9 00       		.byte	0
 1515 04ca 00       		.byte	0
 1516 04cb 16       		.uleb128 0x16
 1517 04cc 83000000 		.4byte	0x83
 1518 04d0 17       		.uleb128 0x17
 1519 04d1 8D010000 		.4byte	.LASF55
 1520 04d5 01       		.byte	0x1
 1521 04d6 21       		.byte	0x21
 1522 04d7 E0040000 		.4byte	0x4e0
 1523 04db 04       		.byte	0x4
 1524 04dc 00       		.byte	0
 1525 04dd 02       		.byte	0x2
 1526 04de 00       		.byte	0
 1527 04df 00       		.byte	0
 1528 04e0 16       		.uleb128 0x16
 1529 04e1 BB040000 		.4byte	0x4bb
 1530 04e5 18       		.uleb128 0x18
 1531 04e6 C5030000 		.4byte	.LASF56
 1532 04ea 01       		.byte	0x1
 1533 04eb 18       		.byte	0x18
 1534 04ec 6B000000 		.4byte	0x6b
 1535 04f0 05       		.uleb128 0x5
 1536 04f1 03       		.byte	0x3
 1537 04f2 00000000 		.4byte	adcUser_initVar
 1538 04f6 14       		.uleb128 0x14
 1539 04f7 06050000 		.4byte	0x506
 1540 04fb 06050000 		.4byte	0x506
 1541 04ff 15       		.uleb128 0x15
 1542 0500 EC000000 		.4byte	0xec
 1543 0504 00       		.byte	0
 1544 0505 00       		.byte	0
 1545 0506 05       		.uleb128 0x5
 1546 0507 8F000000 		.4byte	0x8f
 1547 050b 18       		.uleb128 0x18
 1548 050c DC010000 		.4byte	.LASF57
 1549 0510 01       		.byte	0x1
 1550 0511 19       		.byte	0x19
 1551 0512 1C050000 		.4byte	0x51c
 1552 0516 05       		.uleb128 0x5
 1553 0517 03       		.byte	0x3
 1554 0518 00000000 		.4byte	adcUser_offset
 1555 051c 05       		.uleb128 0x5
 1556 051d F6040000 		.4byte	0x4f6
 1557 0521 14       		.uleb128 0x14
 1558 0522 31050000 		.4byte	0x531
 1559 0526 31050000 		.4byte	0x531
 1560 052a 15       		.uleb128 0x15
 1561 052b EC000000 		.4byte	0xec
 1562 052f 00       		.byte	0
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 44


 1563 0530 00       		.byte	0
 1564 0531 05       		.uleb128 0x5
 1565 0532 9B000000 		.4byte	0x9b
 1566 0536 18       		.uleb128 0x18
 1567 0537 3D030000 		.4byte	.LASF58
 1568 053b 01       		.byte	0x1
 1569 053c 1A       		.byte	0x1a
 1570 053d 47050000 		.4byte	0x547
 1571 0541 05       		.uleb128 0x5
 1572 0542 03       		.byte	0x3
 1573 0543 00000000 		.4byte	adcUser_countsPer10Volt
 1574 0547 05       		.uleb128 0x5
 1575 0548 21050000 		.4byte	0x521
 1576 054c 19       		.uleb128 0x19
 1577 054d DC020000 		.4byte	.LASF59
 1578 0551 DC020000 		.4byte	.LASF59
 1579 0555 03       		.byte	0x3
 1580 0556 D3       		.byte	0xd3
 1581 0557 19       		.uleb128 0x19
 1582 0558 7D020000 		.4byte	.LASF60
 1583 055c 7D020000 		.4byte	.LASF60
 1584 0560 03       		.byte	0x3
 1585 0561 D0       		.byte	0xd0
 1586 0562 19       		.uleb128 0x19
 1587 0563 69010000 		.4byte	.LASF61
 1588 0567 69010000 		.4byte	.LASF61
 1589 056b 03       		.byte	0x3
 1590 056c ED       		.byte	0xed
 1591 056d 19       		.uleb128 0x19
 1592 056e 36030000 		.4byte	.LASF62
 1593 0572 36030000 		.4byte	.LASF62
 1594 0576 03       		.byte	0x3
 1595 0577 FA       		.byte	0xfa
 1596 0578 00       		.byte	0
 1597              		.section	.debug_abbrev,"",%progbits
 1598              	.Ldebug_abbrev0:
 1599 0000 01       		.uleb128 0x1
 1600 0001 11       		.uleb128 0x11
 1601 0002 01       		.byte	0x1
 1602 0003 25       		.uleb128 0x25
 1603 0004 0E       		.uleb128 0xe
 1604 0005 13       		.uleb128 0x13
 1605 0006 0B       		.uleb128 0xb
 1606 0007 03       		.uleb128 0x3
 1607 0008 0E       		.uleb128 0xe
 1608 0009 1B       		.uleb128 0x1b
 1609 000a 0E       		.uleb128 0xe
 1610 000b 55       		.uleb128 0x55
 1611 000c 17       		.uleb128 0x17
 1612 000d 11       		.uleb128 0x11
 1613 000e 01       		.uleb128 0x1
 1614 000f 10       		.uleb128 0x10
 1615 0010 17       		.uleb128 0x17
 1616 0011 00       		.byte	0
 1617 0012 00       		.byte	0
 1618 0013 02       		.uleb128 0x2
 1619 0014 24       		.uleb128 0x24
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 45


 1620 0015 00       		.byte	0
 1621 0016 0B       		.uleb128 0xb
 1622 0017 0B       		.uleb128 0xb
 1623 0018 3E       		.uleb128 0x3e
 1624 0019 0B       		.uleb128 0xb
 1625 001a 03       		.uleb128 0x3
 1626 001b 0E       		.uleb128 0xe
 1627 001c 00       		.byte	0
 1628 001d 00       		.byte	0
 1629 001e 03       		.uleb128 0x3
 1630 001f 24       		.uleb128 0x24
 1631 0020 00       		.byte	0
 1632 0021 0B       		.uleb128 0xb
 1633 0022 0B       		.uleb128 0xb
 1634 0023 3E       		.uleb128 0x3e
 1635 0024 0B       		.uleb128 0xb
 1636 0025 03       		.uleb128 0x3
 1637 0026 08       		.uleb128 0x8
 1638 0027 00       		.byte	0
 1639 0028 00       		.byte	0
 1640 0029 04       		.uleb128 0x4
 1641 002a 16       		.uleb128 0x16
 1642 002b 00       		.byte	0
 1643 002c 03       		.uleb128 0x3
 1644 002d 0E       		.uleb128 0xe
 1645 002e 3A       		.uleb128 0x3a
 1646 002f 0B       		.uleb128 0xb
 1647 0030 3B       		.uleb128 0x3b
 1648 0031 05       		.uleb128 0x5
 1649 0032 49       		.uleb128 0x49
 1650 0033 13       		.uleb128 0x13
 1651 0034 00       		.byte	0
 1652 0035 00       		.byte	0
 1653 0036 05       		.uleb128 0x5
 1654 0037 35       		.uleb128 0x35
 1655 0038 00       		.byte	0
 1656 0039 49       		.uleb128 0x49
 1657 003a 13       		.uleb128 0x13
 1658 003b 00       		.byte	0
 1659 003c 00       		.byte	0
 1660 003d 06       		.uleb128 0x6
 1661 003e 2E       		.uleb128 0x2e
 1662 003f 01       		.byte	0x1
 1663 0040 3F       		.uleb128 0x3f
 1664 0041 19       		.uleb128 0x19
 1665 0042 03       		.uleb128 0x3
 1666 0043 0E       		.uleb128 0xe
 1667 0044 3A       		.uleb128 0x3a
 1668 0045 0B       		.uleb128 0xb
 1669 0046 3B       		.uleb128 0x3b
 1670 0047 0B       		.uleb128 0xb
 1671 0048 27       		.uleb128 0x27
 1672 0049 19       		.uleb128 0x19
 1673 004a 11       		.uleb128 0x11
 1674 004b 01       		.uleb128 0x1
 1675 004c 12       		.uleb128 0x12
 1676 004d 06       		.uleb128 0x6
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 46


 1677 004e 40       		.uleb128 0x40
 1678 004f 18       		.uleb128 0x18
 1679 0050 9742     		.uleb128 0x2117
 1680 0052 19       		.uleb128 0x19
 1681 0053 01       		.uleb128 0x1
 1682 0054 13       		.uleb128 0x13
 1683 0055 00       		.byte	0
 1684 0056 00       		.byte	0
 1685 0057 07       		.uleb128 0x7
 1686 0058 34       		.uleb128 0x34
 1687 0059 00       		.byte	0
 1688 005a 03       		.uleb128 0x3
 1689 005b 0E       		.uleb128 0xe
 1690 005c 3A       		.uleb128 0x3a
 1691 005d 0B       		.uleb128 0xb
 1692 005e 3B       		.uleb128 0x3b
 1693 005f 0B       		.uleb128 0xb
 1694 0060 49       		.uleb128 0x49
 1695 0061 13       		.uleb128 0x13
 1696 0062 02       		.uleb128 0x2
 1697 0063 17       		.uleb128 0x17
 1698 0064 00       		.byte	0
 1699 0065 00       		.byte	0
 1700 0066 08       		.uleb128 0x8
 1701 0067 898201   		.uleb128 0x4109
 1702 006a 01       		.byte	0x1
 1703 006b 11       		.uleb128 0x11
 1704 006c 01       		.uleb128 0x1
 1705 006d 31       		.uleb128 0x31
 1706 006e 13       		.uleb128 0x13
 1707 006f 01       		.uleb128 0x1
 1708 0070 13       		.uleb128 0x13
 1709 0071 00       		.byte	0
 1710 0072 00       		.byte	0
 1711 0073 09       		.uleb128 0x9
 1712 0074 8A8201   		.uleb128 0x410a
 1713 0077 00       		.byte	0
 1714 0078 02       		.uleb128 0x2
 1715 0079 18       		.uleb128 0x18
 1716 007a 9142     		.uleb128 0x2111
 1717 007c 18       		.uleb128 0x18
 1718 007d 00       		.byte	0
 1719 007e 00       		.byte	0
 1720 007f 0A       		.uleb128 0xa
 1721 0080 898201   		.uleb128 0x4109
 1722 0083 01       		.byte	0x1
 1723 0084 11       		.uleb128 0x11
 1724 0085 01       		.uleb128 0x1
 1725 0086 31       		.uleb128 0x31
 1726 0087 13       		.uleb128 0x13
 1727 0088 00       		.byte	0
 1728 0089 00       		.byte	0
 1729 008a 0B       		.uleb128 0xb
 1730 008b 2E       		.uleb128 0x2e
 1731 008c 01       		.byte	0x1
 1732 008d 3F       		.uleb128 0x3f
 1733 008e 19       		.uleb128 0x19
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 47


 1734 008f 03       		.uleb128 0x3
 1735 0090 0E       		.uleb128 0xe
 1736 0091 3A       		.uleb128 0x3a
 1737 0092 0B       		.uleb128 0xb
 1738 0093 3B       		.uleb128 0x3b
 1739 0094 05       		.uleb128 0x5
 1740 0095 27       		.uleb128 0x27
 1741 0096 19       		.uleb128 0x19
 1742 0097 11       		.uleb128 0x11
 1743 0098 01       		.uleb128 0x1
 1744 0099 12       		.uleb128 0x12
 1745 009a 06       		.uleb128 0x6
 1746 009b 40       		.uleb128 0x40
 1747 009c 18       		.uleb128 0x18
 1748 009d 9742     		.uleb128 0x2117
 1749 009f 19       		.uleb128 0x19
 1750 00a0 01       		.uleb128 0x1
 1751 00a1 13       		.uleb128 0x13
 1752 00a2 00       		.byte	0
 1753 00a3 00       		.byte	0
 1754 00a4 0C       		.uleb128 0xc
 1755 00a5 898201   		.uleb128 0x4109
 1756 00a8 00       		.byte	0
 1757 00a9 11       		.uleb128 0x11
 1758 00aa 01       		.uleb128 0x1
 1759 00ab 31       		.uleb128 0x31
 1760 00ac 13       		.uleb128 0x13
 1761 00ad 00       		.byte	0
 1762 00ae 00       		.byte	0
 1763 00af 0D       		.uleb128 0xd
 1764 00b0 2E       		.uleb128 0x2e
 1765 00b1 00       		.byte	0
 1766 00b2 3F       		.uleb128 0x3f
 1767 00b3 19       		.uleb128 0x19
 1768 00b4 03       		.uleb128 0x3
 1769 00b5 0E       		.uleb128 0xe
 1770 00b6 3A       		.uleb128 0x3a
 1771 00b7 0B       		.uleb128 0xb
 1772 00b8 3B       		.uleb128 0x3b
 1773 00b9 05       		.uleb128 0x5
 1774 00ba 27       		.uleb128 0x27
 1775 00bb 19       		.uleb128 0x19
 1776 00bc 11       		.uleb128 0x11
 1777 00bd 01       		.uleb128 0x1
 1778 00be 12       		.uleb128 0x12
 1779 00bf 06       		.uleb128 0x6
 1780 00c0 40       		.uleb128 0x40
 1781 00c1 18       		.uleb128 0x18
 1782 00c2 9742     		.uleb128 0x2117
 1783 00c4 19       		.uleb128 0x19
 1784 00c5 00       		.byte	0
 1785 00c6 00       		.byte	0
 1786 00c7 0E       		.uleb128 0xe
 1787 00c8 2E       		.uleb128 0x2e
 1788 00c9 01       		.byte	0x1
 1789 00ca 3F       		.uleb128 0x3f
 1790 00cb 19       		.uleb128 0x19
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 48


 1791 00cc 03       		.uleb128 0x3
 1792 00cd 0E       		.uleb128 0xe
 1793 00ce 3A       		.uleb128 0x3a
 1794 00cf 0B       		.uleb128 0xb
 1795 00d0 3B       		.uleb128 0x3b
 1796 00d1 05       		.uleb128 0x5
 1797 00d2 27       		.uleb128 0x27
 1798 00d3 19       		.uleb128 0x19
 1799 00d4 49       		.uleb128 0x49
 1800 00d5 13       		.uleb128 0x13
 1801 00d6 11       		.uleb128 0x11
 1802 00d7 01       		.uleb128 0x1
 1803 00d8 12       		.uleb128 0x12
 1804 00d9 06       		.uleb128 0x6
 1805 00da 40       		.uleb128 0x40
 1806 00db 18       		.uleb128 0x18
 1807 00dc 9742     		.uleb128 0x2117
 1808 00de 19       		.uleb128 0x19
 1809 00df 01       		.uleb128 0x1
 1810 00e0 13       		.uleb128 0x13
 1811 00e1 00       		.byte	0
 1812 00e2 00       		.byte	0
 1813 00e3 0F       		.uleb128 0xf
 1814 00e4 05       		.uleb128 0x5
 1815 00e5 00       		.byte	0
 1816 00e6 03       		.uleb128 0x3
 1817 00e7 0E       		.uleb128 0xe
 1818 00e8 3A       		.uleb128 0x3a
 1819 00e9 0B       		.uleb128 0xb
 1820 00ea 3B       		.uleb128 0x3b
 1821 00eb 05       		.uleb128 0x5
 1822 00ec 49       		.uleb128 0x49
 1823 00ed 13       		.uleb128 0x13
 1824 00ee 02       		.uleb128 0x2
 1825 00ef 17       		.uleb128 0x17
 1826 00f0 00       		.byte	0
 1827 00f1 00       		.byte	0
 1828 00f2 10       		.uleb128 0x10
 1829 00f3 34       		.uleb128 0x34
 1830 00f4 00       		.byte	0
 1831 00f5 03       		.uleb128 0x3
 1832 00f6 0E       		.uleb128 0xe
 1833 00f7 3A       		.uleb128 0x3a
 1834 00f8 0B       		.uleb128 0xb
 1835 00f9 3B       		.uleb128 0x3b
 1836 00fa 05       		.uleb128 0x5
 1837 00fb 49       		.uleb128 0x49
 1838 00fc 13       		.uleb128 0x13
 1839 00fd 02       		.uleb128 0x2
 1840 00fe 17       		.uleb128 0x17
 1841 00ff 00       		.byte	0
 1842 0100 00       		.byte	0
 1843 0101 11       		.uleb128 0x11
 1844 0102 2E       		.uleb128 0x2e
 1845 0103 01       		.byte	0x1
 1846 0104 3F       		.uleb128 0x3f
 1847 0105 19       		.uleb128 0x19
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 49


 1848 0106 03       		.uleb128 0x3
 1849 0107 0E       		.uleb128 0xe
 1850 0108 3A       		.uleb128 0x3a
 1851 0109 0B       		.uleb128 0xb
 1852 010a 3B       		.uleb128 0x3b
 1853 010b 05       		.uleb128 0x5
 1854 010c 27       		.uleb128 0x27
 1855 010d 19       		.uleb128 0x19
 1856 010e 49       		.uleb128 0x49
 1857 010f 13       		.uleb128 0x13
 1858 0110 11       		.uleb128 0x11
 1859 0111 01       		.uleb128 0x1
 1860 0112 12       		.uleb128 0x12
 1861 0113 06       		.uleb128 0x6
 1862 0114 40       		.uleb128 0x40
 1863 0115 18       		.uleb128 0x18
 1864 0116 9642     		.uleb128 0x2116
 1865 0118 19       		.uleb128 0x19
 1866 0119 01       		.uleb128 0x1
 1867 011a 13       		.uleb128 0x13
 1868 011b 00       		.byte	0
 1869 011c 00       		.byte	0
 1870 011d 12       		.uleb128 0x12
 1871 011e 34       		.uleb128 0x34
 1872 011f 00       		.byte	0
 1873 0120 03       		.uleb128 0x3
 1874 0121 0E       		.uleb128 0xe
 1875 0122 3A       		.uleb128 0x3a
 1876 0123 0B       		.uleb128 0xb
 1877 0124 3B       		.uleb128 0x3b
 1878 0125 05       		.uleb128 0x5
 1879 0126 49       		.uleb128 0x49
 1880 0127 13       		.uleb128 0x13
 1881 0128 02       		.uleb128 0x2
 1882 0129 18       		.uleb128 0x18
 1883 012a 00       		.byte	0
 1884 012b 00       		.byte	0
 1885 012c 13       		.uleb128 0x13
 1886 012d 34       		.uleb128 0x34
 1887 012e 00       		.byte	0
 1888 012f 03       		.uleb128 0x3
 1889 0130 0E       		.uleb128 0xe
 1890 0131 3A       		.uleb128 0x3a
 1891 0132 0B       		.uleb128 0xb
 1892 0133 3B       		.uleb128 0x3b
 1893 0134 05       		.uleb128 0x5
 1894 0135 49       		.uleb128 0x49
 1895 0136 13       		.uleb128 0x13
 1896 0137 00       		.byte	0
 1897 0138 00       		.byte	0
 1898 0139 14       		.uleb128 0x14
 1899 013a 01       		.uleb128 0x1
 1900 013b 01       		.byte	0x1
 1901 013c 49       		.uleb128 0x49
 1902 013d 13       		.uleb128 0x13
 1903 013e 01       		.uleb128 0x1
 1904 013f 13       		.uleb128 0x13
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 50


 1905 0140 00       		.byte	0
 1906 0141 00       		.byte	0
 1907 0142 15       		.uleb128 0x15
 1908 0143 21       		.uleb128 0x21
 1909 0144 00       		.byte	0
 1910 0145 49       		.uleb128 0x49
 1911 0146 13       		.uleb128 0x13
 1912 0147 2F       		.uleb128 0x2f
 1913 0148 0B       		.uleb128 0xb
 1914 0149 00       		.byte	0
 1915 014a 00       		.byte	0
 1916 014b 16       		.uleb128 0x16
 1917 014c 26       		.uleb128 0x26
 1918 014d 00       		.byte	0
 1919 014e 49       		.uleb128 0x49
 1920 014f 13       		.uleb128 0x13
 1921 0150 00       		.byte	0
 1922 0151 00       		.byte	0
 1923 0152 17       		.uleb128 0x17
 1924 0153 34       		.uleb128 0x34
 1925 0154 00       		.byte	0
 1926 0155 03       		.uleb128 0x3
 1927 0156 0E       		.uleb128 0xe
 1928 0157 3A       		.uleb128 0x3a
 1929 0158 0B       		.uleb128 0xb
 1930 0159 3B       		.uleb128 0x3b
 1931 015a 0B       		.uleb128 0xb
 1932 015b 49       		.uleb128 0x49
 1933 015c 13       		.uleb128 0x13
 1934 015d 1C       		.uleb128 0x1c
 1935 015e 0A       		.uleb128 0xa
 1936 015f 00       		.byte	0
 1937 0160 00       		.byte	0
 1938 0161 18       		.uleb128 0x18
 1939 0162 34       		.uleb128 0x34
 1940 0163 00       		.byte	0
 1941 0164 03       		.uleb128 0x3
 1942 0165 0E       		.uleb128 0xe
 1943 0166 3A       		.uleb128 0x3a
 1944 0167 0B       		.uleb128 0xb
 1945 0168 3B       		.uleb128 0x3b
 1946 0169 0B       		.uleb128 0xb
 1947 016a 49       		.uleb128 0x49
 1948 016b 13       		.uleb128 0x13
 1949 016c 3F       		.uleb128 0x3f
 1950 016d 19       		.uleb128 0x19
 1951 016e 02       		.uleb128 0x2
 1952 016f 18       		.uleb128 0x18
 1953 0170 00       		.byte	0
 1954 0171 00       		.byte	0
 1955 0172 19       		.uleb128 0x19
 1956 0173 2E       		.uleb128 0x2e
 1957 0174 00       		.byte	0
 1958 0175 3F       		.uleb128 0x3f
 1959 0176 19       		.uleb128 0x19
 1960 0177 3C       		.uleb128 0x3c
 1961 0178 19       		.uleb128 0x19
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 51


 1962 0179 6E       		.uleb128 0x6e
 1963 017a 0E       		.uleb128 0xe
 1964 017b 03       		.uleb128 0x3
 1965 017c 0E       		.uleb128 0xe
 1966 017d 3A       		.uleb128 0x3a
 1967 017e 0B       		.uleb128 0xb
 1968 017f 3B       		.uleb128 0x3b
 1969 0180 0B       		.uleb128 0xb
 1970 0181 00       		.byte	0
 1971 0182 00       		.byte	0
 1972 0183 00       		.byte	0
 1973              		.section	.debug_loc,"",%progbits
 1974              	.Ldebug_loc0:
 1975              	.LLST0:
 1976 0000 7A000000 		.4byte	.LVL6
 1977 0004 7E000000 		.4byte	.LVL8
 1978 0008 0200     		.2byte	0x2
 1979 000a 30       		.byte	0x30
 1980 000b 9F       		.byte	0x9f
 1981 000c 7E000000 		.4byte	.LVL8
 1982 0010 08010000 		.4byte	.LFE1
 1983 0014 0100     		.2byte	0x1
 1984 0016 53       		.byte	0x53
 1985 0017 00000000 		.4byte	0
 1986 001b 00000000 		.4byte	0
 1987              	.LLST1:
 1988 001f 6E000000 		.4byte	.LVL2
 1989 0023 72000000 		.4byte	.LVL3
 1990 0027 0100     		.2byte	0x1
 1991 0029 54       		.byte	0x54
 1992 002a 72000000 		.4byte	.LVL3
 1993 002e 74000000 		.4byte	.LVL4
 1994 0032 0100     		.2byte	0x1
 1995 0034 52       		.byte	0x52
 1996 0035 74000000 		.4byte	.LVL4
 1997 0039 78000000 		.4byte	.LVL5
 1998 003d 0100     		.2byte	0x1
 1999 003f 53       		.byte	0x53
 2000 0040 78000000 		.4byte	.LVL5
 2001 0044 7A000000 		.4byte	.LVL6
 2002 0048 0200     		.2byte	0x2
 2003 004a 70       		.byte	0x70
 2004 004b 00       		.sleb128 0
 2005 004c 7A000000 		.4byte	.LVL6
 2006 0050 7C000000 		.4byte	.LVL7
 2007 0054 0500     		.2byte	0x5
 2008 0056 72       		.byte	0x72
 2009 0057 00       		.sleb128 0
 2010 0058 31       		.byte	0x31
 2011 0059 21       		.byte	0x21
 2012 005a 9F       		.byte	0x9f
 2013 005b 7C000000 		.4byte	.LVL7
 2014 005f 7E000000 		.4byte	.LVL8
 2015 0063 0600     		.2byte	0x6
 2016 0065 73       		.byte	0x73
 2017 0066 01       		.sleb128 1
 2018 0067 72       		.byte	0x72
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 52


 2019 0068 00       		.sleb128 0
 2020 0069 21       		.byte	0x21
 2021 006a 9F       		.byte	0x9f
 2022 006b 7E000000 		.4byte	.LVL8
 2023 006f 9C000000 		.4byte	.LVL10
 2024 0073 0400     		.2byte	0x4
 2025 0075 0A       		.byte	0xa
 2026 0076 0002     		.2byte	0x200
 2027 0078 9F       		.byte	0x9f
 2028 0079 00000000 		.4byte	0
 2029 007d 00000000 		.4byte	0
 2030              	.LLST2:
 2031 0081 8A000000 		.4byte	.LVL9
 2032 0085 9C000000 		.4byte	.LVL10
 2033 0089 0400     		.2byte	0x4
 2034 008b 0A       		.byte	0xa
 2035 008c 0001     		.2byte	0x100
 2036 008e 9F       		.byte	0x9f
 2037 008f 00000000 		.4byte	0
 2038 0093 00000000 		.4byte	0
 2039              	.LLST3:
 2040 0097 00000000 		.4byte	.LVL14
 2041 009b 06000000 		.4byte	.LVL16
 2042 009f 0100     		.2byte	0x1
 2043 00a1 50       		.byte	0x50
 2044 00a2 06000000 		.4byte	.LVL16
 2045 00a6 1A000000 		.4byte	.LVL18
 2046 00aa 0100     		.2byte	0x1
 2047 00ac 52       		.byte	0x52
 2048 00ad 1A000000 		.4byte	.LVL18
 2049 00b1 20000000 		.4byte	.LVL19
 2050 00b5 0400     		.2byte	0x4
 2051 00b7 F3       		.byte	0xf3
 2052 00b8 01       		.uleb128 0x1
 2053 00b9 50       		.byte	0x50
 2054 00ba 9F       		.byte	0x9f
 2055 00bb 20000000 		.4byte	.LVL19
 2056 00bf 22000000 		.4byte	.LVL20
 2057 00c3 0100     		.2byte	0x1
 2058 00c5 50       		.byte	0x50
 2059 00c6 22000000 		.4byte	.LVL20
 2060 00ca 28000000 		.4byte	.LFE6
 2061 00ce 0400     		.2byte	0x4
 2062 00d0 F3       		.byte	0xf3
 2063 00d1 01       		.uleb128 0x1
 2064 00d2 50       		.byte	0x50
 2065 00d3 9F       		.byte	0x9f
 2066 00d4 00000000 		.4byte	0
 2067 00d8 00000000 		.4byte	0
 2068              	.LLST4:
 2069 00dc 02000000 		.4byte	.LVL15
 2070 00e0 06000000 		.4byte	.LVL16
 2071 00e4 0200     		.2byte	0x2
 2072 00e6 30       		.byte	0x30
 2073 00e7 9F       		.byte	0x9f
 2074 00e8 0E000000 		.4byte	.LVL17
 2075 00ec 20000000 		.4byte	.LVL19
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 53


 2076 00f0 0100     		.2byte	0x1
 2077 00f2 50       		.byte	0x50
 2078 00f3 20000000 		.4byte	.LVL19
 2079 00f7 22000000 		.4byte	.LVL20
 2080 00fb 0200     		.2byte	0x2
 2081 00fd 30       		.byte	0x30
 2082 00fe 9F       		.byte	0x9f
 2083 00ff 22000000 		.4byte	.LVL20
 2084 0103 28000000 		.4byte	.LFE6
 2085 0107 0100     		.2byte	0x1
 2086 0109 50       		.byte	0x50
 2087 010a 00000000 		.4byte	0
 2088 010e 00000000 		.4byte	0
 2089              	.LLST5:
 2090 0112 00000000 		.4byte	.LVL21
 2091 0116 08000000 		.4byte	.LVL22
 2092 011a 0100     		.2byte	0x1
 2093 011c 50       		.byte	0x50
 2094 011d 08000000 		.4byte	.LVL22
 2095 0121 12000000 		.4byte	.LVL24
 2096 0125 0100     		.2byte	0x1
 2097 0127 54       		.byte	0x54
 2098 0128 12000000 		.4byte	.LVL24
 2099 012c 20000000 		.4byte	.LVL26
 2100 0130 0400     		.2byte	0x4
 2101 0132 F3       		.byte	0xf3
 2102 0133 01       		.uleb128 0x1
 2103 0134 50       		.byte	0x50
 2104 0135 9F       		.byte	0x9f
 2105 0136 20000000 		.4byte	.LVL26
 2106 013a 22000000 		.4byte	.LVL27
 2107 013e 0100     		.2byte	0x1
 2108 0140 54       		.byte	0x54
 2109 0141 22000000 		.4byte	.LVL27
 2110 0145 2C000000 		.4byte	.LFE7
 2111 0149 0400     		.2byte	0x4
 2112 014b F3       		.byte	0xf3
 2113 014c 01       		.uleb128 0x1
 2114 014d 50       		.byte	0x50
 2115 014e 9F       		.byte	0x9f
 2116 014f 00000000 		.4byte	0
 2117 0153 00000000 		.4byte	0
 2118              	.LLST6:
 2119 0157 1E000000 		.4byte	.LVL25
 2120 015b 20000000 		.4byte	.LVL26
 2121 015f 0100     		.2byte	0x1
 2122 0161 50       		.byte	0x50
 2123 0162 22000000 		.4byte	.LVL27
 2124 0166 24000000 		.4byte	.LVL28
 2125 016a 0100     		.2byte	0x1
 2126 016c 50       		.byte	0x50
 2127 016d 00000000 		.4byte	0
 2128 0171 00000000 		.4byte	0
 2129              	.LLST7:
 2130 0175 00000000 		.4byte	.LVL29
 2131 0179 04000000 		.4byte	.LVL30
 2132 017d 0100     		.2byte	0x1
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 54


 2133 017f 50       		.byte	0x50
 2134 0180 04000000 		.4byte	.LVL30
 2135 0184 10000000 		.4byte	.LFE8
 2136 0188 0400     		.2byte	0x4
 2137 018a F3       		.byte	0xf3
 2138 018b 01       		.uleb128 0x1
 2139 018c 50       		.byte	0x50
 2140 018d 9F       		.byte	0x9f
 2141 018e 00000000 		.4byte	0
 2142 0192 00000000 		.4byte	0
 2143              	.LLST8:
 2144 0196 00000000 		.4byte	.LVL31
 2145 019a 0E000000 		.4byte	.LVL32
 2146 019e 0100     		.2byte	0x1
 2147 01a0 50       		.byte	0x50
 2148 01a1 0E000000 		.4byte	.LVL32
 2149 01a5 1C000000 		.4byte	.LFE9
 2150 01a9 0400     		.2byte	0x4
 2151 01ab F3       		.byte	0xf3
 2152 01ac 01       		.uleb128 0x1
 2153 01ad 50       		.byte	0x50
 2154 01ae 9F       		.byte	0x9f
 2155 01af 00000000 		.4byte	0
 2156 01b3 00000000 		.4byte	0
 2157              	.LLST9:
 2158 01b7 00000000 		.4byte	.LVL33
 2159 01bb 0E000000 		.4byte	.LVL34
 2160 01bf 0100     		.2byte	0x1
 2161 01c1 50       		.byte	0x50
 2162 01c2 0E000000 		.4byte	.LVL34
 2163 01c6 18000000 		.4byte	.LFE10
 2164 01ca 0400     		.2byte	0x4
 2165 01cc F3       		.byte	0xf3
 2166 01cd 01       		.uleb128 0x1
 2167 01ce 50       		.byte	0x50
 2168 01cf 9F       		.byte	0x9f
 2169 01d0 00000000 		.4byte	0
 2170 01d4 00000000 		.4byte	0
 2171              	.LLST10:
 2172 01d8 00000000 		.4byte	.LVL35
 2173 01dc 04000000 		.4byte	.LVL36
 2174 01e0 0100     		.2byte	0x1
 2175 01e2 50       		.byte	0x50
 2176 01e3 04000000 		.4byte	.LVL36
 2177 01e7 10000000 		.4byte	.LFE11
 2178 01eb 0400     		.2byte	0x4
 2179 01ed F3       		.byte	0xf3
 2180 01ee 01       		.uleb128 0x1
 2181 01ef 50       		.byte	0x50
 2182 01f0 9F       		.byte	0x9f
 2183 01f1 00000000 		.4byte	0
 2184 01f5 00000000 		.4byte	0
 2185              	.LLST11:
 2186 01f9 00000000 		.4byte	.LVL37
 2187 01fd 04000000 		.4byte	.LVL38
 2188 0201 0100     		.2byte	0x1
 2189 0203 50       		.byte	0x50
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 55


 2190 0204 04000000 		.4byte	.LVL38
 2191 0208 10000000 		.4byte	.LFE12
 2192 020c 0400     		.2byte	0x4
 2193 020e F3       		.byte	0xf3
 2194 020f 01       		.uleb128 0x1
 2195 0210 50       		.byte	0x50
 2196 0211 9F       		.byte	0x9f
 2197 0212 00000000 		.4byte	0
 2198 0216 00000000 		.4byte	0
 2199              	.LLST12:
 2200 021a 00000000 		.4byte	.LVL39
 2201 021e 0C000000 		.4byte	.LVL40
 2202 0222 0100     		.2byte	0x1
 2203 0224 50       		.byte	0x50
 2204 0225 0C000000 		.4byte	.LVL40
 2205 0229 12000000 		.4byte	.LVL42
 2206 022d 0100     		.2byte	0x1
 2207 022f 54       		.byte	0x54
 2208 0230 12000000 		.4byte	.LVL42
 2209 0234 1C000000 		.4byte	.LFE13
 2210 0238 0400     		.2byte	0x4
 2211 023a F3       		.byte	0xf3
 2212 023b 01       		.uleb128 0x1
 2213 023c 50       		.byte	0x50
 2214 023d 9F       		.byte	0x9f
 2215 023e 00000000 		.4byte	0
 2216 0242 00000000 		.4byte	0
 2217              	.LLST13:
 2218 0246 00000000 		.4byte	.LVL39
 2219 024a 0F000000 		.4byte	.LVL41-1
 2220 024e 0100     		.2byte	0x1
 2221 0250 51       		.byte	0x51
 2222 0251 0F000000 		.4byte	.LVL41-1
 2223 0255 1C000000 		.4byte	.LFE13
 2224 0259 0400     		.2byte	0x4
 2225 025b F3       		.byte	0xf3
 2226 025c 01       		.uleb128 0x1
 2227 025d 51       		.byte	0x51
 2228 025e 9F       		.byte	0x9f
 2229 025f 00000000 		.4byte	0
 2230 0263 00000000 		.4byte	0
 2231              	.LLST14:
 2232 0267 00000000 		.4byte	.LVL43
 2233 026b 0C000000 		.4byte	.LVL44
 2234 026f 0100     		.2byte	0x1
 2235 0271 50       		.byte	0x50
 2236 0272 0C000000 		.4byte	.LVL44
 2237 0276 12000000 		.4byte	.LVL46
 2238 027a 0100     		.2byte	0x1
 2239 027c 54       		.byte	0x54
 2240 027d 12000000 		.4byte	.LVL46
 2241 0281 1C000000 		.4byte	.LFE14
 2242 0285 0400     		.2byte	0x4
 2243 0287 F3       		.byte	0xf3
 2244 0288 01       		.uleb128 0x1
 2245 0289 50       		.byte	0x50
 2246 028a 9F       		.byte	0x9f
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 56


 2247 028b 00000000 		.4byte	0
 2248 028f 00000000 		.4byte	0
 2249              	.LLST15:
 2250 0293 00000000 		.4byte	.LVL43
 2251 0297 0F000000 		.4byte	.LVL45-1
 2252 029b 0100     		.2byte	0x1
 2253 029d 51       		.byte	0x51
 2254 029e 0F000000 		.4byte	.LVL45-1
 2255 02a2 16000000 		.4byte	.LVL47
 2256 02a6 0100     		.2byte	0x1
 2257 02a8 55       		.byte	0x55
 2258 02a9 16000000 		.4byte	.LVL47
 2259 02ad 1C000000 		.4byte	.LFE14
 2260 02b1 0800     		.2byte	0x8
 2261 02b3 F3       		.byte	0xf3
 2262 02b4 01       		.uleb128 0x1
 2263 02b5 50       		.byte	0x50
 2264 02b6 32       		.byte	0x32
 2265 02b7 24       		.byte	0x24
 2266 02b8 73       		.byte	0x73
 2267 02b9 00       		.sleb128 0
 2268 02ba 22       		.byte	0x22
 2269 02bb 00000000 		.4byte	0
 2270 02bf 00000000 		.4byte	0
 2271              	.LLST16:
 2272 02c3 00000000 		.4byte	.LVL48
 2273 02c7 0C000000 		.4byte	.LVL49
 2274 02cb 0100     		.2byte	0x1
 2275 02cd 50       		.byte	0x50
 2276 02ce 0C000000 		.4byte	.LVL49
 2277 02d2 44000000 		.4byte	.LVL52
 2278 02d6 0100     		.2byte	0x1
 2279 02d8 54       		.byte	0x54
 2280 02d9 44000000 		.4byte	.LVL52
 2281 02dd 5C000000 		.4byte	.LFE15
 2282 02e1 0400     		.2byte	0x4
 2283 02e3 F3       		.byte	0xf3
 2284 02e4 01       		.uleb128 0x1
 2285 02e5 50       		.byte	0x50
 2286 02e6 9F       		.byte	0x9f
 2287 02e7 00000000 		.4byte	0
 2288 02eb 00000000 		.4byte	0
 2289              	.LLST17:
 2290 02ef 00000000 		.4byte	.LVL48
 2291 02f3 0F000000 		.4byte	.LVL50-1
 2292 02f7 0100     		.2byte	0x1
 2293 02f9 51       		.byte	0x51
 2294 02fa 0F000000 		.4byte	.LVL50-1
 2295 02fe 1C000000 		.4byte	.LVL51
 2296 0302 0400     		.2byte	0x4
 2297 0304 F3       		.byte	0xf3
 2298 0305 01       		.uleb128 0x1
 2299 0306 51       		.byte	0x51
 2300 0307 9F       		.byte	0x9f
 2301 0308 1C000000 		.4byte	.LVL51
 2302 030c 48000000 		.4byte	.LVL53
 2303 0310 0100     		.2byte	0x1
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 57


 2304 0312 51       		.byte	0x51
 2305 0313 00000000 		.4byte	0
 2306 0317 00000000 		.4byte	0
 2307              	.LLST18:
 2308 031b 00000000 		.4byte	.LVL56
 2309 031f 0C000000 		.4byte	.LVL57
 2310 0323 0100     		.2byte	0x1
 2311 0325 50       		.byte	0x50
 2312 0326 0C000000 		.4byte	.LVL57
 2313 032a 28000000 		.4byte	.LVL61
 2314 032e 0100     		.2byte	0x1
 2315 0330 55       		.byte	0x55
 2316 0331 28000000 		.4byte	.LVL61
 2317 0335 40000000 		.4byte	.LFE16
 2318 0339 0400     		.2byte	0x4
 2319 033b F3       		.byte	0xf3
 2320 033c 01       		.uleb128 0x1
 2321 033d 50       		.byte	0x50
 2322 033e 9F       		.byte	0x9f
 2323 033f 00000000 		.4byte	0
 2324 0343 00000000 		.4byte	0
 2325              	.LLST19:
 2326 0347 00000000 		.4byte	.LVL56
 2327 034b 0F000000 		.4byte	.LVL58-1
 2328 034f 0100     		.2byte	0x1
 2329 0351 51       		.byte	0x51
 2330 0352 0F000000 		.4byte	.LVL58-1
 2331 0356 1C000000 		.4byte	.LVL59
 2332 035a 0400     		.2byte	0x4
 2333 035c F3       		.byte	0xf3
 2334 035d 01       		.uleb128 0x1
 2335 035e 51       		.byte	0x51
 2336 035f 9F       		.byte	0x9f
 2337 0360 1C000000 		.4byte	.LVL59
 2338 0364 25000000 		.4byte	.LVL60-1
 2339 0368 0100     		.2byte	0x1
 2340 036a 50       		.byte	0x50
 2341 036b 00000000 		.4byte	0
 2342 036f 00000000 		.4byte	0
 2343              	.LLST20:
 2344 0373 00000000 		.4byte	.LVL63
 2345 0377 0C000000 		.4byte	.LVL64
 2346 037b 0100     		.2byte	0x1
 2347 037d 50       		.byte	0x50
 2348 037e 0C000000 		.4byte	.LVL64
 2349 0382 2A000000 		.4byte	.LVL69
 2350 0386 0100     		.2byte	0x1
 2351 0388 54       		.byte	0x54
 2352 0389 2A000000 		.4byte	.LVL69
 2353 038d 48000000 		.4byte	.LFE17
 2354 0391 0400     		.2byte	0x4
 2355 0393 F3       		.byte	0xf3
 2356 0394 01       		.uleb128 0x1
 2357 0395 50       		.byte	0x50
 2358 0396 9F       		.byte	0x9f
 2359 0397 00000000 		.4byte	0
 2360 039b 00000000 		.4byte	0
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 58


 2361              	.LLST21:
 2362 039f 00000000 		.4byte	.LVL63
 2363 03a3 0F000000 		.4byte	.LVL65-1
 2364 03a7 0100     		.2byte	0x1
 2365 03a9 51       		.byte	0x51
 2366 03aa 0F000000 		.4byte	.LVL65-1
 2367 03ae 1C000000 		.4byte	.LVL66
 2368 03b2 0400     		.2byte	0x4
 2369 03b4 F3       		.byte	0xf3
 2370 03b5 01       		.uleb128 0x1
 2371 03b6 51       		.byte	0x51
 2372 03b7 9F       		.byte	0x9f
 2373 03b8 1C000000 		.4byte	.LVL66
 2374 03bc 1F000000 		.4byte	.LVL67-1
 2375 03c0 0100     		.2byte	0x1
 2376 03c2 50       		.byte	0x50
 2377 03c3 00000000 		.4byte	0
 2378 03c7 00000000 		.4byte	0
 2379              		.section	.debug_aranges,"",%progbits
 2380 0000 A4000000 		.4byte	0xa4
 2381 0004 0200     		.2byte	0x2
 2382 0006 00000000 		.4byte	.Ldebug_info0
 2383 000a 04       		.byte	0x4
 2384 000b 00       		.byte	0
 2385 000c 0000     		.2byte	0
 2386 000e 0000     		.2byte	0
 2387 0010 00000000 		.4byte	.LFB1
 2388 0014 08010000 		.4byte	.LFE1-.LFB1
 2389 0018 00000000 		.4byte	.LFB2
 2390 001c 24000000 		.4byte	.LFE2-.LFB2
 2391 0020 00000000 		.4byte	.LFB0
 2392 0024 20000000 		.4byte	.LFE0-.LFB0
 2393 0028 00000000 		.4byte	.LFB3
 2394 002c 10000000 		.4byte	.LFE3-.LFB3
 2395 0030 00000000 		.4byte	.LFB4
 2396 0034 14000000 		.4byte	.LFE4-.LFB4
 2397 0038 00000000 		.4byte	.LFB5
 2398 003c 14000000 		.4byte	.LFE5-.LFB5
 2399 0040 00000000 		.4byte	.LFB6
 2400 0044 28000000 		.4byte	.LFE6-.LFB6
 2401 0048 00000000 		.4byte	.LFB7
 2402 004c 2C000000 		.4byte	.LFE7-.LFB7
 2403 0050 00000000 		.4byte	.LFB8
 2404 0054 10000000 		.4byte	.LFE8-.LFB8
 2405 0058 00000000 		.4byte	.LFB9
 2406 005c 1C000000 		.4byte	.LFE9-.LFB9
 2407 0060 00000000 		.4byte	.LFB10
 2408 0064 18000000 		.4byte	.LFE10-.LFB10
 2409 0068 00000000 		.4byte	.LFB11
 2410 006c 10000000 		.4byte	.LFE11-.LFB11
 2411 0070 00000000 		.4byte	.LFB12
 2412 0074 10000000 		.4byte	.LFE12-.LFB12
 2413 0078 00000000 		.4byte	.LFB13
 2414 007c 1C000000 		.4byte	.LFE13-.LFB13
 2415 0080 00000000 		.4byte	.LFB14
 2416 0084 1C000000 		.4byte	.LFE14-.LFB14
 2417 0088 00000000 		.4byte	.LFB15
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 59


 2418 008c 5C000000 		.4byte	.LFE15-.LFB15
 2419 0090 00000000 		.4byte	.LFB16
 2420 0094 40000000 		.4byte	.LFE16-.LFB16
 2421 0098 00000000 		.4byte	.LFB17
 2422 009c 48000000 		.4byte	.LFE17-.LFB17
 2423 00a0 00000000 		.4byte	0
 2424 00a4 00000000 		.4byte	0
 2425              		.section	.debug_ranges,"",%progbits
 2426              	.Ldebug_ranges0:
 2427 0000 00000000 		.4byte	.LFB1
 2428 0004 08010000 		.4byte	.LFE1
 2429 0008 00000000 		.4byte	.LFB2
 2430 000c 24000000 		.4byte	.LFE2
 2431 0010 00000000 		.4byte	.LFB0
 2432 0014 20000000 		.4byte	.LFE0
 2433 0018 00000000 		.4byte	.LFB3
 2434 001c 10000000 		.4byte	.LFE3
 2435 0020 00000000 		.4byte	.LFB4
 2436 0024 14000000 		.4byte	.LFE4
 2437 0028 00000000 		.4byte	.LFB5
 2438 002c 14000000 		.4byte	.LFE5
 2439 0030 00000000 		.4byte	.LFB6
 2440 0034 28000000 		.4byte	.LFE6
 2441 0038 00000000 		.4byte	.LFB7
 2442 003c 2C000000 		.4byte	.LFE7
 2443 0040 00000000 		.4byte	.LFB8
 2444 0044 10000000 		.4byte	.LFE8
 2445 0048 00000000 		.4byte	.LFB9
 2446 004c 1C000000 		.4byte	.LFE9
 2447 0050 00000000 		.4byte	.LFB10
 2448 0054 18000000 		.4byte	.LFE10
 2449 0058 00000000 		.4byte	.LFB11
 2450 005c 10000000 		.4byte	.LFE11
 2451 0060 00000000 		.4byte	.LFB12
 2452 0064 10000000 		.4byte	.LFE12
 2453 0068 00000000 		.4byte	.LFB13
 2454 006c 1C000000 		.4byte	.LFE13
 2455 0070 00000000 		.4byte	.LFB14
 2456 0074 1C000000 		.4byte	.LFE14
 2457 0078 00000000 		.4byte	.LFB15
 2458 007c 5C000000 		.4byte	.LFE15
 2459 0080 00000000 		.4byte	.LFB16
 2460 0084 40000000 		.4byte	.LFE16
 2461 0088 00000000 		.4byte	.LFB17
 2462 008c 48000000 		.4byte	.LFE17
 2463 0090 00000000 		.4byte	0
 2464 0094 00000000 		.4byte	0
 2465              		.section	.debug_line,"",%progbits
 2466              	.Ldebug_line0:
 2467 0000 7C020000 		.section	.debug_str,"MS",%progbits,1
 2467      02004F00 
 2467      00000201 
 2467      FB0E0D00 
 2467      01010101 
 2468              	.LASF65:
 2469 0000 443A5C70 		.ascii	"D:\\psoc\\theory\\not_done_yet\\adc\\adc.cydsn\000"
 2469      736F635C 
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 60


 2469      7468656F 
 2469      72795C6E 
 2469      6F745F64 
 2470              	.LASF10:
 2471 002a 75696E74 		.ascii	"uint16\000"
 2471      313600
 2472              	.LASF25:
 2473 0031 61646355 		.ascii	"adcUser_Init\000"
 2473      7365725F 
 2473      496E6974 
 2473      00
 2474              	.LASF48:
 2475 003e 61646347 		.ascii	"adcGain\000"
 2475      61696E00 
 2476              	.LASF24:
 2477 0046 636F756E 		.ascii	"counts\000"
 2477      747300
 2478              	.LASF27:
 2479 004d 61646355 		.ascii	"adcUser_Start\000"
 2479      7365725F 
 2479      53746172 
 2479      7400
 2480              	.LASF63:
 2481 005b 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2481      43313120 
 2481      352E342E 
 2481      31203230 
 2481      31363036 
 2482 008e 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 2482      20726576 
 2482      6973696F 
 2482      6E203233 
 2482      37373135 
 2483 00c1 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2483      66756E63 
 2483      74696F6E 
 2483      2D736563 
 2483      74696F6E 
 2484              	.LASF7:
 2485 00e9 6C6F6E67 		.ascii	"long long unsigned int\000"
 2485      206C6F6E 
 2485      6720756E 
 2485      7369676E 
 2485      65642069 
 2486              	.LASF43:
 2487 0100 61646355 		.ascii	"adcUser_SetLimitMask\000"
 2487      7365725F 
 2487      5365744C 
 2487      696D6974 
 2487      4D61736B 
 2488              	.LASF6:
 2489 0115 6C6F6E67 		.ascii	"long long int\000"
 2489      206C6F6E 
 2489      6720696E 
 2489      7400
 2490              	.LASF0:
 2491 0123 7369676E 		.ascii	"signed char\000"
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 61


 2491      65642063 
 2491      68617200 
 2492              	.LASF13:
 2493 012f 696E7433 		.ascii	"int32\000"
 2493      3200
 2494              	.LASF4:
 2495 0135 6C6F6E67 		.ascii	"long int\000"
 2495      20696E74 
 2495      00
 2496              	.LASF47:
 2497 013e 61646355 		.ascii	"adcUser_SetGain\000"
 2497      7365725F 
 2497      53657447 
 2497      61696E00 
 2498              	.LASF9:
 2499 014e 75696E74 		.ascii	"uint8\000"
 2499      3800
 2500              	.LASF29:
 2501 0154 61646355 		.ascii	"adcUser_StartConvert\000"
 2501      7365725F 
 2501      53746172 
 2501      74436F6E 
 2501      76657274 
 2502              	.LASF61:
 2503 0169 43794465 		.ascii	"CyDelayUs\000"
 2503      6C617955 
 2503      7300
 2504              	.LASF44:
 2505 0173 61646355 		.ascii	"adcUser_SetSatMask\000"
 2505      7365725F 
 2505      53657453 
 2505      61744D61 
 2505      736B00
 2506              	.LASF16:
 2507 0186 646F7562 		.ascii	"double\000"
 2507      6C6500
 2508              	.LASF55:
 2509 018d 61646355 		.ascii	"adcUser_channelsConfig\000"
 2509      7365725F 
 2509      6368616E 
 2509      6E656C73 
 2509      436F6E66 
 2510              	.LASF11:
 2511 01a4 75696E74 		.ascii	"uint32\000"
 2511      333200
 2512              	.LASF52:
 2513 01ab 61646355 		.ascii	"adcUser_CountsTo_uVolts\000"
 2513      7365725F 
 2513      436F756E 
 2513      7473546F 
 2513      5F75566F 
 2514              	.LASF37:
 2515 01c3 61646355 		.ascii	"adcUser_SetChanMask\000"
 2515      7365725F 
 2515      53657443 
 2515      68616E4D 
 2515      61736B00 
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 62


 2516              	.LASF38:
 2517 01d7 6D61736B 		.ascii	"mask\000"
 2517      00
 2518              	.LASF57:
 2519 01dc 61646355 		.ascii	"adcUser_offset\000"
 2519      7365725F 
 2519      6F666673 
 2519      657400
 2520              	.LASF34:
 2521 01eb 7265744D 		.ascii	"retMode\000"
 2521      6F646500 
 2522              	.LASF41:
 2523 01f3 61646355 		.ascii	"adcUser_SetHighLimit\000"
 2523      7365725F 
 2523      53657448 
 2523      6967684C 
 2523      696D6974 
 2524              	.LASF8:
 2525 0208 756E7369 		.ascii	"unsigned int\000"
 2525      676E6564 
 2525      20696E74 
 2525      00
 2526              	.LASF66:
 2527 0215 75566F6C 		.ascii	"uVolts\000"
 2527      747300
 2528              	.LASF5:
 2529 021c 6C6F6E67 		.ascii	"long unsigned int\000"
 2529      20756E73 
 2529      69676E65 
 2529      6420696E 
 2529      7400
 2530              	.LASF54:
 2531 022e 766F6C74 		.ascii	"volts\000"
 2531      7300
 2532              	.LASF23:
 2533 0234 746D7052 		.ascii	"tmpRegVal\000"
 2533      65675661 
 2533      6C00
 2534              	.LASF49:
 2535 023e 61646355 		.ascii	"adcUser_CountsTo_mVolts\000"
 2535      7365725F 
 2535      436F756E 
 2535      7473546F 
 2535      5F6D566F 
 2536              	.LASF3:
 2537 0256 73686F72 		.ascii	"short unsigned int\000"
 2537      7420756E 
 2537      7369676E 
 2537      65642069 
 2537      6E7400
 2538              	.LASF30:
 2539 0269 61646355 		.ascii	"adcUser_StopConvert\000"
 2539      7365725F 
 2539      53746F70 
 2539      436F6E76 
 2539      65727400 
 2540              	.LASF60:
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 63


 2541 027d 4379496E 		.ascii	"CyIntSetVector\000"
 2541      74536574 
 2541      56656374 
 2541      6F7200
 2542              	.LASF51:
 2543 028c 6D566F6C 		.ascii	"mVolts\000"
 2543      747300
 2544              	.LASF19:
 2545 0293 72656733 		.ascii	"reg32\000"
 2545      3200
 2546              	.LASF14:
 2547 0299 666C6F61 		.ascii	"float32\000"
 2547      74333200 
 2548              	.LASF53:
 2549 02a1 61646355 		.ascii	"adcUser_CountsTo_Volts\000"
 2549      7365725F 
 2549      436F756E 
 2549      7473546F 
 2549      5F566F6C 
 2550              	.LASF21:
 2551 02b8 73697A65 		.ascii	"sizetype\000"
 2551      74797065 
 2551      00
 2552              	.LASF40:
 2553 02c1 6C6F774C 		.ascii	"lowLimit\000"
 2553      696D6974 
 2553      00
 2554              	.LASF20:
 2555 02ca 6C6F6E67 		.ascii	"long double\000"
 2555      20646F75 
 2555      626C6500 
 2556              	.LASF17:
 2557 02d6 696E7436 		.ascii	"int64\000"
 2557      3400
 2558              	.LASF59:
 2559 02dc 4379496E 		.ascii	"CyIntSetPriority\000"
 2559      74536574 
 2559      5072696F 
 2559      72697479 
 2559      00
 2560              	.LASF15:
 2561 02ed 666C6F61 		.ascii	"float\000"
 2561      7400
 2562              	.LASF32:
 2563 02f3 61646355 		.ascii	"adcUser_IsEndConversion\000"
 2563      7365725F 
 2563      4973456E 
 2563      64436F6E 
 2563      76657273 
 2564              	.LASF28:
 2565 030b 61646355 		.ascii	"adcUser_Stop\000"
 2565      7365725F 
 2565      53746F70 
 2565      00
 2566              	.LASF42:
 2567 0318 68696768 		.ascii	"highLimit\000"
 2567      4C696D69 
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 64


 2567      7400
 2568              	.LASF39:
 2569 0322 61646355 		.ascii	"adcUser_SetLowLimit\000"
 2569      7365725F 
 2569      5365744C 
 2569      6F774C69 
 2569      6D697400 
 2570              	.LASF62:
 2571 0336 43794861 		.ascii	"CyHalt\000"
 2571      6C7400
 2572              	.LASF58:
 2573 033d 61646355 		.ascii	"adcUser_countsPer10Volt\000"
 2573      7365725F 
 2573      636F756E 
 2573      74735065 
 2573      72313056 
 2574              	.LASF1:
 2575 0355 756E7369 		.ascii	"unsigned char\000"
 2575      676E6564 
 2575      20636861 
 2575      7200
 2576              	.LASF2:
 2577 0363 73686F72 		.ascii	"short int\000"
 2577      7420696E 
 2577      7400
 2578              	.LASF22:
 2579 036d 63684E75 		.ascii	"chNum\000"
 2579      6D00
 2580              	.LASF35:
 2581 0373 6368616E 		.ascii	"chan\000"
 2581      00
 2582              	.LASF18:
 2583 0378 63686172 		.ascii	"char\000"
 2583      00
 2584              	.LASF64:
 2585 037d 47656E65 		.ascii	"Generated_Source\\PSoC4\\adcUser.c\000"
 2585      72617465 
 2585      645F536F 
 2585      75726365 
 2585      5C50536F 
 2586              	.LASF26:
 2587 039e 61646355 		.ascii	"adcUser_Enable\000"
 2587      7365725F 
 2587      456E6162 
 2587      6C6500
 2588              	.LASF46:
 2589 03ad 6F666673 		.ascii	"offset\000"
 2589      657400
 2590              	.LASF50:
 2591 03b4 61646343 		.ascii	"adcCounts\000"
 2591      6F756E74 
 2591      7300
 2592              	.LASF31:
 2593 03be 73746174 		.ascii	"status\000"
 2593      757300
 2594              	.LASF56:
 2595 03c5 61646355 		.ascii	"adcUser_initVar\000"
ARM GAS  C:\Users\NGUYEN~1\AppData\Local\Temp\ccTmmHLF.s 			page 65


 2595      7365725F 
 2595      696E6974 
 2595      56617200 
 2596              	.LASF12:
 2597 03d5 696E7431 		.ascii	"int16\000"
 2597      3600
 2598              	.LASF45:
 2599 03db 61646355 		.ascii	"adcUser_SetOffset\000"
 2599      7365725F 
 2599      5365744F 
 2599      66667365 
 2599      7400
 2600              	.LASF33:
 2601 03ed 61646355 		.ascii	"adcUser_GetResult16\000"
 2601      7365725F 
 2601      47657452 
 2601      6573756C 
 2601      74313600 
 2602              	.LASF36:
 2603 0401 72657375 		.ascii	"result\000"
 2603      6C7400
 2604              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
